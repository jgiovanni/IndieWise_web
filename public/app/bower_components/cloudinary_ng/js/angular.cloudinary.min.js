(function(factory){"use strict";if(typeof define==="function"&&define.amd){define(["cloudinary","angular"],factory)}else{factory(cloudinary,angular)}})(function(cloudinary,angular){var cloudinaryModule=angular.module("cloudinary",[]);var cloudinaryAttr=function(attr){if(attr.match(/cl[A-Z]/))attr=attr.substring(2);return attr.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase()};var toCloudinaryAttributes=function(source,filter){var attributes={};var isNamedNodeMap=source&&(source.constructor.name==="NamedNodeMap"||source instanceof NamedNodeMap);angular.forEach(source,function(value,name){if(isNamedNodeMap){name=value.name;value=value.value}if(!filter||filter.exec(name)){attributes[cloudinaryAttr(name)]=value}});return attributes};["Src","Srcset","Href"].forEach(function(attrName){var normalized="cl"+attrName;attrName=attrName.toLowerCase();cloudinaryModule.directive(normalized,["$sniffer","cloudinary",function($sniffer,cloudinary){return{priority:99,link:function(scope,element,attr){var propName=attrName,name=attrName;if(attrName==="href"&&toString.call(element.prop("href"))==="[object SVGAnimatedString]"){name="xlinkHref";attr.$attr[name]="xlink:href";propName=null}attr.$observe(normalized,function(value){if(!value)return;value=cloudinary.url(value,toCloudinaryAttributes(element[0].attributes));attr.$set(name,value);if($sniffer.msie&&propName)element.prop(propName,attr[name])})}}}])});cloudinaryModule.directive("clTransformation",[function(){return{restrict:"E",transclude:false,require:"^clImage",link:function(scope,element,attrs,clImageCtrl){clImageCtrl.addTransformation(toCloudinaryAttributes(attrs,/^[^$]/))}}}]);cloudinaryModule.directive("clImage",["cloudinary",function(cloudinary){var Controller=function($scope){this.addTransformation=function(ts){$scope.transformations=$scope.transformations||[];$scope.transformations.push(ts)}};Controller.$inject=["$scope"];return{restrict:"E",replace:true,transclude:true,template:"<img ng-transclude/>",scope:{},priority:99,controller:Controller,link:function(scope,element,attrs){var options=toCloudinaryAttributes(attrs);var publicId=null;if(scope.transformations){options.transformation=scope.transformations}attrs.$observe("publicId",function(value){if(!value)return;publicId=value;loadImage()});attrs.$observe("version",function(value){if(!value)return;options["version"]=value;loadImage()});if(attrs.htmlWidth){element.attr("width",attrs.htmlWidth)}else{element.removeAttr("width")}if(attrs.htmlHeight){element.attr("height",attrs.htmlHeight)}else{element.removeAttr("height")}var loadImage=function(){if(options.responsive===""||options.responsive==="true"||options.responsive===true){options.responsive=true}var url=cloudinary.url(publicId,options);if(options.responsive){cloudinary.Util.setData(element[0],"src",url);cloudinary.cloudinary_update(element[0],options);cloudinary.responsive(options,false)}else{element.attr("src",url)}}}}}]);cloudinaryModule.provider("cloudinary",function(){var configuration=new cloudinary.Configuration;this.set=function(name,value){configuration.set(name,value);return this};this.get=function(name){return configuration.get(name)};this.$get=[function cloudinaryFactory(){var instance;if(cloudinary.CloudinaryJQuery&&jQuery){jQuery.cloudinary.config(configuration.config());instance=jQuery.cloudinary}else{instance=new cloudinary.Cloudinary(configuration.config())}cloudinary.Util.assign(instance,cloudinary);return instance}]})});