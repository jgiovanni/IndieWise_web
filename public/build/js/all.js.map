{"version":3,"sources":["app.js","controllers.js","home.js","browse.js","latest.js","winners.js","directives.js","services.js","utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxkzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjlztmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["function loadScript(url, callback) {\n\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n\n    script.onload = function () {\n        callback();\n    };\n    script.src = url;\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n/*if (window.chrome && window.chrome.cookies) {\n    loadScript('/pushwoosh-web-pushes-http-sdk.js?pw_application_code=73409-786EB', function () {\n    })\n} else {\n    loadScript('/pushwoosh-web-notifications.js', function () {\n    })\n}*/\n\n\n// jQuery.noConflict();\njQuery(document).foundation();\njQuery(document).ready(function (jQuery) {\n    'use strict';\n    //back to top\n    var backtotop = '#back-to-top';\n    if (jQuery(backtotop).length) {\n        var scrollTrigger = 100, // px\n            backToTop = function () {\n                var scrollTop = jQuery(window).scrollTop();\n                if (scrollTop > scrollTrigger) {\n                    jQuery(backtotop).addClass('show');\n                } else {\n                    jQuery(backtotop).removeClass('show');\n                }\n            };\n        backToTop();\n        jQuery(window).on('scroll', function () {\n            backToTop();\n        });\n        jQuery('#back-to-top').on('click', function (e) {\n            e.preventDefault();\n            jQuery('html,body').animate({\n                scrollTop: 0\n            }, 700);\n        });\n    }\n    \n    //register form\n    jQuery('div.social-login').mouseenter(function () {\n        jQuery('i.arrow-left').addClass('active');\n    }).mouseleave(function () {\n        jQuery('i.arrow-left').removeClass('active');\n    });\n    jQuery('div.register-form').mouseenter(function () {\n        jQuery('i.arrow-right').addClass('active');\n    }).mouseleave(function () {\n        jQuery('i.arrow-right').removeClass('active');\n    });\n\n    //vertical thumb slider\n    var thumb = jQuery('.thumb-slider .thumbs').find('.ver-thumbnail');\n    jQuery(thumb).on('click', function () {\n        var id = jQuery(this).attr('id');\n        //alert(id);\n        jQuery('.image').eq(0).show();\n        jQuery('.image').hide();\n        jQuery('.image').hide();\n        jQuery('.' + id).fadeIn();\n    });\n    var $par = jQuery('.thumb-slider .thumbs .thumbnails').scrollTop(0);\n    jQuery('.thumb-slider .thumbs a').click(function (e) {\n        e.preventDefault();                      // Prevent defautl Anchors behavior\n        var n = jQuery(this).hasClass('down') ? '+=200' : '-=200'; // Direction\n        $par.animate({scrollTop: n});\n    });\n});\n(function () {\n    'use strict';\n    angular.module('underscore', [])\n        .factory('_', function () {\n            return window.___; // assumes underscore has already been loaded on the page\n        });\n\n    angular\n        .module('IndieWise', [\n            'templates',\n            'ngIntercom',\n            'ngMaterial',\n            'ngSanitize',\n            'ngCookies',\n            'mm.foundation',\n            'angucomplete-alt',\n            'ngMessages',\n            'ngResource',\n            'ngWebSocket',\n            'angular-cloudinary',\n            'underscore',\n            'angularMoment',\n            'videosharing-embed',\n            'angular-loading-bar',\n            'LocalForageModule',\n            'ui.router',\n            'angular-google-analytics',\n            'angular-iscroll',\n            'ui.scroll',\n            'ui.scroll.jqlite',\n            'ngFileUpload',\n            'satellizer',\n            'angular-filepicker',\n            'pascalprecht.translate',\n            '720kb.socialshare',\n            'ngAnimate-animate.css',\n            'vjs.video',\n\n            // Videogular\n            // 'com.2fdevs.videogular',\n            // 'com.2fdevs.videogular.plugins.controls',\n            // 'com.2fdevs.videogular.plugins.overlayplay',\n            // 'com.2fdevs.videogular.plugins.poster',\n            // 'com.2fdevs.videogular.plugins.buffering',\n            // 'info.vietnamcode.nampnq.videogular.plugins.youtube',\n            // 'videogular.plugins.texttrack',\n            // 'videogular.plugins.vimeo',\n            // 'th.co.softever.videogular.plugins.quality',\n\n\n            'IndieWise.controllers',\n            'IndieWise.services',\n            'IndieWise.directives',\n            'IndieWise.filters',\n            'IndieWise.utilities',\n\n            // Modularity\n            'IndieWise.home',\n            'IndieWise.browse',\n            'IndieWise.latest',\n            'IndieWise.winners',\n        ])\n        .constant('moment', window.momentTimeZone)\n        .constant('angularMomentConfig', { timezone: 'UTC' })\n        .constant('API', window.API || '/api/')\n        .constant('BASE', window.BASE || BASE + 'public/')\n        .constant('INTERCOM_APPID', 'ppp65byn')\n        .config(['$authProvider', function ($authProvider) {\n            $authProvider.loginUrl = '/api/login';\n            $authProvider.signupUrl = '/api/register';\n\n            $authProvider.facebook({\n                clientId: '150687055270744',\n                url: '/auth/facebook',\n                redirectUri: window.location.origin + '/auth/facebook'\n            });\n\n            $authProvider.google({\n                clientId: '322274582930-4m1dueb708gvdic28n12e5dhqq121a6b.apps.googleusercontent.com',\n                url: '/auth/google'\n            });\n\n            $authProvider.twitter({\n                clientId: 'nnSvvHd86gBpxPwJaLGvzM2Mm',\n                url: '/auth/twitter'\n            });\n        }])\n        .config(['$intercomProvider', 'INTERCOM_APPID', function($intercomProvider, INTERCOM_APPID) {\n            // Either include your app_id here or later on boot\n            $intercomProvider\n                .appID(INTERCOM_APPID);\n\n            // you can include the Intercom's script yourself or use the built in async loading feature\n            $intercomProvider\n                .asyncLoading(true)\n        }])\n        /*.config(['flowFactoryProvider', function (flowFactoryProvider) {\n            flowFactoryProvider.defaults = {\n                //target: 'utils/upload.php',\n                query: {\n                    upload_preset: 'r0kuyqef'\n                },\n                target: 'https://api.cloudinary.com/v1_1/indiewise/upload',\n                permanentErrors: [404, 500, 501],\n                maxChunkRetries: 1,\n                chunkRetryInterval: 5000,\n                simultaneousUploads: 1,\n                singleFile: true\n            };\n            /!*flowFactoryProvider.on('catchAll', function (event) {\n             console.log('catchAll', arguments);\n             })*!/\n        }])*/\n        .config(['filepickerProvider', function (filepickerProvider) {\n            filepickerProvider.setKey('APbjTx44SlSuCI6P58jwvz');\n        }])\n        .config(['cloudinaryProvider', function (cloudinaryProvider) {\n            cloudinaryProvider.config({\n                upload_endpoint: 'https://api.cloudinary.com/v1_1/', // default\n                cloud_name: 'indiewise', // required\n                upload_preset: 'r0kuyqef', // optional\n            });\n\n            /*cloudinaryProvider\n                .set('cloud_name', 'indiewise')\n                .set('upload_preset', 'r0kuyqef');*/\n        }])\n        .config(['$compileProvider', function ($compileProvider) {\n            // significant performance boost\n            $compileProvider.debugInfoEnabled(false);\n        }])\n        .config(['AnalyticsProvider', function (AnalyticsProvider) {\n            // Add configuration code as desired - see below\n            AnalyticsProvider\n                .setAccount('UA-27155404-17')\n                // Remove prefix on launch\n                // .trackPrefix('alpha')\n                ;\n        }])\n        .config(['$httpProvider', function ($httpProvider) {\n            $httpProvider.interceptors.push('authInterceptor');\n        }])\n        .factory('authInterceptor', ['$q', '$injector', '$location', 'API', function ($q, $injector, $location, API) {\n            function retryHttpRequest(config, deferred){\n                function successCallback(response){\n                    deferred.resolve(response);\n                }\n                function errorCallback(response){\n                    deferred.reject(response);\n                }\n                var $http = $injector.get('$http');\n                $http(config).then(successCallback, errorCallback);\n            }\n\n            return {\n                'request': function (config) {\n                    config.headers = config.headers || {};\n                    return config;\n                },\n                'response': function (response) {\n                    // only contains 'content-type' and 'cache-control'\n                    // console.log(response.headers());\n                    return response;\n                },\n                'responseError': function (response) {\n\n                    if (response.status === 401 || response.status === 403) {\n                        //$location.path('/sign-in');\n                    } else if (response.status == 500 && response.config.url.indexOf('http') === -1 && response.config.url.indexOf('/api') > -1) {\n                        var deferred = $q.defer();\n                        //retryHttpRequest(response.config, deferred);\n                        return deferred.promise;\n                    }\n\n                    return response;\n                }\n            };\n        }])\n\n        .config(['$mdThemingProvider', '$mdIconProvider', 'BASE', function ($mdThemingProvider, $mdIconProvider, BASE) {\n            $mdThemingProvider.theme('default')\n                .primaryPalette('grey')\n                .accentPalette('indigo');\n\n            // Emoticons\n            $mdIconProvider\n                .icon('emotion', BASE + 'assets/svg/emotion.svg', 120)\n                .icon('angry', BASE + 'assets/svg/emoticons/angry.svg', 120)\n                .icon('annoyed', BASE + 'assets/svg/emoticons/annoyed.svg', 120)\n                .icon('big-smile', BASE + 'assets/svg/emoticons/big-smile.svg', 120)\n                .icon('bored', BASE + 'assets/svg/emoticons/bored.svg', 120)\n                .icon('confused', BASE + 'assets/svg/emoticons/confused.svg', 120)\n                .icon('crying', BASE + 'assets/svg/emoticons/crying.svg', 120)\n                .icon('disappointed', BASE + 'assets/svg/emoticons/disappointed.svg', 120)\n                .icon('emotional', BASE + 'assets/svg/emoticons/emotional.svg', 120)\n                .icon('grinning', BASE + 'assets/svg/emoticons/grinning.svg', 120)\n                .icon('happy', BASE + 'assets/svg/emoticons/happy.svg', 120)\n                .icon('hehe', BASE + 'assets/svg/emoticons/hehe.svg', 120)\n                .icon('hopeful', BASE + 'assets/svg/emoticons/hopeful.svg', 120)\n                .icon('interested', BASE + 'assets/svg/emoticons/interested.svg', 120)\n                .icon('joking', BASE + 'assets/svg/emoticons/joking.svg', 120)\n                .icon('kiss', BASE + 'assets/svg/emoticons/kiss.svg', 120)\n                .icon('love', BASE + 'assets/svg/emoticons/love.svg', 120)\n                .icon('mad', BASE + 'assets/svg/emoticons/mad.svg', 120)\n                .icon('meh', BASE + 'assets/svg/emoticons/meh.svg', 120)\n                .icon('mute', BASE + 'assets/svg/emoticons/mute.svg', 120)\n                .icon('nerdy', BASE + 'assets/svg/emoticons/nerdy.svg', 120)\n                .icon('neutral', BASE + 'assets/svg/emoticons/neutral.svg', 120)\n                .icon('ninja', BASE + 'assets/svg/emoticons/ninja.svg', 120)\n                .icon('nostalgic', BASE + 'assets/svg/emoticons/nostalgic.svg', 120)\n                .icon('oh-really', BASE + 'assets/svg/emoticons/oh-really.svg', 120)\n                .icon('sad', BASE + 'assets/svg/emoticons/sad.svg', 120)\n                .icon('sad-tear', BASE + 'assets/svg/emoticons/sad-tear.svg', 120)\n                .icon('sarcastic', BASE + 'assets/svg/emoticons/sarcastic.svg', 120)\n                .icon('sexy', BASE + 'assets/svg/emoticons/sexy.svg', 120)\n                .icon('shocked', BASE + 'assets/svg/emoticons/shocked.svg', 120)\n                .icon('silent', BASE + 'assets/svg/emoticons/silent.svg', 120)\n                .icon('silly', BASE + 'assets/svg/emoticons/silly.svg', 120)\n                .icon('smile', BASE + 'assets/svg/emoticons/smile.svg', 120)\n                .icon('sympathetic', BASE + 'assets/svg/emoticons/sympathetic.svg', 120)\n                .icon('wink', BASE + 'assets/svg/emoticons/wink.svg', 120)\n                .icon('woah', BASE + 'assets/svg/emoticons/woah.svg', 120)\n\n                // Other\n                .icon('matureSmall', BASE + 'assets/svg/OFLC_small_M.svg', 120)\n                .icon('matureSmall', BASE + 'assets/svg/OFLC_small_M.svg', 120)\n                .icon('trophy', BASE + 'assets/svg/trophy.svg', 120)\n                .icon('matureLarge', BASE + 'assets/svg/OFLC_large_M.svg', 120);\n        }])\n        .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', 'BASE', function ($stateProvider, $urlRouterProvider, $locationProvider, BASE) {\n\n            $urlRouterProvider.when('', '/home');\n            $urlRouterProvider.when('/', '/home');\n            $stateProvider\n                .state('home', {\n                    url: '/home',\n                    authenticate: false,\n                    templateUrl: 'home/view/index.html',\n                    controller: 'HomeCtrl as Home'\n                })\n                .state('browse', {\n                    url: '/browse?q&sort&types&genres',\n                    authenticate: false,\n                    templateUrl: 'browse/view/index.html',\n                    controller: 'BrowseCtrl as Browse'\n                })\n                .state('latest', {\n                    url: '/latest',\n                    authenticate: false,\n                    templateUrl: 'latest/view/index.html',\n                    controller: 'LatestCtrl as LC'\n                })\n                .state('winners', {\n                    url: '/winners',\n                    authenticate: false,\n                    templateUrl: 'winners/index.html',\n                    controller: 'WinnersCtrl as WC'\n                })\n                .state('video_critique', {\n                    url: '/{video_url_id}/critique/{url_id}',\n                    authenticate: false,\n                    templateUrl: 'common/critique.html',\n                    controller: 'VideoCritiqueCtrl as VCC',\n                    resolve: {\n                        Critique: ['$stateParams', 'DataService', function ($stateParams, DataService) {\n                            return DataService.item('critiques', $stateParams.url_id, 'project.owner').then(function (result) {\n                                return result;\n                            });\n                        }]\n                    }\n                })\n                .state('video_critique-edit', {\n                    url: '/{video_url_id}/critique/{url_id}/edit',\n                    authenticate: true,\n                    templateUrl: 'common/critique-edit.html',\n                    controller: 'VideoCritiqueEditCtrl',\n                    resolve: {\n                        Critique: ['AuthService', '$stateParams', 'DataService', function (AuthService, $stateParams, DataService) {\n                            return DataService.item('critiques', $stateParams.url_id, 'project.owner').then(function (result) {\n                                return (AuthService.isAuthenticated() && result.data.data.user_id === AuthService.currentUser.id) ? result : 'Not Owner';\n                            });\n                        }]\n                    }\n                })\n                // Authenticated Pages\n                .state('user', {\n                    url: '/user/{url_id}',\n                    authenticate: true,\n                    abstract: true,\n                    templateUrl: 'auth/user.html',\n                    controller: 'UserCtrl as UserC',\n                    resolve: {\n                        User: ['$stateParams', 'DataService', function ($stateParams, DataService) {\n                            return DataService.item('users', $stateParams.url_id).then(function (result) {\n                                return result.data.data;\n                            });\n                        }],\n                        UserStats: ['User', 'DataService', function (User, DataService) {\n                            return DataService.item('users/countUserStats', User.id).then(function (response) {\n                                return response.data;\n                            });\n                        }]\n                    }\n                })\n                .state('user.about', {\n                    url: '/about',\n                    templateUrl: 'auth/user-about.html',\n                    controller: 'UserAboutController as UserAboutCtrl'\n                })\n                .state('user.videos', {\n                    url: '/videos',\n                    templateUrl: 'auth/user-videos.html',\n                    controller: 'UserVideosController as UserVideosCtrl',\n                    resolve: {\n                        Videos: ['User', 'DataService', '$q', function (User, DataService, $q) {\n                            return DataService.collection('projects', {\n                                owner: User.id,\n                                sort: 'created_at',\n                                per_page: 50\n                            })\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }]\n                    }\n                })\n                .state('user.critiques', {\n                    url: '/critiques',\n                    templateUrl: 'auth/user-critiques.html',\n                    controller: 'UserCritiquesController as UserCritiquesCtrl',\n                    resolve: {\n                        Critiques: ['User', 'DataService', function (User, DataService) {\n                            return DataService.collection('critiques', {user: User.id, include: 'project'})\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }],\n                        Critiqued: ['User', 'DataService', function (User, DataService) {\n                            return DataService.collection('critiques', {notUser: User.id, include: 'project'})\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }]\n                    }\n                })\n                .state('user.reactions', {\n                    url: '/reactions',\n                    templateUrl: 'auth/user-reactions.html',\n                    controller: 'UserReactionsController as UserReactionsCtrl',\n                    resolve: {\n                        Reactions: ['User', 'DataService', function (User, DataService) {\n                            return DataService.collection('reactions', {user: User.id, include: 'user,project'})\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }],\n                        Reacted: ['User', 'DataService', function (User, DataService) {\n                            return DataService.collection('reactions', {notUser: User.id, include: 'user,project'})\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }]\n                    }\n                })\n                .state('user.awards', {\n                    url: '/awards',\n                    templateUrl: 'auth/user-awards.html',\n                    controller: 'UserAwardsController as UserAwardsCtrl',\n                    resolve: {\n                        Awards: ['User', 'DataService', function (User, DataService) {\n                            return DataService.collection('wins', {user: User.id}).then(function (result) {\n                                return result;\n                            });\n                        }],\n                        Nominations: ['User', 'DataService', function (User, DataService) {\n                            return DataService.collection('nominations', {\n                                user: User.id,\n                                include: 'user,project,award'\n                            })\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }],\n                        Nominated: ['User', 'DataService', function (User, DataService) {\n                            return DataService.collection('nominations', {\n                                notUser: User.id,\n                                include: 'user,project,award'\n                            })\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }]\n                    }\n                })\n                .state('profile', {\n                    url: '/profile',\n                    authenticate: true,\n                    abstract: true,\n                    templateUrl: 'auth/profile.html',\n                    controller: 'ProfileCtrl as Profile',\n                    resolve: {\n                        User: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.item('users', AuthService.currentUser.id, { include: 'genres' }).then(function (response) {\n                                return response.data.data;\n                            });\n                            /*return AuthService.getCurrentUser().then(function (response) {\n                                return response;\n                            });*/\n                        }],\n                        UserStats: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('users/countUserStats').then(function (response) {\n                                return response.data;\n                            });\n                        }]\n                    }\n                })\n                .state('profile.about', {\n                    url: '/about',\n                    authenticate: true,\n                    templateUrl: 'auth/profile-about.html',\n                    controller: 'ProfileAboutController as ProfileAboutCtrl'\n                })\n                .state('profile.upload', {\n                    url: '/upload',\n                    authenticate: true,\n                    templateUrl: 'auth/profile-upload.html',\n                    controller: 'ProfileUploadController as UC',\n                    resolve: {\n                        Access: ['$rootScope', 'DataService', 'AuthService', '$q', function ($rootScope, DataService, AuthService, $q) {\n                            var deferred = $q.defer();\n                            if ($rootScope.isNotVerified()) {\n                                $rootScope.toastAction('Please verify your account so you can upload videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\n                                deferred.reject(false);\n                            } else {\n                                DataService.collection('projects/limit').then(function (response) {\n                                    if (response.data.status) {\n                                        deferred.resolve(true);\n                                    } else {\n                                        $rootScope.toastMessage('Your upload limit of 3 has been reached');\n                                        deferred.reject(false);\n                                    }\n                                });\n                            }\n                            return deferred.promise;\n                        }]\n                    }\n                })\n                .state('profile.videos', {\n                    url: '/videos',\n                    authenticate: true,\n                    templateUrl: 'auth/profile-videos.html',\n                    controller: 'ProfileVideosController as ProfileVideosCtrl',\n                    resolve: {\n                        Videos: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('projects', {\n                                owner: AuthService.currentUser.id,\n                                sort: 'created_at',\n                                per_page: 50\n                            })\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }]\n                    }\n                })\n                .state('profile.videos-edit', {\n                    url: '/videos/{url_id}/edit',\n                    authenticate: true,\n                    templateUrl: 'auth/profile-videos-edit.html',\n                    controller: 'ProfileVideoEditCtrl as VEC',\n                    resolve: {\n                        Project: ['AuthService', '$stateParams', 'DataService', function (AuthService, $stateParams, DataService) {\n                            return DataService.item('projects', $stateParams.url_id).then(function (result) {\n                                return result;\n                            });\n                        }]\n                    }\n                })\n                .state('profile.critiques', {\n                    url: '/critiques',\n                    authenticate: true,\n                    templateUrl: 'auth/profile-critiques.html',\n                    controller: 'ProfileCritiquesController as ProfileCritiquesCtrl',\n                    resolve: {\n                        Critiques: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('critiques', {user: AuthService.currentUser.id})\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }],\n                        Critiqued: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('critiques', {notUser: AuthService.currentUser.id})\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }]\n                    }\n                })\n                .state('profile.reactions', {\n                    url: '/reactions',\n                    authenticate: true,\n                    templateUrl: 'auth/profile-reactions.html',\n                    controller: 'ProfileReactionsController as ProfileReactionsCtrl',\n                    resolve: {\n                        Reactions: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('reactions', {\n                                user: AuthService.currentUser.id,\n                                include: 'user,project'\n                            })\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }],\n                        Reacted: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('reactions', {\n                                notUser: AuthService.currentUser.id,\n                                include: 'user,project'\n                            })\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }]\n                    }\n                })\n                .state('profile.awards', {\n                    url: '/awards',\n                    authenticate: true,\n                    templateUrl: 'auth/profile-awards.html',\n                    controller: 'ProfileAwardsController as ProfileAwardsCtrl',\n                    resolve: {\n                        Awards: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('wins', {user: AuthService.currentUser.id}).then(function (result) {\n                                return result;\n                            });\n                        }],\n                        Nominations: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('nominations', {\n                                user: AuthService.currentUser.id,\n                                include: 'user,project,award'\n                            })\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }],\n                        Nominated: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('nominations', {\n                                notUser: AuthService.currentUser.id,\n                                include: 'user,project,award'\n                            })\n                                .then(function (result) {\n                                    return result;\n                                });\n                        }]\n                    }\n                })\n                .state('profile.playlists', {\n                    url: '/playlists',\n                    authenticate: true,\n                    templateUrl: 'auth/profile-playlists.html',\n                    controller: 'ProfilePlaylistsController as ProfilePlaylistsCtrl',\n                    resolve: {\n                        Playlists: ['AuthService', 'DataService', function (AuthService, DataService) {\n                            return DataService.collection('playlists').then(function (result) {\n                                return result;\n                            });\n                        }]\n                    }\n                })\n                .state('profile.settings', {\n                    url: '/settings',\n                    authenticate: true,\n                    templateUrl: 'auth/profile-settings.html',\n                    controller: 'ProfileSettingsController as PSC',\n                    resolve: {\n                        Genres: ['AuthService', 'DataService', '$q', function (AuthService, DataService, $q) {\n                            return DataService.collection('genres', [],\n                                [{fieldName: 'user', operator: 'in', value: AuthService.currentUser.id}],\n                                20, false, false, 1).then(function (result) {\n                                return result;\n                            });\n                        }],\n                        UserTypes: ['AuthService', 'DataService', '$q', function (AuthService, DataService, $q) {\n                            return DataService.collection('types', [],\n                                [{fieldName: 'user', operator: 'in', value: AuthService.currentUser.id}],\n                                20, false, false, 1).then(function (result) {\n                                return result;\n                            });\n                        }]\n                    }\n                })\n                .state('messages', {\n                    url: '/messages',\n                    authenticate: true,\n                    templateUrl: 'auth/messages.html',\n                    controller: 'MessagesCtrl as Msgs',\n                    resolve: {\n                        Conversations: ['AuthService', 'DataService', '$q', function (AuthService, DataService, $q) {\n                            return DataService.collection('messages').then(function (result) {\n                                return result;\n                            });\n                        }]\n                    }\n                })\n                .state('messages.message', {\n                    authenticate: true,\n                    templateUrl: 'auth/messages.html',\n                    controller: 'MessagesCtrl as Msgs'\n                })\n                /*.state('notifications', {\n                 url: '/notifications',\n                 authenticate: true,\n                 templateUrl: 'auth/notifications.html',\n                 controller: 'NotificationsCtrl as NC'\n                 })*/\n\n                // Auth Pages\n                .state('register', {\n                    url: '/register',\n                    authenticate: false,\n                    templateUrl: 'auth/register.html',\n                    controller: 'RegisterCtrl as RC'\n                })\n                .state('forum_register', {\n                    url: '/community/register?redirect',\n                    authenticate: false,\n                    templateUrl: 'auth/register.html',\n                    controller: 'RegisterCtrl as RC'\n                })\n                .state('sign_in', {\n                    url: '/sign-in?redirect',\n                    authenticate: false,\n                    templateUrl: 'auth/sign-in.html',\n                    controller: 'SignInCtrl as SIC'\n                })\n                .state('forum_sign_in', {\n                    url: '/community/sign-in?redirect',\n                    authenticate: false,\n                    templateUrl: 'auth/sign-in.html',\n                    controller: 'SignInCtrl as SIC'\n                })\n                .state('reset_password', {\n                    url: '/reset-password?email&token',\n                    authenticate: false,\n                    templateUrl: 'auth/reset-password.html',\n                    controller: 'ForgotPasswordCtrl as FPC'\n                })\n\n                // Static Pages\n                .state('about', {\n                    url: '/about',\n                    authenticate: false,\n                    templateUrl: 'static/about.html'\n                })\n                .state('faq', {\n                    url: '/faq',\n                    authenticate: false,\n                    templateUrl: 'static/faq.html'\n                })\n                .state('contact', {\n                    url: '/contact?email',\n                    authenticate: false,\n                    templateUrl: 'static/contact.html',\n                    controller: 'ContactPageCtrl as CC'\n                })\n                .state('tos', {\n                    url: '/terms-of-service',\n                    authenticate: false,\n                    templateUrl: 'static/tos.html'\n                })\n                .state('advertise', {\n                    url: '/advertise',\n                    authenticate: false,\n                    templateUrl: 'static/advertise.html'\n                })\n                .state('privacy', {\n                    url: '/privacy-policy',\n                    authenticate: false,\n                    templateUrl: 'static/privacy.html'\n                })\n                .state('404', {\n                    url: '/404',\n                    authenticate: false,\n                    templateUrl: 'static/404.html'\n                })\n\n                // Video Pages\n                .state('video', {\n                    url: '/{url_id:[0-9a-zA-Z]{10,13}}',\n                    authenticate: false,\n                    templateUrl: 'common/video.html',\n                    controller: 'VideoCtrl as VC',\n                    resolve: {\n                        Project: ['$stateParams', 'DataService', '$q', function ($stateParams, DataService, $q) {\n                            var deferred = $q.defer();\n                            DataService.item('projects', $stateParams.url_id, '')\n                                .then(function (result) {\n                                    deferred.resolve(result.data.data);\n                                })\n                                .catch(function (response) {\n                                    deferred.reject(response);\n                                });\n\n                            return deferred.promise;\n                        }]\n                    }\n                })\n            ;\n\n            // $urlRouterProvider.otherwise('/404');\n            $locationProvider.html5Mode({\n                enabled: true,\n                requireBase: false,\n                rewriteLinks: false\n            });\n\n        }])\n        .config(['$transitionsProvider', function($transitionsProvider) {\n            $transitionsProvider.onError({}, function(transition) {\n                // debugger;\n                transition.promise.catch(function(error) {\n                    // debugger;\n                    console.error(error);\n                });\n            });\n        }])\n        .constant('StreamConfig', {\n            streamApiKey: '97wfnrargt9f',\n            streamApiSecret: '4t8dpp9bsap2svjhvu2n4x3h3bvwyyb3kgvg7san3bab2esu6vmnquffq2u95z82',\n            streamApp: '6408'\n        })\n        .run(['$rootScope', '$state', '$stateParams', 'AuthService', 'UtilsService', 'DataService', '$http', '$timeout', '$transitions', 'StreamConfig', 'anchorSmoothScroll', 'amMoment', '$intercom', 'FacebookAngularPatch', 'socket',\n            function ($rootScope, $state, $stateParams, AuthService, UtilsService, DataService, $http, $timeout, $transitions, StreamConfig, anchorSmoothScroll, amMoment, $intercom, FacebookAngularPatch, socket) {\n                attachFastClick(document.body);\n                $rootScope.AppData = {\n                    User: AuthService.currentUser,\n                    Notifications: {\n                        loaded: 'indeterminate'\n                    },\n                    NotificationsFeed: {\n                        loaded: 'indeterminate'\n                    },\n                    MessageNotifications: {\n                        loaded: 'indeterminate'\n                    },\n                    searchText: ''\n                };\n                $rootScope.$state = window.thisState = $state;\n                $rootScope.metadata = {\n                    title: '',\n                    description: '',\n                    image: '',\n                    url: ''\n                };\n                $rootScope.$stateParams = $stateParams;\n                $rootScope.isViewLoading = false;\n                $rootScope.today = moment().toDate();\n\n                $rootScope.isAuthenticated = function () {\n                    return AuthService.isAuthenticated();\n                };\n\n                $rootScope.isVerified = function () {\n                    return AuthService.isVerified();\n                };\n\n                $rootScope.isNotVerified = function () {\n                    var test = $rootScope.isVerified();\n                    return !test;\n                    // return AuthService.isNotVerified();\n                };\n\n                $rootScope.justVerified = function () {\n                    var test = window.location.search.indexOf('verification_successful') !== -1;\n                    if(test) {\n                        $rootScope.toastMessage('Account Verification Successful!');\n                    }\n                    return test;\n                };\n\n                $rootScope.listenNotifications = function (username) {\n                    $rootScope.refreshNotifications(username);\n                };\n\n                $rootScope.refreshNotifications = function (id) {\n                    $rootScope.AppData.Notifications.loaded = 'indeterminate';\n                    DataService.collection('getUserNotifications', {\n                        username: id\n                    }).then(function (res) {\n                        console.log(res.data);\n                        $rootScope.AppData.Notifications = {\n                            loaded: '',\n                            list: res.data,\n                            unseen: _.where(res.data, { seen: false }).length,\n                            unread: 0\n                        };\n                        console.log($rootScope.AppData.Notifications);\n                    });\n                };\n\n                $rootScope.StreamClient = stream.connect(StreamConfig.streamApiKey, null, StreamConfig.streamApp, {location: 'us-east'});\n                $rootScope.getNewToken = function (type, id) {\n                    return $http.get('/api/notifications/token?type=' + type).then(function (res) {\n                        return res.data.token;\n                    });\n                };\n\n                $rootScope.getMessagesFeed = function (feed) {\n                    feed.get({limit: 10}, function (error, response, body) {\n                        console.log('Messages Notifications: ', body);\n                        try {\n                            //var data = UtilsService.enrichRawNotifications(body.results);\n                            //console.log(data);\n                            $rootScope.AppData.MessageNotifications = {\n                                loaded: '',\n                                list: body.results,\n                                unseen: body.unseen,\n                                unread: body.unread\n                            };\n                            console.log($rootScope.AppData.MessageNotifications);\n                        } catch (e) {\n                            console.log(e);\n                        }\n                    });\n                };\n\n                $rootScope.subscribeUserFeeds = function () {\n                    $rootScope.getNewToken('notification', $rootScope.AppData.User.id).then(function (token) {\n                        var feed = $rootScope.StreamClient.feed('notification', $rootScope.AppData.User.id, token);\n                        feed.subscribe(function (obj) {\n                            console.log('Notification: ', obj);\n                            $rootScope.getNotificationsFeed(feed);\n                        }).then(function () {\n                            $rootScope.getNotificationsFeed(feed);\n                        });\n                    });\n                    $rootScope.getNewToken('message', $rootScope.AppData.User.id).then(function (token) {\n                        var feed = $rootScope.StreamClient.feed('message', $rootScope.AppData.User.id, token);\n                        feed.subscribe(function (obj) {\n                            console.log('Messages: ', obj);\n                            $rootScope.getMessagesFeed(feed);\n                        }).then(function () {\n                            $rootScope.getMessagesFeed(feed);\n                        });\n                    });\n                };\n\n                $rootScope.getNotificationsFeed = function (feed) {\n                    $http.get('/api/notifications/feed').then(function (res) {\n                        console.log('Notification: ', res.data.activities);\n                        $rootScope.AppData.Notifications = {\n                            loaded: '',\n                            list: res.data.activities,\n                            unseen: res.data.unseen,\n                            unread: res.data.unread\n                        };\n                    });\n                    /*feed.get({limit: 10}, function (error, response, body) {\n                        console.log('Notifications: ', body);\n                        try {\n                            var data = UtilsService.enrichRawNotifications(body.results);\n                            console.log(data);\n                            $rootScope.AppData.RawNotifications = {\n                                loaded: '',\n                                list: data.data,\n                                unseen: body.unseen,\n                                unread: body.unread\n                            };\n                        } catch (e) {\n                            console.log(e);\n                        }\n                    });*/\n                };\n\n                $rootScope.getNewMessages = function () {\n                    /*DataService.collection('messages/new').then(function (response) {\n                        $rootScope.AppData.MessageNotifications.loaded = true;\n                        $rootScope.AppData.MessageNotifications.unread = response.data.length;\n                    });*/\n                };\n\n                // Register listeners to $intercom using '.$on()' rather than '.on()' to trigger a safe $apply on $rootScope\n                $intercom.$on('show', function() {\n                    $rootScope.intercomShowing = true; // currently Intercom onShow callback isn't working\n                });\n                $intercom.$on('hide', function() {\n                    $rootScope.intercomShowing = false;\n                });\n\n                var endWatch = $rootScope.$watch('AppData.User', function (newValue, oldValue) {\n                    if (newValue && angular.isString(newValue.id)) {\n                        console.log('User Logged In');\n\n                        // Intercom\n                        newValue.name = newValue.fullName;\n                        $intercom.boot(newValue);\n                        // $intercom.show();\n\n                        // Push Notifications\n                        var OneSignal = window.OneSignal || [];\n                        OneSignal.push([\"init\", {\n                            appId: \"9972c4b2-7bd1-47c0-a2f8-213b8c767cd8\",\n                            safari_web_id: 'web.onesignal.auto.3f58661c-f8ad-4946-a9b6-84125eec4421',\n                            autoRegister: true,\n                            notifyButton: {\n                                enable: false /* Set to false to hide */\n                            }\n                        }]);\n\n                        if (!newValue.push_id) {\n                            OneSignal.getUserId().then(function(userId) {\n                                // console.log(\"OneSignal User ID:\", userId);\n                                AuthService.updateUser({id: newValue.id, push_id: userId});\n                                // DataService.update('users', newValue.id, { push_id: userId});\n                                // (Output) OneSignal User ID: 270a35cd-4dda-4b3f-b04e-41d7463a2316\n                            });\n                        }\n\n                        // initialize stream\n                        $rootScope.subscribeUserFeeds();\n                        //$rootScope.listenNotifications(newValue.username);\n\n                        $rootScope.getNewMessages();\n                        endWatch();\n                    }\n                });\n\n                // loading animation\n                $rootScope.setLoading = function () {\n                    $rootScope.isViewLoading = true;\n                };\n                $rootScope.unsetLoading = function () {\n                    $rootScope.isViewLoading = false;\n                };\n\n                // State transition hooks\n                $transitions.onBefore({}, function ($transition$) {\n                    $rootScope.setLoading();\n                });\n\n                $transitions.onStart({to: 'register', from: '*'}, function ($transition$) {\n                    return AuthService.isAuthenticated() ? $state.target('home') : true;\n                });\n                $transitions.onStart({to: 'sign_in', from: '*'}, function ($transition$) {\n                    return AuthService.isAuthenticated() ? $state.target('home') : true;\n                });\n                $transitions.onStart({to: 'reset_password', from: '*'}, function ($transition$) {\n                    return AuthService.isAuthenticated() ? $state.target('home') : true;\n                });\n                $transitions.onStart({\n                    to: function (state) {\n                        return !!state.authenticate;\n                    }\n                }, function ($transition$) {\n                    return AuthService.currentUser ? true : AuthService.getCurrentUser().then(function () {\n                        return true;\n                    }, function () {\n                        return $state.target('sign_in');\n                    });\n\n                });\n\n                $transitions.onSuccess({}, function () {\n                    $rootScope.unsetLoading();\n                    $timeout(function () {\n                        jQuery(document).foundation();\n                        // angular.element('body').scrollTop(0);\n                        anchorSmoothScroll.scrollTo('body');\n                    }, 100);\n                    // Analytics.trackPage($location.path());\n                });\n\n                $transitions.onError({}, function ($transition$) {\n                    // debugger;\n                    console.log($state);\n                });\n\n                $state.defaultErrorHandler(function(err) {\n                    // debugger;\n                    // handle err\n                });\n\n                //search bar\n                jQuery('.search.end').on('click', function () {\n                    if (jQuery(this).children().hasClass('fa-search')) {\n                        jQuery(this).children().removeClass('fa-search');\n                        jQuery(this).children().addClass('fa-times');\n                        $rootScope.$broadcast('overVideoPlayer', false);\n\n                    } else {\n                        jQuery(this).children().removeClass('fa-times');\n                        jQuery(this).children().addClass('fa-search');\n                        $rootScope.$broadcast('overVideoPlayer', true);\n                    }\n                    jQuery(this).toggleClass('search-active');\n                    jQuery('#search-bar').slideToggle();\n\n                });\n\n            }\n        ])\n        .config(['$localForageProvider', function ($localForageProvider) {\n            $localForageProvider.config({\n                //driver: 'localStorageWrapper', // if you want to force a driver\n                name: 'iw', // name of the database and prefix for your data, it is 'lf' by default\n                version: 1.0, // version of the database, you shouldn't have to use this\n                storeName: 'keyvaluepairs', // name of the table\n                description: 'some description'\n            });\n        }])\n        .config(['$sceDelegateProvider', function ($sceDelegateProvider) {\n            $sceDelegateProvider.resourceUrlWhitelist([\n                'self',\n                'https://getindiewise.com/**',\n                'https://www.getindiewise.com/**',\n                new RegExp('^(http[s]?):\\/\\/(w{3}.)?youtube\\.com/.+$')\n            ]);\n        }]);\n})();\n","(function () {\n    'use strict';\n\n    function mysql_real_escape_string(str) {\n        return str.replace(/[\\0\\x08\\x09\\x1a\\n\\r\"'\\\\\\%]/g, function (char) {\n            switch (char) {\n                case \"\\0\":\n                    return \"\\\\0\";\n                case \"\\x08\":\n                    return \"\\\\b\";\n                case \"\\x09\":\n                    return \"\\\\t\";\n                case \"\\x1a\":\n                    return \"\\\\z\";\n                case \"\\n\":\n                    return \"\\\\n\";\n                case \"\\r\":\n                    return \"\\\\r\";\n                case \"\\\"\":\n                case \"'\":\n                case \"\\\\\":\n                case \"%\":\n                    return \"\\\\\" + char; // prepends a backslash to backslash, percent,\n                                        // and double/single quotes\n            }\n        });\n    }\n\n    angular.module('IndieWise.controllers', [])\n    // Auth Controllers\n        .controller('SignInCtrl', SignInCtrl)\n        .controller('ForgotPasswordCtrl', ForgotPasswordCtrl)\n        .controller('RegisterCtrl', RegisterCtrl)\n\n        // Profile Controllers\n        .controller('ProfileCtrl', ProfileCtrl)\n        .controller('ProfileAboutController', UserAboutController)\n        .controller('ProfilePlaylistsController', ProfilePlaylistsController)\n        .controller('ProfileVideosController', UserVideosController)\n        .controller('ProfileVideoEditCtrl', ProfileVideoEditCtrl)\n        .controller('ProfileCritiquesController', UserCritiquesController)\n        .controller('ProfileReactionsController', UserReactionsController)\n        .controller('ProfileAwardsController', UserAwardsController)\n        .controller('ProfileSettingsController', ProfileSettingsController)\n        .controller('ProfileUploadController', ProfileUploadController)\n\n        // User Controllers\n        .controller('UserCtrl', UserCtrl)\n        .controller('UserAboutController', UserAboutController)\n        .controller('UserVideosController', UserVideosController)\n        .controller('UserCritiquesController', UserCritiquesController)\n        .controller('UserReactionsController', UserReactionsController)\n        .controller('UserAwardsController', UserAwardsController)\n        // .controller('EditProfileCtrl', EditProfileCtrl)\n        .controller('MessagesCtrl', MessagesCtrl)\n        .controller('NotificationsCtrl', NotificationsCtrl)\n\n        // Other App Controllers\n        .controller('BodyCtrl', BodyCtrl)\n        // .controller('HomeCtrl', HomeCtrl)\n        // .controller('BrowseCtrl', BrowseCtrl)\n        // .controller('LatestCtrl', LatestCtrl)\n        // .controller('AdvancedResultsCtrl', AdvancedResultsCtrl)\n        // .controller('ResultsCtrl', ResultsCtrl)\n        .controller('VideoCtrl', VideoCtrl)\n        .controller('VideoCritiqueCtrl', VideoCritiqueCtrl)\n        .controller('VideoCritiqueEditCtrl', VideoCritiqueEditCtrl)\n        .controller('ContactPageCtrl', ContactPageCtrl)\n\n    ;\n\n    RegisterCtrl.$inject = ['$rootScope', '$timeout', '$q', '$state', 'AuthService', 'DataService', 'anchorSmoothScroll', '_'];\n    function RegisterCtrl($rootScope, $timeout, $q, $state, AuthService, DataService, anchorSmoothScroll, _) {\n        $rootScope.metadata.title = 'Register';\n        var self = this;\n        self.creating = false;\n        self.accountCreated = false;\n        self.genresArr = [];\n        self.typesArr = [];\n        self.user = {\n            email: '',\n            password: '',\n            passwordCheck: '',\n            firstName: '',\n            lastName: '',\n            gender: '',\n            // genres: [],\n            // types: []\n            //selected_genres: ''\n        };\n\n        self.dobDay = '';\n        self.dobMonth = '';\n        self.dobYear = '';\n        self.authErrors = null;\n        self.errors = {\n            email: false,\n            gender: false,\n            genres: false,\n            types: false\n        };\n\n        self.thisYear = moment().year();\n        self.yearsList = [];\n        for (var i = self.thisYear; i > (self.thisYear - 100); i--) {\n            self.yearsList.push(i);\n        }\n\n        /*$rootScope.generateGenres().then(function (res) {\n         $rootScope.genresList = self.genresList = res;\n         });\n         $rootScope.generateTypes().then(function (res) {\n         $rootScope.typesList = self.typesList = res;\n         });*/\n        $rootScope.generateCountries().then(function (res) {\n            $rootScope.countryList = self.countryList = res;\n        });\n\n        self.checkEmailUse = function () {\n            if (angular.isString(self.user.email) && self.user.email.length) {\n                DataService.collection('emailCheck', {email: mysql_real_escape_string(self.user.email)}).then(function (res) {\n                    self.errors.email = res.data && res.data.verify === true ? 1 : 0;\n                });\n            } else self.errors.email = false;\n        };\n\n        self.doRegister = function () {\n            if (!self.creating) {\n                self.creating = true;\n                self.errors.gender = !self.user.gender.length;\n\n                if (self.errors.gender) {\n                    anchorSmoothScroll.scrollTo('errors');\n                    return false;\n                }\n\n                self.user.dob = moment().set({\n                    'year': self.dobYear,\n                    'month': parseInt(self.dobMonth) - 1,\n                    'date': self.dobDay\n                }).startOf('day').format('YYYY-MM-DD HH:mm:ss');\n                AuthService.createUser(self.user).then(function (res) {\n                    if (!res.status) {\n                        self.authErrors = res.errors;\n                        $rootScope.toastMessage('There is an error, please check your form');\n                        // console.log('Failed', res);\n                    } else {\n                        // console.log('Success', res);\n                        //window.location.reload();\n                        $rootScope.toastMessage('Account created!');\n                    }\n                    // window.location.reload();\n                    self.creating = false;\n                });\n            } else {\n                $rootScope.toastMessage('Please wait...');\n            }\n        };\n\n        self.authenticate = function (provider) {\n            self.error = null;\n            AuthService.socialLogin(provider, true).then(function (a) {\n                if (a) {\n                    $state.go('profile.about', {reload: true});\n                    // console.log(a);\n                }\n            });\n        };\n\n        $timeout(function () {\n            jQuery(document).foundation();\n            $timeout(function () {\n                jQuery(document).foundation();\n            }, 500);\n        }, 500);\n    }\n\n    SignInCtrl.$inject = ['$rootScope', '$timeout', '$q', '$state', 'AuthService', '$window', '$modal', 'cfpLoadingBar'];\n    function SignInCtrl($rootScope, $timeout, $q, $state, AuthService, $window, $modal, cfpLoadingBar) {\n        $rootScope.metadata.title = 'Sign In';\n        var self = this;\n        self.authErrors = null;\n        self.user = {\n            email: '',\n            password: ''\n        };\n\n        self.doLogin = function (redirect) {\n            redirect = redirect || true;\n            self.error = false;\n            AuthService.login(self.user.email, self.user.password).then(function (res) {\n                if (res.status === false) {\n                    self.authErrors = res.errors;\n                    return false;\n                } else {\n                    if (redirect && angular.isDefined(res)) {\n                        if($rootScope.$stateParams.redirect) {\n                            return $window.location.href = $rootScope.$stateParams.redirect;\n                        }\n                        $state.go('home');\n                    }\n                }\n                cfpLoadingBar.complete();\n            }, function (res) {\n                self.error = res;\n                // console.log('Failed', res);\n            });\n        };\n\n        self.authenticate = function (provider) {\n            self.error = null;\n            AuthService.socialLogin(provider, false).then(function (res) {\n                if (res && res.hasOwnProperty('status') && res.status === false) {\n                    self.authErrors = res.errors;\n                    $rootScope.toastMessage('There is an error, please check your form');\n                    // console.log('Failed', res);\n                } else {\n                    $rootScope.toastMessage('There is an error, please try again');\n                }\n            });\n        };\n\n        $timeout(function () {\n            jQuery(document).foundation();\n            $timeout(function () {\n                jQuery(document).foundation();\n            }, 500);\n        }, 500);\n    }\n\n    ForgotPasswordCtrl.$inject = ['$rootScope', '$state', 'AuthService'];\n    function ForgotPasswordCtrl($rootScope, $state, AuthService) {\n        $rootScope.metadata.title = 'Password Recovery';\n\n        var self = this;\n        self.email = '';\n        self.reseting = {\n            newPassword: null,\n            newPasswordCheck: null\n        };\n        self.hasToken = $rootScope.$stateParams.token || false;\n\n        self.doPasswordResetRequest = function () {\n            AuthService.requestPasswordReset(self.email).then(function (res) {\n                // console.log(res);\n                $rootScope.toastMessage('Check your inbox for our email! Should be there soon.');\n                $state.go('sign_in');\n            }, function (error) {\n                $rootScope.toastMessage('Error: ' + error.message);\n            });\n        };\n\n        self.confirmReset = function () {\n            if (self.reseting.newPassword === self.reseting.newPasswordCheck && angular.isString(self.hasToken)) {\n                AuthService.passwordReset($rootScope.$stateParams.email, self.reseting.newPassword, self.reseting.newPasswordCheck, self.hasToken)\n                    .then(function (res) {\n\n                    })\n            } else return false;\n        };\n\n        if (self.hasToken) {\n\n        }\n    }\n\n    BodyCtrl.$inject = ['$rootScope', '$localForage', '$q', '$state', 'AuthService', '$mdToast', 'UserActions', '$sce', 'DataService', '_', '$interval', '$mdSidenav'];\n    function BodyCtrl($rootScope, $localForage, $q, $state, AuthService, $mdToast, UserActions, $sce, DataService, _, $interval, $mdSidenav) {\n        var self = this;\n\n        self.selected = null;\n        $rootScope.AppData.searchText = decodeURIComponent($rootScope.$stateParams.q || '');\n        self.selectedItem = '';\n\n        self.notificationsTemplate = $sce.trustAsResourceUrl('src/directives/notification.html');\n        self.newsletterRegister = newsletterRegister;\n\n        //if cache is too old, empty it\n        $localForage.getItem('timestamp', true).then(function (timestamp) {\n            // if older than 1 week, clear it\n            if (moment(timestamp).add(1, 'w').isBefore()) {\n                $localForage.clear();\n            }\n        }, function (error) {\n            $localForage.clear();\n        });\n\n        // Recent Videos Footer Section\n        DataService.collection('projects', {per_page: 3, sort: 'created_at'}).then(function (result) {\n            _.each(result.data.data, function (i) {\n                // i.created_at = $filter('amUTC')(i.created_at);\n            });\n            self.footerRecentVideos = result.data;\n        });\n\n        self.startSearch = function (text) {\n            if (text) {\n                self.toPage('browse', {q: text});\n            }\n        };\n\n        var isIOS = function() {\n            return !!(navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/iPad/i));\n        };\n        var isAndroid = function() {\n            return !!navigator.userAgent.match(/Android/i);\n        };\n\n        $rootScope.isMobile = self.isMobile = function () {\n            return isIOS() || isAndroid() || Foundation.MediaQuery.current === 'small';\n        };\n\n        $rootScope.requestVerificationEmail = function () {\n            debugger;\n            AuthService.requestVerification().then(function () {\n                self.verificationEmailSentMessage = true;\n            });\n        };\n\n        $rootScope.generateGenres = function () {\n            var deferred = $q.defer();\n            // $localForage.removeItem('genres');\n            $localForage.getItem('genres', true).then(function (data) {\n                $rootScope.genresList = data;\n                deferred.resolve(data);\n            }, function (error) {\n                DataService.collection('genres').then(function (result) {\n                    $rootScope.genresList = result.data.Genres;\n                    $localForage.setItem('genres', result.data.Genres);\n                    $localForage.setItem('timestamp', moment().toISOString());\n                    deferred.resolve(result.data.Genres);\n                });\n            });\n\n            return deferred.promise;\n        };\n\n        $rootScope.generateTypes = function () {\n            var deferred = $q.defer();\n            // $localForage.removeItem('types');\n            $localForage.getItem('types', true).then(function (data) {\n                $rootScope.typesList = data;\n                deferred.resolve(data);\n            }, function (error) {\n                DataService.collection('types').then(function (result) {\n                    $rootScope.typesList = result.data.Types;\n                    $localForage.setItem('types', result.data.Types);\n                    $localForage.setItem('timestamp', moment().toISOString());\n                    deferred.resolve(result.data.Types);\n                });\n            });\n\n            return deferred.promise;\n        };\n\n        $rootScope.generateCountries = function () {\n            var deferred = $q.defer();\n            // $localForage.removeItem('countries');\n            $localForage.getItem('countries', true).then(function (data) {\n                $rootScope.countryList = data;\n                deferred.resolve(data);\n            }, function (error) {\n                DataService.collection('countries').then(function (result) {\n                    $rootScope.countryList = result.data.Countries;\n                    $localForage.setItem('countries', result.data.Countries);\n                    $localForage.setItem('timestamp', moment().toISOString());\n                    deferred.resolve(result.data.Countries);\n                });\n            });\n\n            return deferred.promise;\n        };\n\n        $rootScope.generateLanguages = function () {\n            var deferred = $q.defer();\n            // $localForage.removeItem('languages');\n            $localForage.getItem('languages', true).then(function (data) {\n                $rootScope.languageList = data;\n                deferred.resolve(data);\n            }, function (error) {\n                DataService.collection('languages').then(function (result) {\n                    $rootScope.languageList = result.data.Languages;\n                    $localForage.setItem('languages', result.data.Languages);\n                    $localForage.setItem('timestamp', moment().toISOString());\n                    deferred.resolve(result.data.Languages);\n                });\n            });\n\n            return deferred.promise;\n        };\n\n        $rootScope.generateReactions = function () {\n            return [\n                {name: 'Happy', emotion: 'happy', icon: 'happy'},\n                {name: 'Sad', emotion: 'sad', icon: 'sad'},\n                {name: 'Offended', emotion: 'offended', icon: 'annoyed'},\n                {name: 'Amused', emotion: 'amused', icon: 'grinning'},\n                {name: 'Mad', emotion: 'mad', icon: 'mad'},\n                {name: 'Furious', emotion: 'furious', icon: 'angry'},\n                {name: 'Awesome', emotion: 'awesome', icon: 'woah'},\n                {name: 'Terrified', emotion: 'terrified', icon: 'shocked'},\n                {name: 'Confused', emotion: 'confused', icon: 'confused'},\n                {name: 'In-Love', emotion: 'in-love', icon: 'love'},\n                {name: 'Amazed', emotion: 'amazed', icon: 'woah'},\n                {name: 'Motivated', emotion: 'motivated', icon: 'interested'},\n                {name: 'Inspired', emotion: 'inspired', icon: 'interested'},\n                {name: 'Bored', emotion: 'bored', icon: 'bored'},\n                {name: 'Sleepy', emotion: 'sleepy', icon: 'bored'},\n                //  {name: 'Determined', emotion: 'determined', icon: 'interested'},\n                {name: 'Emotional', emotion: 'emotional', icon: 'emotional'},\n                {name: 'Excited', emotion: 'excited', icon: 'big-smile'},\n                {name: 'Nostalgic', emotion: 'nostalgic', icon: 'nostalgic'},\n                {name: 'Annoyed', emotion: 'annoyed', icon: 'annoyed'},\n                {name: 'Sorry', emotion: 'sorry', icon: 'sad-tear'},\n                {name: 'Ashamed', emotion: 'ashamed', icon: 'sad-tear'},\n                {name: 'Meh', emotion: 'meh', icon: 'meh'},\n                {name: 'Special', emotion: 'special', icon: 'wink'},\n                {name: 'Sick', emotion: 'sick', icon: 'mute'},\n                {name: 'Great', emotion: 'great', icon: 'grinning'},\n                // {name: 'Down', emotion: 'down', icon: 'sad'},\n                // {name: 'Better', emotion: 'better', icon: 'interested'},\n                {name: 'Guilty', emotion: 'guilty', icon: 'sympathetic'},\n                {name: 'Hopeful', emotion: 'hopeful', icon: 'hopeful'},\n                {name: 'Hopeless', emotion: 'hopeless', icon: 'sad'},\n                {name: 'Secure', emotion: 'secure', icon: 'nerdy'},\n                {name: 'Blessed', emotion: 'blessed', icon: 'grinning'},\n                {name: 'Interested', emotion: 'interested', icon: 'interested'},\n                {name: 'Comfortable', emotion: 'comfortable', icon: 'hehe'},\n                {name: 'Disturbed', emotion: 'disturbed', icon: 'confused'},\n                {name: 'Stupid', emotion: 'stupid', icon: 'confused'},\n                {name: 'Sexy', emotion: 'sexy', icon: 'sexy'},\n                {name: 'Relaxed', emotion: 'relaxed', icon: 'happy'},\n\n                {name: 'Empowered', emotion: 'empowered', icon: 'happy'},\n                {name: 'Cool', emotion: 'cool', icon: 'happy'},\n                {name: 'Pumped', emotion: 'pumped', icon: 'happy'},\n                {name: 'Turned On', emotion: 'turned on', icon: 'happy'},\n                {name: 'Proud', emotion: 'Proud', icon: 'happy'},\n                {name: 'Disgusted', emotion: 'disgusted', icon: 'annoyed'},\n                {name: 'Sympathetic', emotion: 'sympathetic', icon: 'happy'},\n                {name: 'Overwhelmed', emotion: 'overwhelmed', icon: 'happy'},\n                {name: 'Passionate', emotion: 'passionate', icon: 'happy'},\n                {name: 'Thrilled', emotion: 'thrilled', icon: 'happy'},\n                {name: 'Loved', emotion: 'loved', icon: 'happy'},\n                {name: 'Thankful', emotion: 'thankful', icon: 'happy'},\n                {name: 'Appreciated', emotion: 'appreciated', icon: 'happy'},\n                {name: 'Romantic', emotion: 'romantic', icon: 'love'},\n                {name: 'Chill', emotion: 'chill', icon: 'happy'},\n                {name: 'Pissed Off', emotion: 'pissed off', icon: 'annoyed'},\n                {name: 'Accomplished', emotion: 'accomplished', icon: 'happy'},\n                {name: 'Honored', emotion: 'honored', icon: 'happy'},\n                {name: 'Young', emotion: 'young', icon: 'happy'},\n                {name: 'Wild', emotion: 'wild', icon: 'happy'},\n                {name: 'Old', emotion: 'old', icon: 'happy'},\n                {name: 'Free', emotion: 'free', icon: 'happy'},\n                {name: 'Epic', emotion: 'epic', icon: 'happy'},\n                // {name: 'Engaged', emotion: 'engaged', icon: 'happy'},\n                {name: 'Fired Up', emotion: 'fired up', icon: 'happy'},\n                {name: 'Detached', emotion: 'detached', icon: 'happy'},\n                {name: 'Disconnected', emotion: 'disconnected', icon: 'confused'},\n                {name: 'Connected', emotion: 'connected', icon: 'happy'},\n                // {name: 'Distant', emotion: 'distant', icon: 'happy'},\n                {name: 'Beautiful', emotion: 'beautiful', icon: 'happy'},\n\n                {name: 'Confident', emotion: 'confident', icon: 'happy'},\n                {name: 'Positive', emotion: 'positive', icon: 'happy'},\n                {name: 'Negative', emotion: 'negative', icon: 'annoyed'},\n                {name: 'Heartbroken', emotion: 'heartbroken', icon: 'emotional'},\n                {name: 'Silly', emotion: 'silly', icon: 'hehe'},\n                {name: 'Disappointed', emotion: 'disappointed', icon: 'sad'},\n                {name: 'Stressed', emotion: 'stressed', icon: 'annoyed'},\n                {name: 'Fantastic', emotion: 'fantastic', icon: 'big-smile'},\n                {name: 'Hungry', emotion: 'hungry', icon: 'annoyed'},\n                {name: 'Shocked', emotion: 'shocked', icon: 'shocked'},\n                {name: 'Frustrated', emotion: 'frustrated', icon: 'annoyed'},\n                {name: 'Engrossed', emotion: 'engrossed', icon: 'interested'},\n                {name: 'Peaceful', emotion: 'peaceful', icon: 'happy'},\n                {name: 'Surprised', emotion: 'surprised', icon: 'woah'},\n                {name: 'Satisfied', emotion: 'satisfied', icon: 'happy'},\n                {name: 'Incomplete', emotion: 'incomplete', icon: 'sad'},\n                {name: 'Complete', emotion: 'complete', icon: 'happy'},\n                {name: 'Entertained', emotion: 'entertained', icon: 'hehe'},\n                {name: 'Enlightened', emotion: 'enlightened', icon: 'interested'},\n                {name: 'Relieved', emotion: 'relieved', icon: 'happy'},\n                {name: 'Concerned', emotion: 'concerned', icon: 'sympathetic'},\n                {name: 'Strong', emotion: 'strong', icon: 'happy'},\n                {name: 'Optimistic', emotion: 'optimistic', icon: 'happy'},\n                {name: 'Discouraged', emotion: 'discouraged', icon: 'happy'},\n                {name: 'Lucky', emotion: 'lucky', icon: 'happy'},\n                {name: 'Scared', emotion: 'scared', icon: 'happy'},\n                {name: 'Brave', emotion: 'brave', icon: 'happy'},\n                {name: 'Naughty', emotion: 'naughty', icon: 'sexy'},\n                {name: 'Alert', emotion: 'alert', icon: 'happy'},\n                {name: 'Alive', emotion: 'alive', icon: 'happy'},\n                {name: 'Perfect', emotion: 'perfect', icon: 'happy'},\n                {name: 'Nervous', emotion: 'nervous', icon: 'happy'},\n                {name: 'Tense', emotion: 'tense', icon: 'annoyed'},\n                // {name: 'Eager', emotion: 'eager', icon: 'happy'},\n                {name: 'Impatient', emotion: 'impatient', icon: 'annoyed'},\n                {name: 'Philosophical', emotion: 'philosophical', icon: 'interested'},\n                {name: 'Empty', emotion: 'empty', icon: 'happy'},\n                {name: 'Informed', emotion: 'informed', icon: 'nerdy'},\n                {name: 'Playful', emotion: 'playful', icon: 'happy'},\n                {name: 'Wise', emotion: 'wise', icon: 'nerdy'},\n                {name: 'Refreshed', emotion: 'refreshed', icon: 'happy'},\n                // {name: 'Fortunate', emotion: 'fortunate', icon: 'happy'},\n                {name: 'Wanted', emotion: 'wanted', icon: 'annoyed'},\n                {name: 'Thirsty', emotion: 'thirsty', icon: 'happy'},\n                {name: 'Desperate', emotion: 'desperate', icon: 'happy'}\n            ];\n        };\n\n        $rootScope.generateGenres();\n        $rootScope.generateTypes();\n\n        $rootScope.toastMessage = function (msg) {\n            var toast = $mdToast.simple()\n                .textContent(msg)\n                .position('bottom right')\n                .parent(jQuery('#alerts'));\n            $mdToast.show(toast);\n        };\n\n        $rootScope.toastAction = function (msg, action, cb) {\n            var toast = $mdToast.simple()\n                .textContent(msg)\n                .action(action)\n                .hideDelay(0)\n                .highlightAction(false)\n                .position('bottom right')\n                .parent(jQuery('#alerts'));\n            $mdToast.show(toast).then(function (response) {\n                if (response == 'ok') {\n                    cb();\n                }\n            });\n        };\n\n        self.toggleSideNav = toggleSideNav;\n        self.closeSideNav = closeSideNav;\n\n        function toggleSideNav(navID) {\n            $mdSidenav(navID)\n                .toggle()\n                .then(function () {\n                    $rootScope.$broadcast('overVideoPlayer', false);\n                });\n        }\n\n        function closeSideNav(navID) {\n            $mdSidenav(navID)\n                .close()\n                .then(function () {\n                    $rootScope.$broadcast('overVideoPlayer', true);\n                });\n        }\n\n        self.toPage = function (state, args) {\n            $state.go(state, args);\n        };\n\n        self.notiURL = function (n) {\n            if (!n.is_read) {\n                self.markAsRead(n);\n            }\n            self.toPage(n.main_url.state, n.main_url.args);\n            jQuery('#NotificationsArea').foundation('close');\n        };\n\n        self.markAllAsSeen = function () {\n            var unseenList = _.where($rootScope.AppData.Notifications.list, {seen: false});\n            var i = 0;\n\n            _.each($rootScope.AppData.Notifications.list, function (a) {\n                if (!a.seen) {\n                    a.seen = true;\n                }\n            });\n\n            $rootScope.getNewToken('notification', $rootScope.AppData.User.id).then(function (token) {\n                var feed = $rootScope.StreamClient.feed('notification', $rootScope.AppData.User.id, token);\n                feed.get({limit: 20, mark_seen: true}, function (a) {\n                    _.each($rootScope.AppData.Notifications.list, function (n) {\n                        n.is_seen = true;\n                    });\n                    $rootScope.AppData.Notifications.unseen = 0;\n                })\n            });\n        };\n\n        self.markAllAsRead = function () {\n            $rootScope.getNewToken('notification', $rootScope.AppData.User.id).then(function (token) {\n                var feed = $rootScope.StreamClient.feed('notification', $rootScope.AppData.User.id, token);\n                feed.get({limit: 20, mark_read: true}, function (a) {\n                    _.each($rootScope.AppData.Notifications.list, function (n) {\n                        n.is_read = true;\n                    });\n                    $rootScope.AppData.Notifications.unread = 0;\n                })\n            });\n        };\n\n        self.markAsRead = function (obj) {\n            if (!obj.is_seen) {\n                $rootScope.getNewToken('notification', $rootScope.AppData.User.id).then(function (token) {\n                    var feed = $rootScope.StreamClient.feed('notification', $rootScope.AppData.User.id, token);\n                    feed.get({limit:25, mark_read: [obj.id], mark_seen: [obj.id]})\n                        .then(function(data) { /* on success */ })\n                        .catch(function(reason) { /* on failure */ });\n                    if ($rootScope.AppData.Notifications.unseen > 0) {\n                        $rootScope.AppData.Notifications.unseen--;\n                    }\n                    obj.is_seen = true;\n                });\n            }\n            return obj;\n        };\n\n        self.doSignOut = function () {\n            AuthService.logout().then(function (res) {\n                window.location.reload();\n            })\n        };\n\n        self.openNotificationsMenu = function () {\n            jQuery('#NotificationsArea').foundation('toggle');\n            self.markAllAsSeen();\n        };\n\n        self.toSignInRedirect = function () {\n            return window.location = window.location.origin + '/sign-in?redirect=' + window.location.pathname;\n        };\n\n        $rootScope.toFavorites = self.toFavorites = toFavorites;\n        $rootScope.toWatchLater = self.toWatchLater = toWatchLater;\n        $rootScope.checkContains = self.checkContains = checkContains;\n        $rootScope.isSame = self.isSame = isSame;\n\n        function toFavorites(obj) {\n            return UserActions.favorite(obj);\n        }\n\n        function toWatchLater(obj) {\n            return UserActions.watchLater(obj);\n        }\n\n        function checkContains(obj, search) {\n            return _.contains(obj, search);\n        }\n\n        function isSame(a, b) {\n            return moment(a).isSame(b, 'hour');\n        }\n\n        function newsletterRegister(notifyMe) {\n            DataService.notifyMe(notifyMe)\n                .then(function (res) {\n                    if (res.data.status == 'success') {\n                        $rootScope.toastMessage('Thanks for joining our newsletter!');\n                        return self.notifyMe = {};\n                    }\n                }, function (err) {\n                    // console.log(err);\n                });\n        }\n    }\n\n    VideoCtrl.$inject = ['$rootScope', '$scope', 'Project', '$modal', 'UserActions', 'DataService', '$state', 'Analytics', '$window', '$timeout', '_'];\n    function VideoCtrl($rootScope, $scope, Project, $modal, UserActions, DataService, $state, Analytics, $window, $timeout, _) {\n        var self = this;\n        self.loaded = false;\n        self.displayShare = false;\n        self.toggleReactionsList = false;\n        self.emotions = $rootScope.generateReactions();\n        self.critiqueAverage = 0;\n        self.critiquesPage = 1;\n        self.nominationsPage = 1;\n        self.activeTab = 'critiques';\n        self.isFaved = false;\n        self.isSaved = false;\n        self.playerResponsiveMode = $window.localStorage.playerResponsiveMode ? JSON.parse($window.localStorage.playerResponsiveMode) : _.contains(['small', 'medium', 'large'], Foundation.MediaQuery.current);\n        self.tagsArray = [];\n        self.lightsOff = false;\n\n        self.film = Project;\n        function init(result) {\n            $rootScope.currentTitle = result.name;\n\n            self.loaded = true;\n\n            $rootScope.metadata = {\n                title: result.name,\n                description: angular.isString(result.description) ? result.description.substr(0, 150) : '',\n                image: result.thumbnail_url,\n                url: window.location.href\n            };\n\n            self.qReactions();\n\n            self.qCritiques();\n\n            self.qNominations();\n\n            self.qWins();\n\n            self.checkUserActions();\n\n            $rootScope.initWatch = function () {\n                Analytics.trackEvent('video', 'play', self.film.name);\n                UserActions.markAsWatched(self.film)\n            };\n            //self.activeWatch = UserActions.markAsWatched(self.film);\n\n            $scope.$on('$destroy', function () {\n                $rootScope.initWatch = undefined;\n            });\n\n            $scope.$on('overVideoPlayer', function (state) {\n                zIndexPlayer(state);\n            });\n            //UserActions.cancelWatched(self.activeWatch);\n\n            self.test = function () {\n                // console.log('Clicked');\n            };\n\n            //Populate tags array\n            if (angular.isString(self.film.tags) && self.film.tags.length) {\n                if (self.film.tags.indexOf(',') > -1) {\n                    self.tagsArray = self.film.tags.split(',');\n                }\n            }\n\n            // Get related video\n            DataService.collection('projects', {\n                notVideo: self.film.id,\n                notOwner: $rootScope.AppData.User ? $rootScope.AppData.User.id : undefined,\n                per_page: 1,\n                random: true,\n            })\n                .then(function (res) {\n                    if (res) {\n                        self.relatedvideo = res.data.data[0];\n                    }\n                });\n\n            // Register Listener\n            // console.log('Listener registered!');\n            //Backand.on('video_updated_' + self.film.url_id, function (data) {\n            //// console.log(self.film);\n            // console.log('Listener Triggered!');\n            // console.log(data);\n            //self.updateVideoObj();\n            /*_.each(data, function (a) {\n             self.film[a.Key] = a.value;\n             })*/\n            //});\n        }\n\n        // Listen for events from the videoplayer\n        $scope.$on('VideoPlayer:sourceChanged', function (event, video) {\n            self.film = video;\n            init(video);\n\n            // Update browser history\n            /*$state.transitionTo('video', {url_id: video.url_id}, {\n                location: true,\n                inherit: true,\n                // relative: $state.$current,\n                notify: false\n            });*/\n\n            $state.go('video', {url_id: video.url_id}, {notify: false, location: \"replace\"})\n        });\n\n        if (!$rootScope.isAuthenticated()) {\n            var endWatch = $rootScope.$watch('AppData.User', function (newValue, oldValue) {\n                if (newValue && angular.isString(newValue.id)) {\n                    console.log('User Logged In');\n                    self.checkUserActions();\n                    endWatch();\n                }\n            });\n        }\n\n        self.checkUserActions = function () {\n            if ($rootScope.isAuthenticated()) {\n                UserActions.canReact(self.film.id).then(function (res) {\n                    self.canReact = res;\n                }, function (error) {\n                    self.canReact = error;\n                });\n\n                if (self.film.disableCritique || (self.film.owner_id === $rootScope.AppData.User.id)) {\n                    console.log('owner');\n                    self.canCritique = false;\n                } else {\n                    UserActions.canCritique(self.film.id).then(function (res) {\n                        self.canCritique = res;\n                    }, function (error) {\n                        self.canCritique = error;\n                    });\n                }\n\n                UserActions.canRate(self.film.id).then(function (res) {\n                    self.canRate = res;\n                }, function (error) {\n                    self.canRate = error;\n                });\n            } else {\n                self.canCritique = true;\n            }\n        };\n\n        /*self.qComments = function () {\n         // Fetch Comments\n         DataService.collection('comments', [{fieldName: 'created_at', order: 'desc'}],\n         [\n         {fieldName: 'project', operator: 'in', value: self.film.id},\n         {fieldName: 'parentComment', operator: 'in', value: ''}\n         ],\n         20, false, false, 1).then(function (result) {\n         self.comments = result.data;\n         // console.log('comments: \", result.data);\n         });\n         };*/\n\n        self.qReactions = function () {\n            // Fetch Reactions\n            DataService.collection('reactions', {project: self.film.id, sort: 'created_at', per_page: 500})\n                .then(function (result) {\n                    self.reactions = result.data;\n                    self.chartedReactions = _.countBy(self.reactions.data, function (r) {\n                        return _.contains(self.reactions.data, r) ? r.emotion : undefined;\n                    });\n                    self.reactionCountMax = _.max(self.chartedReactions, function (i) {\n                        return i;\n                    });\n\n                    var sortable = [];\n                    for (var r in self.chartedReactions)\n                        sortable.push([r, self.chartedReactions[r]])\n                    sortable.sort(function (a, b) {\n                        return b[1] - a[1]\n                    });\n\n                    self.chartedReactions = _.object(sortable);\n                });\n        };\n\n        self.qCritiques = function () {\n            // Fetch Critiques\n            DataService.collection('critiques', {include: 'comments', project: self.film.id, per_page: 200, page: self.critiquesPage})\n                .then(function (result) {\n                    self.critiques = result.data.data;\n                    self.calcIwAverage(self.critiques);\n                });\n        };\n\n        self.qNominations = function () {\n            DataService.collection('nominations', {include: 'user,award', project: self.film.id, sort: 'created_at', per_page: 200, page: self.nominationsPage})\n                .then(function (result) {\n                    self.nominations = result.data.data;\n                    //// console.log('Nomination: ', result.data);\n                });\n        };\n\n        self.qWins = function () {\n            DataService.collection('wins', {project: self.film.id, sort: 'created_at'}).then(function (result) {\n                self.wins = result.data.data;\n                // console.log('AwardWin: ', result.data);\n            });\n        };\n\n        self.calcIwAverage = function (critiques) {\n            var total = 0;\n            _.each(critiques, function (a) {\n                total += a.overall;\n            });\n            self.critiqueAverage = total / critiques.length;\n        };\n\n        self.getEmoticonByEmotion = function (emotion) {\n            var reactions = $rootScope.generateReactions();\n            return _.findWhere(reactions, {emotion: emotion});\n        };\n\n        self.showMessageDialog = function () {\n            UserActions.checkAuth().then(function (res) {\n                if (res) {\n                    var params = {\n                        templateUrl: 'common/contactUserDialog.html',\n                        resolve: {\n                            recipient: function () {\n                                return self.videoOwner.id;\n                            }\n                        },\n                        controller: ContactUserDialogController\n                    };\n                    var msgModal = $modal.open(params);\n                }\n            }, function (err) {\n                UserActions.loginModal();\n            });\n        };\n\n        self.rateThrottled = false;\n        self.rate = function (direction) {\n            if (!!self.rateThrottled) {\n                return false;\n            }\n\n            if (!$rootScope.isAuthenticated()) {\n                UserActions.loginModal();\n                return false;\n            }\n\n            if ($rootScope.isNotVerified()) {\n                $rootScope.toastAction('Please verify your account so you can rate videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\n                return false;\n            }\n\n            self.rateThrottled = true;\n            var actionVerb = 'like';\n            if (self.canRate === true) {\n                DataService.save('ratings', {\n                    author_id: $rootScope.AppData.User.id,\n                    project_id: self.film.id,\n                    up: direction === 'up',\n                    down: direction === 'down'\n                }).then(function (res) {\n                    // console.log(res);\n                    switch (direction) {\n                        case 'up':\n                            // Increment film up_ratings_count\n                            self.film.up_ratings_count++;\n                            break;\n                        case 'down':\n                            // Increment film down_ratings_count\n                            self.film.down_ratings_count++;\n                            actionVerb = 'unlike';\n                            break;\n                    }\n\n                    self.updateVideoObj();\n                    angular.extend(res.data, {projectOwner: self.film.owner_id});\n                    self.checkUserActions();\n                });\n\n            } else if (angular.isObject(self.canRate)) {\n                //up is false && down is false\n                if (!self.canRate.up && !self.canRate.down) {\n                    DataService.update('ratings', self.canRate.id, {\n                        up: direction === 'up',\n                        down: direction === 'down',\n                    })\n                        .then(function (res) {\n                            switch (direction) {\n                                case 'up':\n                                    // Increment film up_ratings_count\n                                    self.film.up_ratings_count++;\n                                    break;\n                                case 'down':\n                                    // Increment film down_ratings_count\n                                    self.film.down_ratings_count++;\n                                    actionVerb = 'unlike';\n                                    break;\n                            }\n                            angular.extend(self.canRate, {up: direction === 'up', down: direction === 'down'});\n                            //self.updateVideoObj();\n                            angular.extend(res.data, {projectOwner: self.film.owner_id});\n                            //self.checkUserActions();\n                        });\n\n                    // up is already true && direction is up\n                } else if (!!self.canRate.up && direction === 'up') {\n                    //DataService.delete('Rating', self.canRate.id)\n                    angular.extend(self.canRate, {up: false});\n                    DataService.update('ratings', self.canRate.id, {up: false, down: false})\n                        .then(function (res) {\n                            self.film.up_ratings_count--;\n                            //self.updateVideoObj();\n                            angular.extend(res.data, {projectOwner: self.film.owner_id});\n                            //self.checkUserActions();\n                        });\n\n                    // down is already true && direction is down\n                } else if (!!self.canRate.down && direction === 'down') {\n                    //DataService.delete('Rating', self.canRate.id)\n                    angular.extend(self.canRate, {down: false});\n                    DataService.update('ratings', self.canRate.id, {up: false, down: false})\n                        .then(function (res) {\n                            self.film.down_ratings_count--;\n                            //self.updateVideoObj();\n                            angular.extend(res.data, {projectOwner: self.film.owner_id});\n                            //self.checkUserActions();\n                        });\n\n                    // down is true && direction is up || up is true && direction is down -> reversal\n                } else if ((!!self.canRate.down && direction === 'up') || (!!self.canRate.up && direction === 'down')) {\n                    var up = false, down = false;\n                    switch (direction) {\n                        case 'up':\n                            up = true;\n                            self.film.up_ratings_count++;\n                            self.film.down_ratings_count--;\n                            angular.extend(self.canRate, {up: up, down: down});\n                            break;\n                        case 'down':\n                            down = true;\n                            self.film.up_ratings_count--;\n                            self.film.down_ratings_count++;\n                            angular.extend(self.canRate, {up: up, down: down});\n                            actionVerb = 'unlike';\n                            break;\n                    }\n                    DataService.update('ratings', self.canRate.id, {up: up, down: down}).then(function (res) {\n                        //self.updateVideoObj();\n                        //self.checkUserActions();\n                        angular.extend(res.data, {projectOwner: self.film.owner_id});\n                    });\n                }\n            }\n            $timeout(function () {\n                            self.rateThrottled = false;\n                        }, 1000);\n        };\n\n        self.react = function (emotion) {\n            if (angular.isDefined(emotion)) {\n                if (!$rootScope.isAuthenticated()) {\n                    UserActions.loginModal();\n                    return false;\n                }\n\n                if ($rootScope.isNotVerified()) {\n                    $rootScope.toastAction('Please verify your account and join the conversation! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\n                    return false;\n                }\n\n                var actionVerb = 'react';\n                if (self.canReact === true) {\n                    DataService.save('reactions', {\n                        user_id: $rootScope.AppData.User.id,\n                        project_id: self.film.id,\n                        emotion: emotion.emotion\n                    }).then(function (resA) {\n                        self.film.reactions_count++;\n                        // self.updateVideoObj();\n                        self.checkUserActions();\n                        self.qReactions();\n                    });\n                } else if (angular.isObject(self.canReact)) {\n                    if (self.canReact.emotion !== emotion.emotion) {\n                        DataService.update('reactions', self.canReact.id, {\n                            emotion: emotion.emotion\n                        }).then(function (resA) {\n                            self.canReact = resA.data;\n                            // self.updateVideoObj();\n                            self.checkUserActions();\n                            self.qReactions();\n                        });\n                    }\n                }\n            }\n        };\n\n        self.canReactIcon = function () {\n            if (angular.isObject(self.canReact)) {\n                var emoticon = _.findWhere(self.emotions, {'emotion': self.canReact.emotion});\n                return angular.isObject(emoticon) ? emoticon.icon : false;\n            } else return false;\n        };\n\n        self.deleteCritique = function (c, ev) {\n            if (!$rootScope.isAuthenticated()) {\n                UserActions.loginModal();\n                return false;\n            }\n\n            if ($rootScope.isNotVerified()) {\n                $rootScope.toastAction('Please verify your account and join the conversation! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\n                return false;\n            }\n\n            var modalInstance = $modal.open({\n                templateUrl: 'common/confirmDialog.html',\n                controller: ['$scope', '$modalInstance', function ($scope, $modalInstance) {\n                    $scope.ok = function () {\n                        $modalInstance.close(true);\n                    };\n\n                    $scope.cancel = function () {\n                        $modalInstance.dismiss('cancel');\n                    };\n                }],\n                size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\n                keyboard: true\n            });\n            modalInstance.result.then(function () {\n                DataService.collection('nominations', [], [{\n                    critique: c.id\n                }]).then(function (noms) {\n                    var nom = noms.data.data[0];\n                    DataService.delete('Nominations', nom.id).then(function () {\n                        // Decrement film nominationCount\n                        self.film.nominationCount--;\n                    });\n\n                    DataService.delete('Critique', c.id).then(function () {\n                        $rootScope.toastMessage('Your critique was deleted.');\n                        // Decrement film critiques_count\n                        self.film.critiques_count--;\n                        self.updateVideoObj();\n                        self.checkUserActions();\n                        self.critiques = _.reject(self.critiques, function (a) {\n                            return a.id === c.id;\n                        });\n                    });\n                })\n            }, function () {\n                // console.info('Modal dismissed at: ' + new Date());\n            });\n        };\n\n        self.openCritiqueDialog = function ($event) {\n            if (self.canCritique !== true && self.canCritique !== false) {\n                return $state.go('video_critique', {video_url_id: self.film.url_id, url_id: self.canCritique.url_id});\n            }\n\n            CritiqueDialogController.$inject = ['$scope', '$modalInstance', 'critique', 'film', '$q', 'Analytics'];\n            function CritiqueDialogController($scope, $modalInstance, critique, film, $q, Analytics) {\n                zIndexPlayer();\n                $scope.critique = critique;\n                $scope.film = film;\n                $scope.ratingMax = 10;\n                $scope.makePrivateHelp = false;\n                $scope.processing = false;\n                $scope.canNominate = false;\n                $scope.errors = [];\n\n                if ($scope.film.type.id === '39704d3d-2941-11e6-b8db-86ac961c55b2') {\n                    DataService.collection('awards', { trailer:true }).then(function (result) {\n                        $scope.awardsList = result.data.Awards;\n                    });\n                } else {\n                    DataService.collection('awards').then(function (result) {\n                        $scope.awardsList = result.data.Awards;\n                    });\n                }\n\n                $scope.dialogModel = {\n                    award_id: null\n                };\n\n                $scope.nominated = {\n                    award_id: $scope.dialogModel.award_id,\n                    user_id: $rootScope.AppData.User.id,\n                    project_id: $scope.critique.project_id,\n                    critique_id: undefined\n                };\n\n                $scope.starArray = angular.copy([{\"num\": 0}, {\"num\": 1}, {\"num\": 2}, {\"num\": 3}, {\"num\": 4}, {\"num\": 5}, {\"num\": 6}, {\"num\": 7}, {\"num\": 8}, {\"num\": 9}, {\"num\": 10}].reverse());\n\n                $scope.calcOverall = function () {\n                    switch ($scope.critique.type){\n                        case 'script':\n                            $scope.critique.overall = ($scope.critique.originality + $scope.critique.pacing + $scope.critique.structure +\n                                $scope.critique.writing + $scope.critique.style + $scope.critique.theme + $scope.critique.dialogue +\n                                $scope.critique.characters + $scope.critique.presentation + $scope.critique.concept) / 10;\n                            break;\n                        case 'video':\n                        default:\n                            $scope.critique.overall = ($scope.critique.originality + $scope.critique.direction + $scope.critique.writing +\n                                $scope.critique.cinematography + $scope.critique.performances + $scope.critique.production +\n                                $scope.critique.pacing + $scope.critique.structure + $scope.critique.audio + $scope.critique.music) / 10;\n                            break;\n                    }\n                };\n\n                $scope.$watchCollection('critique', function () {\n                    $scope.calcOverall();\n                });\n\n                $scope.$watch('critique.overall', function (newValue) {\n                    $scope.canNominate = newValue >= 6;\n                });\n\n                $scope.validateCritique = function () {\n                    $scope.errors = [];\n\n                    var failA = true;\n                    var failB = true;\n                    $scope.critique.body.trim();\n                    failA = $scope.critique.body.length < 1;\n                    if (failA) {\n                        $scope.errors.push('Tell us why you gave this critique an overall rating of ' + $scope.critique.overall);\n                    }\n                    switch ($scope.critique.type){\n                        case 'script':\n                            failB = $scope.critique.originality < 1 || $scope.critique.pacing < 1 || $scope.critique.writing < 1 ||\n                                $scope.critique.structure < 1 || $scope.critique.style < 1 || $scope.critique.theme < 1 ||\n                                $scope.critique.dialogue < 1 || $scope.critique.characters < 1 || $scope.critique.presentation < 1 || $scope.critique.concept < 1;\n                            break;\n                        case 'video':\n                        default:\n                            failB = $scope.critique.originality < 1 || $scope.critique.direction < 1 || $scope.critique.writing < 1 ||\n                                $scope.critique.cinematography < 1 || $scope.critique.performances < 1 || $scope.critique.production < 1 ||\n                                $scope.critique.pacing < 1 || $scope.critique.structure < 1 || $scope.critique.audio < 1 || $scope.critique.music < 1;\n                            break;\n                    }\n\n                    if (failB) {\n                        $scope.errors.push('Be sure to put a minimum of 1-star in every category.')\n                    }\n\n                    if(!failA && !failB) {\n                        $scope.postCritique();\n                    }\n                };\n\n                $scope.closeDialog = function () {\n                    zIndexPlayer(true);\n                    $modalInstance.close(true);\n                };\n\n                $scope.cancel = function () {\n                    zIndexPlayer(true);\n                    $modalInstance.dismiss('cancel');\n                };\n\n                $scope.hoveringOver = function (value) {\n                    $scope.overStar = value;\n                    $scope.percent = 100 * (value / $scope.max);\n                };\n\n                $scope.postCritique = function () {\n                    if ($scope.processing) {\n                        return false;\n                    }\n\n                    $scope.processing = true;\n                    $scope.critique.url_id = moment().valueOf();\n                    DataService.save('critiques?include=user,award', $scope.critique).then(function (res) {\n                        var obj = res.data.data;\n\n                        self.critiques.push(obj);\n                        self.calcIwAverage(self.critiques);\n                        // Increment film critiques_count\n                        self.film.critiques_count++;\n\n                        // register Action\n                        Analytics.trackEvent('video', 'critique', self.film.name);\n\n                        // if an award has been selected, create a nomination\n                        if (!!$scope.dialogModel.award_id && angular.isString($scope.dialogModel.award_id)) {\n                            $scope.nominated.critique_id = obj.id;\n                            $scope.nominated.award_id = $scope.dialogModel.award_id;\n                            DataService.save('nominations', $scope.nominated).then(function (nom) {\n                                // Increment film commentCount\n                                self.film.nominationCount++;\n                                self.updateVideoObj();\n                                // register Action\n                                self.qNominations();\n                                nom.critique = obj;\n                                Analytics.trackEvent('video', 'nominate', self.film.name);\n                            }, function (error) {\n                                alert('Failed to create new nomination, with error code: ' + error.message);\n                            })\n                        } else {\n\n                        }\n\n                    }, function (error) {\n                        alert('Failed to create new critique, with error code: ' + error.message);\n                        $scope.processing = false;\n                    }).then(function () {\n                        self.qCritiques();\n                        self.checkUserActions();\n                        $scope.closeDialog();\n                    });\n                };\n            }\n\n            UserActions.canCritique(self.film.id).then(function (res) {\n                // is logged in\n                if (res) {\n\n                    if ($rootScope.isNotVerified()) {\n                        $rootScope.toastAction('Please verify your account and join the conversation! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\n                        return false;\n                    }\n\n                    if (self.film.owner_id === $rootScope.AppData.User.id) {\n                        $rootScope.toastMessage('You cannot critique your own content.');\n                        return false;\n                    }\n\n                    $modal.open({\n                        templateUrl: 'common/critiqueDialog.html',\n                        resolve: {\n                            critique: function () {\n                                return {\n                                    originality: 0,\n                                    direction: 0,\n                                    writing: 0,\n                                    cinematography: 0,\n                                    performances: 0,\n                                    production: 0,\n                                    pacing: 0,\n                                    structure: 0,\n                                    audio: 0,\n                                    music: 0,\n                                    overall: 0,\n                                    private: false,\n                                    user_id: $rootScope.AppData.User.id,\n                                    body: '',\n                                    project_id: self.film.id,\n                                    type: self.film.hosting_type === 'script' ? 'script' : 'video',\n                                    style: 0,\n                                    theme: 0,\n                                    dialogue: 0,\n                                    characters: 0,\n                                    presentation: 0,\n                                    concept: 0,\n                                };\n                            },\n                            film: function () {\n                                return self.film;\n                            }\n                        },\n                        controller: CritiqueDialogController,\n                        keyboard: true\n                    });\n                }\n            }, function (err) {\n                if (angular.isObject(err)) {\n                    return false;\n                } else UserActions.loginModal();\n            });\n        };\n\n        self.openShareDialog = function () {\n            $modal.open({\n                templateUrl: 'common/shareDialog.html',\n                resolve: {\n                    Video: function () {\n                        return self.film;\n                    }\n                },\n                size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\n                controller: ['$rootScope', '$scope', '$modalInstance', 'Video', function ($rootScope, $scope, $modalInstance, Video) {\n                    zIndexPlayer();\n                    $scope.video = Video;\n                    $scope.shareLink = window.location.origin + '/' + Video.url_id;\n                    $scope.cancel = function () {\n                        zIndexPlayer(true);\n                        $modalInstance.close();\n                    };\n                }]\n            })\n        };\n\n        self.openReactionDialog = function () {\n            UserActions.checkAuth(self.film.id).then(function (res) {\n                // is logged in\n                if (res) {\n\n                    if ($rootScope.isNotVerified()) {\n                        $rootScope.toastAction('Please verify your account and join the conversation! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\n                        return false;\n                    }\n\n                    var modalInstance = $modal.open({\n                        templateUrl: 'common/reactionDialog.html',\n                        resolve: {\n                            Video: function () {\n                                return self.film;\n                            },\n                            Reaction: function () {\n                                return self.canReact || null;\n                            },\n                            Emotions: function () {\n                                return self.emotions;\n                            }\n                        },\n                        size: Foundation.MediaQuery.atLeast('medium') ? 'tiny' : 'full',\n                        controller: ['$scope', '$modalInstance', 'Video', 'Reaction', 'Emotions', function ($scope, $modalInstance, Video, Reaction, Emotions) {\n                            zIndexPlayer();\n                            $scope.video = Video;\n                            $scope.emotions = Emotions;\n\n                            $scope.getEmoticonByEmotion = function (emotion) {\n                                return _.findWhere($scope.emotions, {emotion: emotion});\n                            };\n\n                            $scope.selectedEmotion = function (e) {\n                                zIndexPlayer(true);\n                                //$modalInstance.dismiss('cancel');\n                                $modalInstance.close(e);\n                            };\n\n                            $scope.cancel = function () {\n                                zIndexPlayer(true);\n                                $modalInstance.dismiss('cancel');\n                            };\n\n                            $scope.closeDialog = function () {\n                                zIndexPlayer(true);\n                                $modalInstance.dismiss('cancel');\n                            };\n\n                        }]\n                    });\n\n                    modalInstance.result.then(function (reaction) {\n                        self.react(reaction);\n                    }, function () {\n                        // console.info('Modal dismissed at: ' + new Date());\n                    }).then(function () {\n                        $timeout(function () {\n                            // console.log('remove is-reveal-open');\n                            jQuery('body').removeClass('is-reveal-open')\n                        }, 500);\n                    });\n                }\n            }, function (err) {\n                // console.log(err);\n                if (angular.isObject(err)) {\n                    return false;\n                } else UserActions.loginModal();\n            });\n        };\n\n        self.openAddToDialog = function () {\n            $modal.open({\n                templateUrl: 'common/shareDialog.html',\n                resolve: {\n                    Video: function () {\n                        return self.film;\n                    }\n                },\n                size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\n                controller: ['$scope', '$modalInstance', 'Video', function ($scope, $modalInstance, Video) {\n                    zIndexPlayer();\n                    $scope.video = Video;\n                    $scope.shareLink = window.location.origin + '/' + Video.url_id;\n                    $scope.cancel = function () {\n                        zIndexPlayer(true);\n                        $modalInstance.close();\n                    };\n                }]\n            })\n        };\n\n        self.toFavorites = function () {\n            return $rootScope.toFavorites(self.film);\n        };\n\n        self.toWatchLater = function () {\n            return $rootScope.toWatchLater(self.film);\n        };\n\n        self.toggleWidthMode = function () {\n            $window.localStorage.playerResponsiveMode = self.playerResponsiveMode = !self.playerResponsiveMode;\n            $timeout(function () {\n                $window.videoPlayer.resize();\n                //fail-safe\n                $timeout(function () {\n                    $window.videoPlayer.resize();\n                }, 500);\n            }, 100);\n        };\n\n        $scope.$on('$destroy', function (event) {\n            //$scope.commentSubscribe.cancel();\n        });\n\n        self.updateVideoObj = function () {\n            return DataService.item('projects', self.film.id)\n                .then(function (a) {\n                    console.log('Project Updated: ', a);\n                    self.film = a.data.data;\n                });\n        };\n\n        self.toggleLights = function () {\n            self.lightsOff = !self.lightsOff;\n            var overlay = jQuery('#overlay');\n            var body = jQuery('body');\n            overlay.fadeToggle(1000);\n            /* Choose desired delay */\n            if (!self.lightsOff) {\n                $timeout(function () {\n                    overlay.removeClass('highlight');\n                    body.removeClass('cinema-mode');\n                }, 1000);\n                /* Same delay */\n            } else {\n                overlay.addClass('highlight');\n                body.addClass('cinema-mode');\n            }\n        };\n\n        self.reportDialog = function () {\n            var modalInstance = $modal.open({\n                templateUrl: 'common/reportVideoDialog.html',\n                resolve: {\n                    Video: function () {\n                        return self.film;\n                    }\n                },\n                closeOnClick: false,\n                size: Foundation.MediaQuery.atLeast('medium') ? 'small' : 'full',\n                controller: ['$scope', '$modalInstance', 'DataService', 'Video', function ($scope, $modalInstance, DataService, Video) {\n                    zIndexPlayer();\n                    $scope.video = Video;\n                    $scope.report = {\n                        name: '',\n                        email: '',\n                        body: '',\n                        project_id: $scope.video.id,\n                        video: $scope.video.url_id\n                    };\n\n                    $scope.cancel = function () {\n                        zIndexPlayer(true);\n                        $modalInstance.dismiss('cancel');\n                    };\n\n                    $scope.closeDialog = function () {\n                        zIndexPlayer(true);\n                        $modalInstance.close($scope.report);\n                    };\n                }]\n            });\n\n            modalInstance.result.then(function (report) {\n                DataService.mail('report', report).then(function () {\n                    $rootScope.toastMessage('Your Report has been Sent');\n                });\n            }, function () {\n                // console.info('Modal dismissed at: ' + new Date());\n            }).then(function () {\n                $timeout(function () {\n                    // console.log('remove is-reveal-open');\n                    jQuery('body').removeClass('is-reveal-open')\n                }, 500);\n            });\n        };\n\n        function zIndexPlayer(remove) {\n            var vidDiv = jQuery('.flex-video');\n            !!remove ? vidDiv.css('z-index', '') : vidDiv.css('z-index', 0);\n        }\n\n        //Lets begin\n        init(self.film);\n    }\n\n    VideoCritiqueCtrl.$inject = ['$rootScope', '$scope', 'Critique', 'UserActions', 'DataService', '_'];\n    function VideoCritiqueCtrl($rootScope, $scope, Critique, UserActions, DataService, _) {\n        var self = this;\n        self.commentsPage = 1;\n\n        // Fetch Critique\n        var init = function (critique) {\n            self.critique = critique;\n            $scope.commentsParent = self.critique;\n\n            // Fetch Comments\n            DataService.collection('comments', {\n                critique: self.critique.id,\n                per_page: 10,\n                page: self.commentsPage,\n                replies: false\n            }).then(function (result) {\n                self.comments = result.data;\n            });\n\n        };\n        init(Critique.data.data);\n    }\n\n    VideoCritiqueEditCtrl.$inject = ['$rootScope', '$scope', 'DataService', '$state', 'Critique'];\n    function VideoCritiqueEditCtrl($rootScope, $scope, DataService, $state, Critique) {\n        $scope.critique = Critique.data.data;\n        $scope.ratingMax = 10;\n        $scope.makePrivateHelp = false;\n\n        $scope.editedCritique = angular.copy($scope.critique);\n\n        DataService.collection('awards')\n            .then(function (result) {\n                $scope.awardsList = result.data.awards;\n            });\n\n\n        $scope.update = function () {\n            $scope.editedCritique.edited_at = moment().toDate();\n            // $scope.editedCritique.private = !!$scope.editedCritique.private;\n            DataService.update('critiques', $scope.critique.id, $scope.editedCritique).then(function (res) {\n                    $rootScope.toastMessage('Critique Updated');\n                    /*if ($state.is('profile_critique-edit'))\n                     $state.go('profile_critiqueselfid: self.critique.id});*/\n                    if ($state.is('video_critique-edit'))\n                        $state.go('video_critique', {\n                            video_url_id: $rootScope.$stateParams.video_url_id, url_id: $scope.critique.url_id\n                        });\n                }, function (err) {\n                    // console.log(err);\n                    $rootScope.toastMessage('Something went wrong...')\n                }\n            )\n        };\n\n        $scope.starArray = angular.copy([{\"num\": 0}, {\"num\": 1}, {\"num\": 2}, {\"num\": 3}, {\"num\": 4}, {\"num\": 5}, {\"num\": 6}, {\"num\": 7}, {\"num\": 8}, {\"num\": 9}, {\"num\": 10}].reverse());\n\n        $scope.hoveringOver = function (value) {\n            $scope.overStar = value;\n            $scope.percent = 100 * (value / $scope.max);\n        };\n\n        $scope.calcOverall = function () {\n            switch ($scope.editedCritique.type){\n                case 'script':\n                    $scope.editedCritique.overall = ($scope.editedCritique.originality + $scope.editedCritique.pacing + $scope.editedCritique.structure +\n                        $scope.editedCritique.writing + $scope.editedCritique.style + $scope.editedCritique.theme + $scope.editedCritique.dialogue +\n                        $scope.editedCritique.characters + $scope.editedCritique.presentation + $scope.editedCritique.concept) / 10;\n                    break;\n                case 'video':\n                default:\n                    $scope.editedCritique.overall = ($scope.editedCritique.originality + $scope.editedCritique.direction + $scope.editedCritique.writing +\n                        $scope.editedCritique.cinematography + $scope.editedCritique.performances + $scope.editedCritique.production +\n                        $scope.editedCritique.pacing + $scope.editedCritique.structure + $scope.editedCritique.audio + $scope.editedCritique.music) / 10;\n                    break;\n            }        };\n\n        $scope.$watchCollection('editedCritique', function () {\n            $scope.calcOverall();\n        });\n    }\n\n    ProfileCtrl.$inject = ['$rootScope', 'filepickerService', 'User', 'UserStats', 'AuthService', 'Upload', '_'];\n    function ProfileCtrl($rootScope, filepickerService, User, UserStats, AuthService, Upload, _) {\n        $rootScope.metadata.title = 'Profile';\n        var self = this;\n        self.user = User;\n        self.userStats = UserStats;\n        // self.updateAvatar = _.throttle(updateAvatar, 1000);\n        // self.updateCoverPhoto = _.throttle(updateCoverPhoto, 1000);\n        self.pickAvatar = pickAvatar;\n        self.pickBanner = pickBanner;\n\n        self.getEmoticonByEmotion = function (emotion) {\n            var reactions = $rootScope.generateReactions();\n            return _.findWhere(reactions, {emotion: emotion});\n        };\n\n        self.generatePublicId = function (type) {\n            return self.user.url_id + '_' + type + '_' + moment().valueOf();\n        };\n\n        function pickBanner(){\n            filepickerService.pick(\n                {\n                    cropRatio: 32/7,\n                    mimetype: 'image/*',\n                    services: ['CONVERT', 'COMPUTER', 'FACEBOOK', 'GOOGLE_DRIVE', 'WEBCAM', 'INSTAGRAM'],\n                    conversions: ['crop', 'rotate', 'filter'],\n                    customSourcePath: self.user.url_id + '/banners/'\n                },\n                function (Blob){\n                    self.user.coverPhoto = Blob.url + '?cache=true';\n                    AuthService.updateUser(self.user).then(function (res) {\n                        $rootScope.toastMessage('Cover Photo Updated!');\n                    });                }\n            );\n        }\n        function pickAvatar(){\n            filepickerService.pick(\n                {\n                    cropRatio: 1/1,\n                    mimetype: 'image/*',\n                    services: ['CONVERT', 'COMPUTER', 'FACEBOOK', 'GOOGLE_DRIVE', 'WEBCAM', 'INSTAGRAM'],\n                    conversions: ['crop', 'rotate', 'filter'],\n                    customSourcePath: self.user.url_id + '/avatars/'\n                },\n                function (Blob){\n                    self.user.avatar = Blob.url + '?cache=true';\n                    AuthService.updateUser(self.user).then(function (res) {\n                        $rootScope.toastMessage('Avatar Updated!');\n                    });\n                }\n            );\n        }\n\n        /*function updateAvatar(file) {\n            Upload.upload({\n                url: 'https://api.cloudinary.com/v1_1/indiewise/upload',\n                params: {upload_preset: 'r0kuyqef'},\n                data: {file: file, public_id: self.generatePublicId('avatar')},\n                skipAuthorization: true  // `Authorization: Bearer <token>` will not be sent on this request.\n            }).then(function (resp) {\n                console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\n                self.user.avatar = resp.data.secure_url;\n                AuthService.updateUser(self.user).then(function (res) {\n                    $rootScope.toastMessage('Avatar Updated!');\n                });\n            }, function (resp) {\n                console.log('Error status: ' + resp.status);\n            }, function (evt) {\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\n            });\n        }*/\n\n        /*function updateCoverPhoto(file) {\n            Upload.upload({\n                url: 'https://api.cloudinary.com/v1_1/indiewise/upload',\n                params: {upload_preset: 'jmy7rdcs'},\n                data: {file: file, public_id: Profile.generatePublicId('cover')},\n                skipAuthorization: true  // `Authorization: Bearer <token>` will not be sent on this request.\n            }).then(function (resp) {\n                console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\n                self.user.coverPhoto = resp.data.secure_url;\n                AuthService.updateUser(self.user).then(function (res) {\n                    $rootScope.toastMessage('Cover Photo Updated!');\n                });\n            }, function (resp) {\n                console.log('Error status: ' + resp.status);\n            }, function (evt) {\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\n            });\n\n        }*/\n\n    }\n\n    ProfileUploadController.$inject = ['$rootScope', '$state', 'User', '$http', 'DataService', '$window', 'Upload', 'filepickerService', '_'];\n    function ProfileUploadController($rootScope, $state, User, $http, DataService, $window, Upload, filepickerService, _) {\n        var self = this;\n        self.user = User;\n        self.uploadType = 2;\n        self.newVideo = {\n            name: '',\n            description: '',\n            director: '',\n            writer: '',\n            producers: '',\n            keyCast: '',\n            language: '00000000-0000-6b6e-4371-305344643451',\n            completionDate: '',\n            filmingCountry: undefined,\n            originCountry: undefined,\n            owner: $rootScope.AppData.User.id,\n            genres: [],\n            type: undefined,\n            runTime: 0,\n            thumbnail_url: '',\n            hosting_type: 'youtube',\n            video_url: '',\n            tags: '',\n            unlist: false,\n            disableComments: false,\n            disableCritique: false,\n            nsfw: false,\n            copyrightOwner: false\n        };\n        self.genresArr = [];\n\n        self.runtime = {\n            hours: 0,\n            mins: 0,\n            secs: 0\n        };\n\n        self.maxDate = moment().toDate();\n\n        self.selectedGenre = null;\n\n        $rootScope.generateGenres().then(function (res) {\n            $rootScope.genresList = self.genresList = res;\n        });\n        $rootScope.generateTypes().then(function (res) {\n            $rootScope.typesList = self.typesList = res;\n        });\n        $rootScope.generateCountries().then(function (res) {\n            $rootScope.countryList = self.countryList = res;\n        });\n        $rootScope.generateLanguages().then(function (res) {\n            $rootScope.languageList = self.languageList = res;\n        });\n\n        self.runtimeToSeconds = function () {\n            self.newVideo.runTime = (self.runtime.hours * 3600) + (self.runtime.mins * 60) + self.runtime.secs;\n        };\n\n        self.getUserFilmPath = function () {\n            return self.newVideo.hosting_type === 'script' ? self.user.url_id + '/scripts/' : self.user.url_id + '/films/';\n        };\n\n        self.isURL = function (str) {\n            var urlRegex = '[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)';\n            var url = new RegExp(urlRegex, 'i');\n            return str.length < 2083 && url.test(str);\n        };\n\n        self.getThumbnailUrl = function (url) {\n            if (url != null && url != '') {\n                if (url.indexOf('youtu') != -1) {\n                    var video_id = url.indexOf('v=') != -1 ? url.split('v=')[1].split('&')[0] : url.split('be/')[1];\n                    self.newVideo.hosting_type = 'youtube';\n                    self.newVideo.hosting_id = video_id;\n                    return self.newVideo.thumbnail_url = 'https://img.youtube.com/vi/' + video_id + '/hqdefault.jpg';\n                } else if (url.indexOf('vimeo') != -1) {\n                    var video_id = url.split('.com/')[1];\n                    self.newVideo.hosting_type = 'vimeo';\n                    self.newVideo.hosting_id = video_id;\n                    $http.jsonp('https://api.vimeo.com/videos/' + video_id + '/pictures.json?callback=JSON_CALLBACK').then(function (res) {\n                        //$http.jsonp('http://www.vimeo.com/api/v2/video/' + video_id + '.json?callback=JSON_CALLBACK').then(function (res) {\n                        return self.newVideo.thumbnail_url = angular.isDefined(res.data[0].sizes[6])\n                            ? res.data[0].sizes[6] : angular.isDefined(res.data[0].sizes[5])\n                            ? res.data[0].sizes[5] : angular.isDefined(res.data[0].sizes[4])\n                            ? res.data[0].sizes[4] : res.data[0].sizes[3];\n                    });\n                } else if (url.indexOf('dailymotion') != -1) {\n                    var video_id = url.split('video/')[1].split('_')[0];\n                    self.newVideo.hosting_type = 'dailymotion';\n                    self.newVideo.hosting_id = video_id;\n                    $http.get('https://api.dailymotion.com/video/' + video_id + '?fields=thumbnail_large_url').then(function (res) {\n                        return self.newVideo.thumbnail_url = res.data.thumbnail_large_url;\n                    });\n                } else if (url.indexOf('youku') != -1) {\n                    self.newVideo.hosting_type = 'youku';\n                    self.newVideo.hosting_id = undefined;\n\n                } else if (url.indexOf('vine') != -1) {\n                    self.newVideo.hosting_type = 'vine';\n                    self.newVideo.hosting_id = undefined;\n                    $http.get('/utils/get-vine-data.php?url=' + url).then(function (res) {\n                        return self.newVideo.thumbnail_url = res.data;\n                    });\n                }\n            }\n        };\n\n        self.validateNewVideoForm = function () {\n            var test = true;\n            var msg = 'Your project is missing:';\n            if (!self.newVideo.name.length) {\n                msg += 'Project Title, ';\n                $rootScope.toastMessage();\n                test = false;\n            }\n            if (self.uploadType == 2 && !self.newVideo.video_url.length) {\n                msg += 'Video URL, ';\n                test = false;\n            }\n            if (angular.isUndefined(self.genresArr) || (angular.isArray(self.genresArr) && !self.genresArr.length)) {\n                msg += 'Genres, ';\n                test = false;\n            }\n            if (angular.isUndefined(self.newVideo.type)) {\n                msg += 'Type, ';\n                test = false;\n            }\n            if (angular.isUndefined(self.newVideo.language)) {\n                msg += 'Language, ';\n                test = false;\n            }\n            if (self.newVideo.hosting_type !== 'script') {\n                if (self.newVideo.runTime == 0) {\n                    msg += 'Duration';\n                    test = false;\n                }\n            }\n            if (!test) {\n                $rootScope.toastMessage(msg);\n                alert(msg);\n            }\n            return test;\n        };\n\n        self.syncGenres = function (bool, item) {\n            if (bool) {\n                // add item\n                self.genresArr.push(item);\n            } else {\n                // remove item\n                for (var i = 0; i < self.genresArr.length; i++) {\n                    if (self.genresArr[i].id == item.id) {\n                        self.genresArr.splice(i, 1);\n                    }\n                }\n            }\n        };\n\n        self.isCheckedGenre = function (id) {\n            var match = false;\n            for (var i = 0; i < self.genresArr.length; i++) {\n                if (self.genresArr[i].id == id) {\n                    match = true;\n                }\n            }\n            return match;\n        };\n\n        self.getDefaultImage = function () {\n            return self.newVideo.hosting_type === 'script' ? 'https://cdn.filepicker.io/api/file/XFaspYLQTreMc63hx9ng' : 'https://getindiewise.com/assets/img/default_video_thumbnail.jpg'\n        };\n\n        self.submitNewVideo = function () {\n            if (!!self.validateNewVideoForm()) {\n                if (angular.isArray(self.genresArr) && self.genresArr.length) {\n                    self.newVideo.genres = _.pluck(self.genresArr, 'id');\n                }\n\n                var filmParams = {\n                    name: self.newVideo.name,\n                    description: self.newVideo.description,\n                    director: self.newVideo.director,\n                    writer: self.newVideo.writer,\n                    producers: self.newVideo.producers,\n                    keyCast: self.newVideo.keyCast,\n                    completionDate: moment({year: self.newVideo.completionDate}).startOf('year').format('YYYY-MM-DD HH:MM:SS'),\n                    owner_id: self.newVideo.owner,\n                    runTime: self.newVideo.runTime,\n                    video_url: self.newVideo.video_url,\n                    thumbnail_url: (self.newVideo.thumbnail_url === ''|| self.newVideo.thumbnail_url === null) ? self.getDefaultImage() : self.newVideo.thumbnail_url,\n                    hosting_type: self.newVideo.hosting_type,\n                    hosting_id: self.newVideo.hosting_id,\n                    tags: self.newVideo.tags,\n                    disableComments: self.newVideo.disableComments || false,\n                    disableCritique: self.newVideo.disableCritique || false,\n                    language_id: self.newVideo.language,\n                    filmingCountry_id: self.newVideo.filmingCountry,\n                    // originCountry: self.newVideo.originCountry,\n                    type_id: self.newVideo.type,\n                    unlist: self.newVideo.unlist,\n                    nsfw: self.newVideo.nsfw,\n                    copyrightOwner: self.newVideo.copyrightOwner,\n                    genres: self.newVideo.genres\n                };\n\n                DataService.save('projects', filmParams)\n                    .then(function (film) {\n                        console.log(film.data.data);\n                        $rootScope.toastMessage('Project Uploaded Successfully');\n                        // register Action\n                        $state.go('video', {url_id: film.data.data.url_id});\n                        //return film;\n                    }, function (err) {\n                        // console.log(err);\n                        alert('Failed to create new project, with error: ' + err.message);\n                    });\n\n            } else {\n                $rootScope.toastMessage('Please check the form!');\n            }\n        };\n\n\n        self.pickArtwork = function (){\n            filepickerService.pick(\n                {\n                    cropRatio: 4/3,\n                    mimetype: 'image/*',\n                    services: ['CONVERT', 'COMPUTER', 'FACEBOOK', 'GOOGLE_DRIVE', 'INSTAGRAM', 'URL'],\n                    conversions: ['crop', 'rotate', 'filter'],\n                    customSourcePath: self.user.url_id + '/films/'\n                },\n                function (Blob){\n                    self.newVideo.thumbnail_url = Blob.url + '?cache=true';\n                    $rootScope.$digest();\n                }\n            );\n        };\n\n\n        self.uploadArtwork = function (file) {\n            Upload.upload({\n                url: 'https://api.cloudinary.com/v1_1/indiewise/upload',\n                params: {upload_preset: 'dzachn6p'},\n                data: {file: file},\n                skipAuthorization: true  // `Authorization: Bearer <token>` will not be sent on this request.\n            }).then(function (resp) {\n                console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\n                self.newVideo.thumbnail_url = resp.data.secure_url;\n            }, function (resp) {\n                console.log('Error status: ' + resp.status);\n            }, function (evt) {\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\n            });\n        };\n\n\n        self.files = []; //JSON.parse($window.localStorage.getItem('files') || '[]');\n\n        self.pickFile = function () {\n\n            filepickerService.pick({\n                    mimetype: 'video/mp4',\n                    customSourcePath: self.user.url_id + self.newVideo.hosting_type === 'script' ? '/scripts/' : '/films/'\n                },\n                self.onSuccess\n            );\n        };\n\n        self.onSuccess = function (Blob) {\n            self.newVideo.hosting_type = self.newVideo.hosting_type === 'script' ? 'script' : 'HTML5';\n            self.newVideo.video_url = Blob.url + '?cache=true';\n            // self.files.push(Blob);\n            // $window.localStorage.setItem('files', JSON.stringify(self.files));\n        };\n    }\n\n    ProfileVideoEditCtrl.$inject = ['$rootScope', '$state', '$modal', 'UserActions', 'Project', 'DataService', 'anchorSmoothScroll', 'filepickerService', 'Upload', '_'];\n    function ProfileVideoEditCtrl($rootScope, $state, $modal, UserActions, Project, DataService, anchorSmoothScroll, filepickerService, Upload, _) {\n        var self = this;\n        self.project = Project.data.data;\n        self.uploadType = 2;\n        self.genresArr = self.project.genres;\n        self.saveComplete = false;\n        self.editedProject = angular.copy(self.project);\n        angular.extend(self.editedProject, {\n            type_id: self.project.type_id,\n            language_id: self.project.language_id,\n            filmingCountry_id: self.project.filmingCountry_id,\n            completionDate: moment(self.project.completionDate).year()\n        });\n        // console.log(self.editedProject);\n\n        if (self.project.runTime) {\n            var totalSeconds = self.project.runTime;\n            self.runtime = {};\n            self.runtime.hours = Math.floor(totalSeconds / 3600);\n            totalSeconds %= 3600;\n            self.runtime.mins = Math.floor(totalSeconds / 60);\n            self.runtime.secs = totalSeconds % 60;\n        }\n\n        if (angular.isString(self.project.video_url)) {\n            self.uploadType = 2;\n        }\n\n        $rootScope.generateGenres().then(function (res) {\n            $rootScope.genresList = self.genresList = res;\n        });\n        $rootScope.generateTypes().then(function (res) {\n            $rootScope.typesList = self.typesList = res;\n        });\n        $rootScope.generateCountries().then(function (res) {\n            $rootScope.countryList = self.countryList = res;\n        });\n        $rootScope.generateLanguages().then(function (res) {\n            $rootScope.languageList = self.languageList = res;\n        });\n\n        self.syncGenres = function (bool, item) {\n            if (bool) {\n                // add item\n                self.genresArr.push(item);\n                /*DataService.save('Genres', {project: self.editedProject.id, genre: item.id}, true, true)\n                 .then(function (res) {\n                 self.genresArr.push(res.data);\n                 });*/\n            } else {\n                // remove item\n                for (var i = 0; i < self.genresArr.length; i++) {\n                    if (self.genresArr[i].id == item.id) {\n                        DataService.delete('Genres', self.genresArr[i].id);\n                        self.genresArr.splice(i, 1);\n                    }\n                }\n            }\n        };\n\n        self.isCheckedGenre = function (id) {\n            var match = false;\n            for (var i = 0; i < self.genresArr.length; i++) {\n                if (self.genresArr[i].id == id) {\n                    match = true;\n                }\n            }\n            return match;\n        };\n\n        self.runtimeToSeconds = function () {\n            self.editedProject.runTime = self.project.runTime = (self.runtime.hours * 3600) + (self.runtime.mins * 60) + self.runtime.secs;\n        };\n\n        self.isURL = function (str) {\n            var urlRegex = '[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)';\n            var url = new RegExp(urlRegex, 'i');\n            return str.length < 2083 && url.test(str);\n        };\n\n        self.getDefaultImage = function () {\n            return self.editedProject.hosting_type === 'script' ? 'https://cdn.filepicker.io/api/file/XFaspYLQTreMc63hx9ng' : 'https://getindiewise.com/assets/img/default_video_thumbnail.jpg'\n        };\n\n        self.getThumbnailUrl = function (url) {\n            if (url != null && url != '') {\n                if (url.indexOf('youtu') != -1) {\n                    var video_id = url.split('v=')[1].split('&')[0];\n                    return self.editedProject.thumbnail_url = self.project.thumbnail_url = 'http://img.youtube.com/vi/' + video_id + '/mqdefault.jpg';\n                } else if (url.indexOf('vimeo') != -1) {\n                    var video_id = url.split('.com/')[1];\n                    $http.jsonp('http://www.vimeo.com/api/v2/video/' + video_id + '.json?callback=JSON_CALLBACK').then(function (res) {\n                        return self.editedProject.thumbnail_url = self.project.thumbnail_url = res.data[0].thumbnail_large;\n                    });\n                } else if (url.indexOf('dailymotion') != -1) {\n                    var video_id = url.split('video/')[1].split('_')[0];\n                    $http.get('https://api.dailymotion.com/video/' + video_id + '?fields=thumbnail_large_url').then(function (res) {\n                        return self.editedProject.thumbnail_url = self.project.thumbnail_url = res.data.thumbnail_large_url;\n                    });\n                } else if (url.indexOf('youku') != -1) {\n\n                } else if (url.indexOf('vine') != -1) {\n                    $http.get('api/utils/get-vine-data?url=' + url).then(function (res) {\n                        return self.editedProject.thumbnail_url = self.project.thumbnail_url = res.data;\n                    });\n                }\n            }\n        };\n\n        self.pickArtwork = function (){\n            filepickerService.pick(\n                {\n                    cropRatio: 4/3,\n                    mimetype: 'image/*',\n                    services: ['CONVERT', 'COMPUTER', 'FACEBOOK', 'GOOGLE_DRIVE', 'INSTAGRAM', 'URL'],\n                    conversions: ['crop', 'rotate', 'filter'],\n                    customSourcePath: $rootScope.AppData.User.url_id + '/films/'\n                },\n                function (Blob){\n                    self.editedProject.thumbnail_url = Blob.url + '?cache=true';\n                    $rootScope.$digest();\n                }\n            );\n        };\n\n        self.uploadArtwork = function (file) {\n            Upload.upload({\n                url: 'https://api.cloudinary.com/v1_1/indiewise/upload',\n                params: {upload_preset: 'dzachn6p'},\n                data: {file: file},\n                skipAuthorization: true  // `Authorization: Bearer <token>` will not be sent on this request.\n            }).then(function (resp) {\n                console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\n                self.editedProject.thumbnail_url = resp.data.secure_url;\n                DataService.update('projects', self.editedProject.id, self.editedProject);\n            }, function (resp) {\n                console.log('Error status: ' + resp.status);\n            }, function (evt) {\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\n            });\n        };\n\n        self.updateProject = function () {\n            self.editedProject.genres = _.pluck(self.genresArr, 'id');\n            self.editedProject.completionDate = moment({year: self.editedProject.completionDate}).startOf('year').format('YYYY-MM-DD HH:mm:ss');\n            DataService.update('projects', self.editedProject.id, self.editedProject)\n                .then(function (res) {\n                    // console.log(res);\n                    self.saveComplete = true;\n                    // anchorSmoothScroll.scrollTo('success');\n                    $rootScope.toastMessage('Project Updated');\n                    $state.go('profile.videos');\n                });\n        };\n\n        /*self.deleteProject = function (ev) {\n         if ($rootScope.AppData.User && ($rootScope.AppData.User.id === self.project.owner.id)) {\n         var confirm = $modal.confirm()\n         .title('Would you like to delete your project?')\n         //.content('All of the banks have agreed to <span class=\"debt-be-gone\">forgive</span> you your debts.')\n         //.ariaLabel('Lucky day')\n         .targetEvent(ev)\n         .ok('Delete it!')\n         .cancel('Never mind');\n         $modal.show(confirm).then(function () {\n         //self.project.set('disableProject', true);\n         self.project.destroy({\n         success: function (myObject) {\n         // The object was deleted from the Parse Cloud.\n         $state.go('profile');\n         },\n         error: function (myObject, error) {\n         // The delete failed.\n         // error is a Parse.Error with an error code and message.\n         }\n         });\n         $state.go('profile');\n         }, function () {\n         //$scope.status = 'You decided to keep your debt.';\n         });\n         }\n         }*/\n\n    }\n\n    ProfilePlaylistsController.$inject = ['$rootScope', 'DataService', 'User', 'Playlists', 'UserActions', '_', '$interval', '$http'];\n    function ProfilePlaylistsController($rootScope, DataService, User, Playlists, UserActions, _, $interval, $http) {\n        var self = this;\n        self.user = User.data;\n        self.playlists = Playlists.data.playlists;\n        self.playlistItems = [];\n        var hasFave = _.findWhere(self.playlists, {name: 'Favorites', private: true});\n        self.selectedPlaylist = !!hasFave ? hasFave.id : self.playlists.length ? self.playlists[0].id : null;\n\n        self.loadPlaylistItems = function () {\n            DataService.collection('playlistItems', {playlist: self.selectedPlaylist, include: 'project.owner'})\n                .then(function (res) {\n                    // console.log(res);\n                    self.playlistItems = res.data.data;\n                })\n        };\n\n        self.removeItem = function (id) {\n            UserActions.checkAuth().then(function (res) {\n                if (res) {\n                    DataService.delete('PlaylistItem', id).then(function () {\n                        return self.playlists = _.reject(self.playlists, function (a) {\n                            return a.id === id;\n                        });\n                    })\n                }\n            });\n        };\n\n        // autoload if preselect\n        if (angular.isString(self.selectedPlaylist)) {\n            self.loadPlaylistItems();\n        }\n    }\n\n    ProfileSettingsController.$inject = ['$rootScope', 'AuthService', 'User', 'Genres', 'UserTypes', 'DataService', 'anchorSmoothScroll', '_', '$window', '$intercom', '$mdDialog'];\n    function ProfileSettingsController($rootScope, AuthService, User, Genres, UserTypes, DataService, anchorSmoothScroll, _, $window, $intercom, $mdDialog) {\n        var self = this;\n        self.countries = [];\n        self.genresArr = [];\n        self.typesArr = [];\n        self.saveComplete = false;\n        self.updating = false;\n        User.dob = moment(User.dob).startOf('day').toDate();\n        User.settings = angular.isObject(User.settings) ? User.settings : JSON.parse(User.settings||'{}');\n        self.user = User;\n        self.genresArr = User.genres; //Genres.data.data;\n        self.typesArr = User.types;// UserTypes.data.data;\n        self.updateUser = _.throttle(updateUser, 1000);\n        var pwSetting = $window.localStorage.getItem('pwAllowPushNotifications');\n        self.notificationsActive = pwSetting !== 'undefined' && !!JSON.parse(pwSetting);\n        self.toggleNotifications = toggleNotifications;\n        self.requestVerificationEmail = requestVerificationEmail;\n        self.confirmTerminate = confirmTerminate;\n        self.verificationEmailSentMessage = false;\n\n        function toggleNotifications() {\n            $window.localStorage.setItem('pwAllowPushNotifications', self.notificationsActive);\n\n            if (!!self.notificationsActive) {\n                // subscribe device push notifications\n                if ($window.pwCanUseServiceWorkers() || angular.isDefined(window.safari)) {\n                    if ($window.chrome && $window.pushwoosh.isBrowserChrome()) {\n                        $window.pushwoosh.subscribeAtStart();\n                    } else {\n                        $window.pushwooshSubscribe();\n\n                        $window.pushwooshSetTags({\n                            id: self.user.id,\n                            urlId: self.user.url_id,\n                            username: self.user.email,\n                            firstName: self.user.firstName,\n                            lastName: self.user.lastName\n                        });\n                    }\n\n                }\n            }\n        }\n\n        function updateUser() {\n            if (!self.updating) {\n                var user = self.user;\n                self.updating = true;\n                user.genres = _.pluck(self.genresArr, 'id');\n                user.types = _.pluck(self.typesArr, 'id');\n                user.settings = JSON.stringify(user.settings);\n                AuthService.updateUser(user).then(function (res) {\n                    // console.log(res);\n                    res.data.data.dob = moment(res.data.data.dob).toDate();\n                    res.data.data.settings = JSON.parse(res.data.data.settings);\n                    AuthService.currentUser = self.user = res.data.data;\n                    res.data.data.name = res.data.data.fullName;\n                    $intercom.update(res.data.data);\n                    self.saveComplete = true;\n                    self.updating = false;\n                    anchorSmoothScroll.scrollTo('success');\n                    $rootScope.toastMessage('Profile Updated');\n                });\n            } else {\n                $rootScope.toastMessage('Please wait...');\n            }\n        }\n\n        function requestVerificationEmail() {\n            AuthService.requestVerification().then(function () {\n                self.verificationEmailSentMessage = true;\n            });\n        }\n\n        $rootScope.generateCountries().then(function (res) {\n            self.countries = res;\n        });\n\n        $rootScope.generateGenres().then(function (res) {\n            self.genresList = res;\n        });\n\n        $rootScope.generateTypes().then(function (res) {\n            self.typesList = res;\n        });\n\n        self.syncGenres = function (bool, item) {\n            if (bool) {\n                // add item\n                self.genresArr.push(item);\n            } else {\n                // remove item\n                for (var i = 0; i < self.genresArr.length; i++) {\n                    if (self.genresArr[i].id == item.id) {\n                        DataService.delete('Genres', self.genresArr[i].id);\n                        self.genresArr.splice(i, 1);\n                    }\n                }\n            }\n        };\n\n        self.isCheckedGenre = function (id) {\n            var match = false;\n            for (var i = 0; i < self.genresArr.length; i++) {\n                if (self.genresArr[i].id == id) {\n                    match = true;\n                }\n            }\n            return match;\n        };\n\n        self.syncTypes = function (bool, item) {\n            if (bool) {\n                // add item\n                self.typesArr.push(item);\n            } else {\n                // remove item\n                for (var i = 0; i < self.typesArr.length; i++) {\n                    if (self.typesArr[i].id == item.id) {\n                        DataService.delete('UserTypes', self.typesArr[i].id);\n                        self.typesArr.splice(i, 1);\n                    }\n                }\n            }\n        };\n\n        self.isCheckedType = function (id) {\n            var match = false;\n            for (var i = 0; i < self.typesArr.length; i++) {\n                if (self.typesArr[i].id == id) {\n                    match = true;\n                }\n            }\n            return match;\n        };\n        function confirmTerminate(ev) {\n            var confirm = $mdDialog.confirm()\n                .title('Terminate Account')\n                .textContent('Are you sure you want to terminate your account?')\n                .ariaLabel('Terminate Account')\n                .targetEvent(ev)\n                .ok('Yes')\n                .cancel('No');\n\n            $mdDialog.show(confirm).then(function() {\n                AuthService.deleteUser(self.user).then(function (res) {\n                    if(res.data.status) {\n                        AuthService.logout().then(function (res) {\n                            window.location.reload();\n                        });\n                    }\n                });\n            }, function() {\n\n            });\n        }\n\n    }\n\n    UserCtrl.$inject = ['$rootScope', 'DataService', 'User', 'UserStats', '$state', 'UserActions', '$modal', '_'];\n    function UserCtrl($rootScope, DataService, User, UserStats, $state, UserActions, $modal, _) {\n        var self = this;\n        self.user = User;\n        self.userStats = UserStats;\n        $rootScope.metadata.title = 'Profile: ' + self.user.firstName + ' ' + self.user.lastName;\n\n        self.showMessageDialog = function () {\n            ContactUserDialogController.$inject = ['$rootScope', '$scope', '$modalInstance', 'UserActions', 'DataService', 'recipient', '$timeout'];\n            function ContactUserDialogController($rootScope, $scope, $modalInstance, UserActions, DataService, recipient, $timeout) {\n\n\n                $scope.recipient = recipient;\n                $scope.model = {\n                    mySubject: $rootScope.AppData.User.fullName + ', ' + $scope.recipient.fullName,\n                    myMessage: null\n                };\n\n                $scope.postMessage = function () {\n                    UserActions.checkAuth().then(function (res) {\n                        if (res) {\n                            // create new conversation\n                            DataService.save('messages', {\n                                subject: $scope.model.mySubject,\n                                message: $scope.model.myMessage,\n                                recipients: new Array($scope.recipient.id)\n                            }).then(function (convo) {\n                                $scope.model.myMessage = null;\n                                $rootScope.toastMessage('Message sent!');\n                                // register Action\n                                //result.participants = $scope.recipient;\n                                $scope.closeDialog();\n\n                                // Creates Duplicate entry Error\n                                /*DataService.update('Conversation', convo.data.id, {\n                                 id: convo.data.id,\n                                 participants: [\n                                 {user: $rootScope.AppData.User.id},\n                                 {user: $scope.recipient.id}\n                                 ],\n                                 messages: [\n                                 {body: $scope.model.myMessage, from: $rootScope.AppData.User.id}\n                                 ]\n                                 }, true, true).then(function (convo) {\n\n                                 });*/\n                            });\n                        }\n                    }, function (err) {\n                        $rootScope.toastMessage('Message failed. Please log in!');\n                        //UserActions.loginModal();\n                    });\n                };\n\n                $scope.closeDialog = function () {\n                    $modalInstance.close(true);\n                };\n\n                $scope.cancel = function () {\n                    $modalInstance.dismiss('cancel');\n                };\n\n            }\n\n            UserActions.checkAuth().then(function (res) {\n                if (res) {\n                    $modal.open({\n                        templateUrl: 'common/contactUserDialog.html',\n                        resolve: {\n                            recipient: function () {\n                                return self.user;\n                            }\n                        },\n                        controller: ContactUserDialogController\n                    });\n                }\n            }, function (err) {\n                UserActions.loginModal();\n            });\n        };\n    }\n\n    UserAboutController.$inject = ['$rootScope', 'DataService', 'User', '$state', 'UserActions'];\n    function UserAboutController($rootScope, DataService, User, $state, UserActions) {\n        var self = this;\n        self.user = User;\n        // console.log(self.user);\n    }\n\n    UserVideosController.$inject = ['$rootScope', 'DataService', 'User', 'Videos', '$modal', 'UserActions', '_'];\n    function UserVideosController($rootScope, DataService, User, Videos, $modal, UserActions, _) {\n        var self = this;\n        self.user = User;\n        self.projects = Videos.data;\n\n        self.deleteProject = function (videoId) {\n            UserActions.checkAuth().then(function (res) {\n                if (res) {\n                    var modalInstance = $modal.open({\n                        templateUrl: 'common/confirmDialog.html',\n                        controller: ['$scope', '$modalInstance', function ($scope, $modalInstance) {\n                            $scope.ok = function () {\n                                $modalInstance.close(true);\n                            };\n\n                            $scope.cancel = function () {\n                                $modalInstance.dismiss('cancel');\n                            };\n                        }],\n                        size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\n                        keyboard: true\n                    });\n                    modalInstance.result.then(function () {\n                        DataService.delete('projects', videoId).then(function () {\n                            self.projects.data = _.reject(self.projects.data, function (a) {\n\n                                return a.id === videoId;\n                            });\n                        });\n                    }, function () {\n                        // console.info('Modal dismissed at: ' + new Date());\n                    });\n                }\n            });\n        }\n    }\n\n    UserCritiquesController.$inject = ['$rootScope', 'User', 'Critiques', 'Critiqued'];\n    function UserCritiquesController($rootScope, User, Critiques, Critiqued) {\n        var self = this;\n        self.user = User;\n        self.critiques = Critiques.data.data;\n        self.critiqued = Critiqued.data.data;\n    }\n\n    UserReactionsController.$inject = ['$rootScope', 'User', 'Reactions', 'Reacted', '_'];\n    function UserReactionsController($rootScope, User, Reactions, Reacted, _) {\n        var self = this;\n        self.user = User;\n        self.reactions = Reactions.data.data;\n        self.reacted = Reacted.data.data;\n\n        self.getEmoticonByEmotion = function (emotion) {\n            var reactions = $rootScope.generateReactions();\n            return _.findWhere(reactions, {emotion: emotion});\n        };\n\n    }\n\n    UserAwardsController.$inject = ['$rootScope', 'DataService', 'User', 'Awards', 'Nominations', 'Nominated'];\n    function UserAwardsController($rootScope, DataService, User, Awards, Nominations, Nominated) {\n        var self = this;\n        self.user = User;\n        self.awards = Awards.data.data;\n        self.nominations = Nominations.data.data;\n        self.nominated = Nominated.data.data;\n    }\n\n    MessagesCtrl.$inject = ['$rootScope', '$scope', 'Conversations', 'DataService', '$window', '$modal', 'UserActions', '$timeout', '$q', '_'];\n    function MessagesCtrl($rootScope, $scope, Conversations, DataService, $window, $modal, UserActions, $filter, $q, _) {\n        $rootScope.metadata.title = 'Messages';\n        var self = this;\n        self.selectedConvo = null;\n        self.newConvo = null;\n        self.conversations = Conversations.data.conversations;\n        self.newMode = false;\n        self.newConversation = newConversation;\n        self.fetchConvos = fetchConvos;\n        self.querySearch = querySearch;\n        self.leaveConvo = leaveConvo;\n        self.doSendOnEnter = doSendOnEnter;\n        self.postReply = postReply;\n        self.selectConvo = selectConvo;\n        self.getParticipantById = getParticipantById;\n        self.myReply = null;\n        self.sendOnEnter = $window.localStorage.sendOnEnter ? JSON.parse($window.localStorage.sendOnEnter) : true;\n        self.inboxConvos = {};\n        self.convoMessages = {};\n        self.selectedConvoLoaded = false;\n        self.viewportHeight = { height: 500 + 'px' };\n\n        function selectConvo(convo) {\n            self.newMode = false;\n            self.selectedConvoLoaded = false;\n            self.selectedConvo = convo;\n            self.currentParticipants = convo.participants;\n            DataService.item('messages', convo.id).then(function (msgs) {\n                // console.log('Messages: ', msgs.data);\n                self.messages = msgs.data.conversation.messages;\n\n                self.convoMessages = {\n                    first: 1,\n                    data: [],\n                    meta: {\n                        pagination: {\n                            current_page: 1\n                        }\n                    },\n                    get: function (index, count, success) {\n                        console.log('index = ' + index + '; count = ' + count);\n                        var start = index;\n                        var end = Math.min(index + count - 1, this.first);\n                        if (this.meta.pagination.total_pages >= this.meta.pagination.current_page) {\n                            this.meta.pagination.current_page++;\n                        }\n                        DataService.collection('messages/' + self.selectedConvo.id + '/messages', {per_page: count, page: this.meta.pagination.current_page})\n                            .then(function(response) {\n                                self.convoMessages.data = _.union(self.convoMessages.data, response.data.data);\n                                angular.extend(self.convoMessages.meta, response.data.meta);\n                            })\n                            .then(function() {\n                                console.log(self.convoMessages);\n                                // reverse logic\n                                var result = [];\n                                if (start <= end) {\n                                    for (var i = start; i <= end; i++) {\n                                        var serverDataIndex = /*(self.convoMessages.meta.pagination.current_page > 1) ? 0 :*/ (-1) * i + self.convoMessages.first;\n                                        var item = self.convoMessages.data[serverDataIndex];\n                                        if (item) {\n                                            result.push(item);\n                                        }\n                                    }\n                                }\n\n                                success(result);\n                            });\n                    }\n                };\n                self.selectedConvoLoaded = true;\n            });\n        }\n\n        function doSendOnEnter() {\n            if (self.sendOnEnter && self.myReply) {\n                self.newMode ? self.postNewMsg() : self.postReply();\n            }\n        }\n\n        function postReply() {\n            if (self.myReply) {\n                if (self.newMode) {\n                    return self.postNewMsg();\n                }\n\n                UserActions.checkAuth().then(function (res) {\n                    if (res) {\n                        var reply = self.myReply;\n                        self.myReply = null;\n                        DataService.update('messages', self.selectedConvo.id, {message: reply})\n                            .then(function (result) {\n                                // self.adapter.append([result.data.message]);\n                                self.convoMessages.data.push(result.data.message);\n                                $scope.adapter.append([result.data.message]);\n                                // update convos\n                                self.messages.push(result.data.message);\n                                self.fetchConvos();\n\n                            }, function (response) {\n                                self.reply = reply;\n                            })\n                            .then(function () {\n                                // scroll to bottom of viewport\n                                var viewport = angular.element('.viewport.main-comment');\n                                viewport.scrollTop(viewport.prop(\"scrollHeight\"));\n                            });\n                    }\n                }, function (err) {\n                    UserActions.loginModal();\n                });\n            }\n        }\n\n        function newConversation() {\n            self.newMode = true;\n            self.selectedConvo = {\n                participants: [],\n                body: ''\n            };\n\n            self.postNewMsg = postNewMsg;\n\n            function postNewMsg() {\n                DataService.save('messages', {\n                    subject: _.pluck(self.selectedConvo.participants, 'fullName').toString() + ', ' + $rootScope.AppData.User.fullName,\n                    message: self.myReply,\n                    recipients: _.pluck(self.selectedConvo.participants, 'id')\n                }).then(function (response) {\n                    self.myReply = null;\n                    $rootScope.toastMessage('Message sent!');\n                    fetchConvos().then(function (conversations) {\n                        selectConvo(_.findWhere(conversations, {id: response.data.id}));\n                    });\n                });\n            }\n        }\n\n        /**\n         * Search for contacts.\n         */\n        function querySearch(query) {\n            return DataService.collection('users', { search: query, notUsers: $rootScope.AppData.User.id }).then(function (response) {\n                return response.data.data;\n            });\n        }\n\n        function fetchConvos() {\n            return DataService.collection('messages').then(function (result) {\n                return self.conversations = result.data.conversations;\n            });\n        }\n\n        function leaveConvo() {\n            // TODO replacve confirm dialog\n            var confirm = $modal.confirm()\n                .title('Leave Conversation?')\n                //.textContent('Are you sure you want to delete this conversation?')\n                //.ariaLabel('Lucky day')\n                //.targetEvent(ev)\n                .ok('Yes')\n                .cancel('No');\n            $modal.show(confirm).then(function () {\n                var me = $rootScope.AppData.User.id;\n                var message = new Parse.Object('Message');\n                message.set('body', me.first_name + ' ' + me.last_name + ' left the conversation...');\n                message.set('parent', {\n                    __type: 'Pointer',\n                    className: 'Conversation',\n                    objectId: self.selectedConvo.id\n                });\n                message.set('from', $rootScope.AppData.User.id);\n                message.save().then(function (result) {\n                    var relParticipants = self.selectedConvo.relation('participants');\n                    relParticipants.remove(me);\n\n                    self.selectedConvo.set('updatedAt', moment().toDate());\n                    self.selectedConvo.save().then(function () {\n                        self.myReply = null;\n                        self.messages = [];\n                        self.newMode = false;\n                        self.selectedConvo = null;\n                        self.currentParticipants = null;\n\n                        // Refresh List\n                        fetchConvos()\n                    });\n                });\n            }, function () {\n            });\n        }\n\n        function getParticipantById(convo, userId) {\n            return _.findWhere(convo.participants, {user_id: userId});\n        }\n    }\n\n    NotificationsCtrl.$inject = ['$rootScope', 'UserActions', '_'];\n    function NotificationsCtrl($rootScope, UserActions, _) {\n        var self = this;\n        self.refresh = function () {\n            //$rootScope.getFlatNotificationsFeed();\n        };\n\n        self.markAllAsRead = function () {\n            /*$rootScope.getNewToken('flat', $rootScope.AppData.User.id).then(function (token) {\n             var feed = window.StreamClient.feed('flat_notifications', $rootScope.AppData.User.id, token);\n             feed.get({limit: 20, mark_read: true}, function (a) {\n             _.each($rootScope.AppData.NotificationsFeed.list, function (n) {\n             n.is_read = true;\n             });\n             $rootScope.AppData.NotificationsFeed.unread = 0;\n             })\n             });*/\n        };\n\n        self.markAsRead = function (n) {\n            /*$rootScope.getNewToken('flat', $rootScope.AppData.User.id).then(function (token) {\n             var feed = window.StreamClient.feed('flat_notifications', $rootScope.AppData.User.id, token);\n             feed.get({limit: 5, mark_read: [n.id]}, function (a) {\n             n.is_read = true;\n             --$rootScope.AppData.NotificationsFeed.unseen;\n             --$rootScope.AppData.NotificationsFeed.unread;\n             return n;\n             })\n             });*/\n        };\n\n        self.refresh();\n    }\n\n    ContactPageCtrl.$inject = ['$rootScope', 'DataService', '$sce', '_'];\n    function ContactPageCtrl($rootScope, DataService, $sce, _) {\n        var self = this;\n        self.emails = [\n            {\n                title: 'Technical Support',\n                address: 'support@getindiewise.com',\n                description: 'For all your Tech Support Needs and Issues.'\n            },\n            {\n                title: 'SafeGuard',\n                address: 'safeguard@getindiewise.com',\n                description: 'IndieWise cares about the safety and well-being of its users. Contact us immediately, if you come across any inappropriate content on the site. This includes, but is not limited to: content that is Excessively Violent, Pornographic, Racially Offensive, Unlawful, of a Bullying Nature, Directly Harmful to any Individual, Copyright Infringement, Spam, etc.'\n            },\n            {\n                title: 'Marketing',\n                address: 'marketing@getindiewise.com',\n                description: 'Would you like to advertise your company to our vast and diverse audience? Would you like a featured listing of your film at the top of our Homepage for all to see? Reach out today!'\n            },\n            {\n                title: 'Awards',\n                address: 'awards@getindiewise.com',\n                description: 'So you have such an amazing project, that 5 or more Users felt like you deserve an Award for it! Congrats! We can help!'\n            },\n            {\n                title: 'Public Relations',\n                address: 'pr@getindiewise.com',\n                description: 'Reach out for any press and/or media inquiries. Also let us know if you’d like to be featured in our bi-weekly newsletter. Also stay tuned for important announcements and updates!'\n            },\n            {\n                title: 'Career Center',\n                address: 'careers@getindiewise.com',\n                description: 'Interested in joining Team IndieWise? Let us know! There are several internship opportunities available.'\n            },\n            {\n                title: 'Become a Sponsor',\n                address: 'sponsor@getindiewise.com',\n                description: 'We’ve reserved a unique spot on our homepage to showcase our amazing sponsors. If you’re interested in becoming a sponsor of IndieWise, let us know!'\n            },\n            {\n                title: 'Invest in IndieWise',\n                address: 'investors@getindiewise.com',\n                description: 'So you’d like to take the bold step of investing in IndieWise! Great choice. Let’s talk!'\n            },\n            {\n                title: 'Register for IndieWise Convention (JULY 28-30, 2017)',\n                address: 'convention@getindiewise.com',\n                description: 'Register for our Annual Convention, in Miami, FL! Registration opens on JAN 2, 2017. Over 10,000 Filmmakers from 140+ Countries will be in attendance, as we provide you with 3 days of interactive workshops, educational seminars, film screenings, VIP Receptions, a Yacht Party, and a Closing Gala.<br>Regular 3- Day Package: $150  |  VIP 3-Day Package (Including Yacht Party): $250 (450 Tickets max. To Be Sold)'\n            },\n            {\n                title: 'Feedback Center',\n                address: 'feedback@getindiewise.com',\n                description: 'We welcome any feedback you have, to help us to provide you with the very best experience! Tell us!'\n            },\n        ];\n        self.selectedEmail = _.contains(_.pluck(self.emails, 'address'), $rootScope.$stateParams.email) ? _.findWhere(self.emails, { address: $rootScope.$stateParams.email}) : null;\n        self.description = '';\n        self.getDescription = function () {\n            self.description = angular.isObject(self.selectedEmail) ? $sce.trustAsHtml(self.selectedEmail.description) : $sce.trustAsHtml('');\n        };\n        self.getDescription();\n\n        self.form = {\n            to: '',\n            name: '',\n            email: '',\n            subject: '',\n            message: ''\n        };\n\n        self.submitForm = function () {\n            self.form.to = self.selectedEmail.address;\n            DataService.mail('contact', self.form).then(function (res) {\n                $rootScope.toastMessage('Message Sent, Thank you!');\n                self.form = {\n                    to: '',\n                    name: '',\n                    email: '',\n                    subject: '',\n                    message: ''\n                };\n            });\n        }\n    }\n})\n();","(function () {\n    'use strict';\n\n    angular.module('IndieWise.home', [])\n        .controller('HomeCtrl', HomeController);\n\n    HomeController.$inject = ['$rootScope', 'DataService', '$scope', '$window', '$modal', '$interval'];\n    function HomeController($rootScope, DataService, $scope, $window, $modal, $interval) {\n        var self = this;\n        $rootScope.metadata.title = 'Home';\n\n        self.refresh = function () {\n            // Trending Videos\n            DataService.collection('projects', {sort: 'reactions_count', per_page: 8}).then(function (result) {\n                self.trending = result.data;\n            });\n\n            // Highest Rated Videos\n            DataService.collection('projects', {sort: 'topRating', per_page: 8}).then(function (result) {\n                self.highestRated = result.data;\n            });\n\n            // Highest Awarded Videos\n            DataService.collection('projects', {sort: 'wins_count', per_page: 8}).then(function (result) {\n                self.highestAwarded = result.data;\n            });\n\n            // Recent Videos\n            DataService.collection('projects', {sort: 'created_at', per_page: 8}).then(function (result) {\n                self.recentFilms = result.data;\n            });\n        };\n        self.refresh();\n        self.refInterval = $interval(self.refresh, 300000);\n\n        $scope.$on('$destroy', function () {\n            $interval.cancel(self.refInterval);\n        });\n\n        $window.onfocus = function () {\n            //do something\n        };\n\n        $window.onblur = function () {\n            // console.log('Refresh Stopped');\n            $interval.cancel(self.refInterval);\n        };\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular.module('IndieWise.browse', [])\n        .controller('BrowseCtrl', BrowseController);\n\n    BrowseController.$inject = ['$scope', '$rootScope', '$state', 'DataService', '$q', '$timeout', '$modal', '$mdSidenav', '_'];\n    function BrowseController($scope, $rootScope, $state, DataService, $q, $timeout, $modal, $mdSidenav, _) {\n        $rootScope.metadata.title = 'Browse';\n        var self = this;\n        self.isOpen = false;\n        self.loading = false;\n        self.selectedGenres = [];\n        self.selectedTypes = [];\n        self.films = [];\n        self.arrs = {\n            genres: [],\n            types: []\n        };\n        self.filters = {\n            sort: $rootScope.$stateParams.sort || 'created_at',\n            genres: $rootScope.$stateParams.genres || undefined,\n            type: $rootScope.$stateParams.types || undefined,\n            search: $rootScope.$stateParams.q || undefined,\n            page: 1\n        };\n        $rootScope.AppData.searchText = $rootScope.$stateParams.q;\n\n        $rootScope.generateTypes().then(function (types) {\n            var d = $q.defer();\n\n            self.arrs.types = angular.isArray(self.selectedTypes) && self.selectedTypes.length ? self.selectedTypes : types;\n            return d.promise;\n        });\n\n        $rootScope.generateGenres().then(function (genres) {\n            var d = $q.defer();\n            self.arrs.genres = angular.isArray(self.selectedGenres) && self.selectedGenres.length ? self.selectedGenres : genres;\n            return d.promise;\n        });\n\n        self.refresh = function () {\n            $q.all([$rootScope.generateTypes(), $rootScope.generateGenres()]).then(function (values) {\n                self.filters.sort = $rootScope.$stateParams.sort || 'recent';\n                self.search();\n            });\n        };\n\n        self.search = function () {\n            self.loading = true;\n            var filterField = '';\n            switch (self.filters.sort) {\n                case 'trending':\n                    filterField = 'reactions_count';\n                    break;\n                case 'rating':\n                    filterField = 'iwRating';\n                    break;\n                case 'awards':\n                    filterField = 'wins_count';\n                    break;\n                case 'recent':\n                default:\n                    filterField = 'created_at';\n                    break;\n            }\n\n            $rootScope.AppData.searchText = $rootScope.$stateParams.q = self.filters.search || undefined;\n            DataService.collection('projects', {\n                sort: filterField,\n                order: 'DESC',\n                types: _.pluck(self.selectedTypes, 'id').toString(),\n                genres: _.pluck(self.selectedGenres, 'id').toString(),\n                search: self.filters.search || undefined,\n                per_page: 50,\n                page: self.filters.page\n            }).then(function (res) {\n                self.pagination = res.data.meta.pagination;\n                return self.films = res.data.data;\n            }).then(function () {\n                self.loading = false;\n            });\n\n\n            $scope.$broadcast('scroll.refreshComplete');\n        };\n\n        self.loadMore = function () {\n            if (self.loading) {\n                $rootScope.toastMessage('Please wait...');\n            }\n\n            self.loading = true;\n            var filterField = '';\n            switch (self.filters.sort) {\n                case 'trending':\n                    filterField = 'reactions_count';\n                    break;\n                case 'rating':\n                    filterField = 'iwRating';\n                    break;\n                case 'awards':\n                    filterField = 'wins_count';\n                    break;\n                case 'recent':\n                default:\n                    filterField = 'created_at';\n                    break;\n            }\n\n            DataService.collection('projects', {\n                sort: filterField,\n                order: 'DESC',\n                types: _.pluck(self.selectedTypes, 'id').toString(),\n                genres: _.pluck(self.selectedGenres, 'id').toString(),\n                search: self.filters.search || undefined,\n                per_page: 50,\n                page: ++self.filters.page\n            }).then(function (res) {\n                return self.films = _.union(self.films, res.data.data);\n            }).then(function () {\n                self.loading = false;\n            });\n        };\n\n        self.selectGenres = function (genre) {\n            var exists = _.findWhere(self.selectedGenres, {id: genre.id});\n            !!exists ? self.selectedGenres = _.reject(self.selectedGenres, genre) : self.selectedGenres.push(genre);\n            self.search();\n        };\n\n        self.selectTypes = function (type) {\n            var exists = _.find(self.selectedTypes, {id: type.id});\n            !!exists ? self.selectedTypes = _.reject(self.selectedTypes, type) : self.selectedTypes.push(type);\n            self.search();\n        };\n\n        self.filterBy = function (filter) {\n            self.search();\n        };\n\n        self.toggleFilterNav = function () {\n            $mdSidenav('filterNav')\n                .toggle()\n                .then(function () {\n\n                });\n\n        };\n\n        /*$scope.$watch('filters.search', function (newValue, oldValue) {\n         debugger;\n         });*/\n\n        self.refresh();\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular.module('IndieWise.latest', [])\n        .controller('LatestCtrl', LatestController);\n\n    LatestController.$inject = ['$rootScope', '$scope', 'DataService', '$timeout', '$interval'];\n    function LatestController($rootScope, $scope, DataService, $timeout, $interval) {\n        $rootScope.metadata.title = 'Latest';\n        var self = this;\n\n        self.init = function () {\n            DataService.collection('reactions/latest').then(function (res) {\n                self.reactions = res.data;\n            });\n            DataService.collection('nominations/latest').then(function (res) {\n                self.nominations = res.data;\n            });\n            DataService.collection('critiques/latest').then(function (res) {\n                self.critiques = res.data;\n            });\n        };\n\n        self.init();\n        self.refInterval = $interval(self.init, 10000);\n\n        $scope.$on('$destroy', function () {\n            $interval.cancel(self.refInterval);\n        });\n\n        $timeout(jQuery(document).foundation(), 0);\n    }\n\n})();\n","(function () {\n    'use strict';\n\n    angular.module('IndieWise.winners', [])\n        .controller('WinnersCtrl', WinnersController);\n\n    WinnersController.$inject = ['$rootScope', '$scope', 'DataService'];\n    function WinnersController($rootScope, $scope, DataService) {\n        var self = this;\n        self.awards = [];\n        self.date = moment().subtract(1, 'months').date(1).startOf('day').format('YYYY-MM-DD HH:mm:ss');\n\n        self.fetchWinners = fetchWinners;\n\n        function fetchWinners() {\n            DataService.collection('winners', {\n                date_start: self.date,\n                date_end: moment(self.date).endOf('month').format('YYYY-MM-DD HH:mm:ss')\n            }).then(function (response) {\n                self.awards = response.data.Awards;\n            });\n        }\n\n        // Init\n        fetchWinners();\n    }\n})();\n","/**\n * Created by Jerez Bain on 9/14/2015.\n */\n(function () {\n    'use strict';\n    angular.module('IndieWise.directives', [])\n        .directive('layerSlider', ['$rootScope', '$timeout', 'DataService', '$q', function ($rootScope, $timeout, DataService, $q) {\n            return {\n                restrict: 'E',\n                transclude: true,\n                templateUrl: 'directives/layerSlider.html',\n                scope: {},\n                link: function (scope, el, attrs) {\n                    scope.BASE = BASE || '/';\n                    /*var a = DataService.collection('users/count').then(function (res) {\n                        scope.users = res.data;\n                    });*/\n\n                    /*var b = DataService.collection('projects/count').then(function (res) {\n                        scope.projects = res.data;\n                    });*/\n\n                    var b = DataService.collection('projects', { random: true, per_page: 3}).then(function (res) {\n                        scope.projects = res.data;\n                    });\n\n                    $q.all([b]).then(function () {\n                        $timeout(function () {\n                            // jQuery('#slippry').slippry();\n                            jQuery(\"#layerslider\").layerSlider({\n                                responsive: true,\n                                // responsiveUnder: 950,\n                                slideDelay: 5000,\n                                layersContainer: 950,\n                                skin: 'noskin',\n                                hoverPrevNext: false,\n                                skinsPath: BASE + 'assets/layerslider/skins/'\n                            });\n                        }, 0)\n\n                    });\n                }\n            }\n        }])\n        .directive('premiumCarousel', ['$rootScope', '$state', '$timeout', 'DataService', function ($rootScope, $state, $timeout, DataService) {\n            return {\n                restrict: 'E',\n                replace: true,\n                //transclude: true,\n                templateUrl: 'directives/featured-area.html',\n                scope: {},\n                link: function (scope, el, attrs) {\n                    DataService.collection(\"projects\", { random: true, per_page: 3 }).then(function (result) {\n                        scope.featuredFilms = result.data;\n                        // console.log(\"featuredFilms: \", scope.featuredFilms);\n                    }).then(function () {\n                        $timeout(function () {\n                            // console.log('run owl');\n                            //Premium carousel\n                            var carouselEl = jQuery('#owl-featured');\n                            carouselEl.each(function () {\n                                var owl = jQuery(this);\n                                jQuery(\".prev\").on('click', function () {\n                                    carouselEl.trigger('prev.owl.carousel');\n                                });\n\n                                jQuery(\".next\").on('click', function () {\n                                    carouselEl.trigger('next.owl.carousel');\n                                });\n                                var loopLength = owl.data('car-length');\n                                var divLength = jQuery(this).find(\"div.item\").length;\n                                if (divLength > loopLength) {\n                                    owl.owlCarousel({\n                                        dots: owl.data(\"dots\"),\n                                        items: owl.data(\"items\"),\n                                        slideBy: owl.data(\"slideby\"),\n                                        center: owl.data(\"center\"),\n                                        loop: owl.data(\"loop\"),\n                                        margin: owl.data(\"margin\"),\n                                        nav: owl.data(\"nav\"),\n                                        autoplay: owl.data(\"autoplay\"),\n                                        autoplayTimeout: owl.data(\"autoplay-timeout\"),\n                                        autoWidth: owl.data(\"auto-width\"),\n                                        autoHeight: owl.data(\"auto-Height\"),\n                                        merge: owl.data(\"merge\"),\n                                        responsive: {\n                                            0: {\n                                                items: owl.data(\"responsive-small\"),\n                                                nav: false\n                                            },\n                                            600: {\n                                                items: owl.data(\"responsive-medium\"),\n                                                nav: false\n                                            },\n                                            1000: {\n                                                items: owl.data(\"responsive-large\"),\n                                                nav: false\n                                            },\n                                            1900: {\n                                                items: owl.data(\"responsive-xlarge\"),\n                                                nav: false\n                                            }\n                                        }\n                                    });\n\n                                } else {\n                                    owl.owlCarousel({\n                                        dots: false,\n                                        items: owl.data(\"items\"),\n                                        loop: false,\n                                        margin: owl.data(\"margin\"),\n                                        autoplay: false,\n                                        autoplayHoverPause: true,\n                                        responsiveClass: true,\n                                        autoWidth: owl.data(\"auto-width\"),\n                                        autoHeight: owl.data(\"auto-Height\"),\n                                    });\n                                }\n                            });\n                        }, 300);\n                    });\n\n                    scope.isMobile = $rootScope.isMobile;\n\n                }\n            }\n        }])\n        .directive('watchingCarousel', ['$rootScope', '$timeout', '$interval', 'DataService', function ($rootScope, $timeout, $interval, DataService) {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'directives/people-watching.html',\n                scope: {},\n                link: function (scope, el, attrs) {\n                    scope.getWatchedList = function () {\n                        DataService.collection('projects/watched').then(function (result) {\n                            scope.watched = result.data;\n                            // console.log('watched');\n                            // console.log(scope.watched);\n                            $timeout(function () {\n                                //console.log('run owl');\n                                //Premium carousel\n                                jQuery('.owl-carousel').each(function () {\n                                    var owl = jQuery(this);\n                                    jQuery(\".prev\").on('click', function () {\n                                        jQuery(this).parent().parent().parent().parent().next().trigger('prev.owl.carousel');\n                                    });\n\n                                    jQuery(\".next\").on('click', function () {\n                                        jQuery(this).parent().parent().parent().parent().next().trigger('next.owl.carousel');\n                                    });\n                                    var loopLength = owl.data('car-length');\n                                    var divLength = jQuery(this).find(\"div.item\").length;\n                                    if (divLength > loopLength) {\n                                        owl.owlCarousel({\n                                            dots: owl.data(\"dots\"),\n                                            items: owl.data(\"items\"),\n                                            slideBy: owl.data(\"slideby\"),\n                                            center: owl.data(\"center\"),\n                                            loop: owl.data(\"loop\"),\n                                            margin: owl.data(\"margin\"),\n                                            nav: owl.data(\"nav\"),\n                                            autoplay: owl.data(\"autoplay\"),\n                                            autoplayTimeout: owl.data(\"autoplay-timeout\"),\n                                            autoWidth: owl.data(\"auto-width\"),\n                                            autoHeight: owl.data(\"auto-Height\"),\n                                            merge: owl.data(\"merge\"),\n                                            responsive: {\n                                                0: {\n                                                    items: owl.data(\"responsive-small\"),\n                                                    nav: false\n                                                },\n                                                600: {\n                                                    items: owl.data(\"responsive-medium\"),\n                                                    nav: false\n                                                },\n                                                1000: {\n                                                    items: owl.data(\"responsive-large\"),\n                                                    nav: false\n                                                },\n                                                1900: {\n                                                    items: owl.data(\"responsive-xlarge\"),\n                                                    nav: false\n                                                }\n                                            }\n                                        });\n\n                                    } else {\n                                        owl.owlCarousel({\n                                            dots: false,\n                                            items: owl.data(\"items\"),\n                                            loop: false,\n                                            margin: owl.data(\"margin\"),\n                                            autoplay: false,\n                                            autoplayHoverPause: true,\n                                            responsiveClass: true,\n                                            autoWidth: owl.data(\"auto-width\"),\n                                            autoHeight: owl.data(\"auto-Height\"),\n                                        });\n                                    }\n                                });\n                            }, 0);\n                        });\n                    };\n                    /*$interval(function () {\n                     scope.getWatchedList()\n                     }, 60000);*/\n\n                    scope.getWatchedList();\n                }\n            }\n        }])\n        .directive('owlCarousel', ['$rootScope', '$timeout', '$interval', 'DataService', function ($rootScope, $timeout, $interval, DataService) {\n            return {\n                restrict: 'A',\n                //scope: {},\n                link: function (scope, el, attrs) {\n                    scope.getWatchedList = function () {\n                        $timeout(function () {\n                                //console.log('run owl');\n                                //Premium carousel\n                                el.each(function () {\n                                    var owl = jQuery(this);\n                                    jQuery(\".prev\").on('click', function () {\n                                        jQuery(this).parent().parent().parent().parent().next().trigger('prev.owl.carousel');\n                                    });\n\n                                    jQuery(\".next\").on('click', function () {\n                                        jQuery(this).parent().parent().parent().parent().next().trigger('next.owl.carousel');\n                                    });\n                                    var loopLength = owl.data('car-length');\n                                    var divLength = jQuery(this).find(\"div.item\").length;\n                                    if (divLength > loopLength) {\n                                        owl.owlCarousel({\n                                            dots: owl.data(\"dots\"),\n                                            items: owl.data(\"items\"),\n                                            slideBy: owl.data(\"slideby\"),\n                                            center: owl.data(\"center\"),\n                                            loop: owl.data(\"loop\"),\n                                            margin: owl.data(\"margin\"),\n                                            nav: owl.data(\"nav\"),\n                                            autoplay: owl.data(\"autoplay\"),\n                                            autoplayTimeout: owl.data(\"autoplay-timeout\"),\n                                            autoWidth: owl.data(\"auto-width\"),\n                                            autoHeight: owl.data(\"auto-Height\"),\n                                            merge: owl.data(\"merge\"),\n                                            responsive: {\n                                                0: {\n                                                    items: owl.data(\"responsive-small\"),\n                                                    nav: false\n                                                },\n                                                600: {\n                                                    items: owl.data(\"responsive-medium\"),\n                                                    nav: false\n                                                },\n                                                1000: {\n                                                    items: owl.data(\"responsive-large\"),\n                                                    nav: false\n                                                },\n                                                1900: {\n                                                    items: owl.data(\"responsive-xlarge\"),\n                                                    nav: false\n                                                }\n                                            }\n                                        });\n\n                                    } else {\n                                        owl.owlCarousel({\n                                            dots: false,\n                                            items: owl.data(\"items\"),\n                                            loop: false,\n                                            margin: owl.data(\"margin\"),\n                                            autoplay: false,\n                                            autoplayHoverPause: true,\n                                            responsiveClass: true,\n                                            autoWidth: owl.data(\"auto-width\"),\n                                            autoHeight: owl.data(\"auto-Height\"),\n                                        });\n                                    }\n                                });\n                            }, 0);\n                    };\n                    /*$interval(function () {\n                     scope.getWatchedList()\n                     }, 60000);*/\n\n                    scope.getWatchedList();\n                }\n            }\n        }])\n        .directive('playlists', ['$rootScope', 'DataService', 'UserActions', '_', function ($rootScope, DataService, UserActions, _) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/playlists.html',\n                replace: false,\n                scope: {\n                    project: '='\n                },\n                link: function (scope, el, attrs) {\n                    scope.model = {\n                        newName: null,\n                        playlistArr: [],\n                    };\n                    scope.playlists = [];\n                    scope.newPlInput = false;\n\n                    // Get playlists\n                    if ($rootScope.AppData.User) {\n                        DataService.collection('playlists')\n                            .then(function (res) {\n                                // Check playlist items for this video\n                                DataService.collection('playlistItems', {project: scope.project.id, playlists: _.pluck(res.data.playlists, 'id').toString()})\n                                    .then(function (resA) {\n                                        // console.log(resA);\n                                        scope.model.playlistArr = resA.data.data;\n\n                                        // list playlists\n                                        scope.playlists = res.data.playlists;\n                                        // console.log(scope.playlists);\n                                    });\n                            });\n                    }\n\n\n                    scope.toggleNewPlInput = function (clear) {\n                        scope.newPlInput = !scope.newPlInput;\n                        if (clear) {\n                            scope.model.newName = null;\n                        }\n                    };\n\n                    scope.newPlaylist = function () {\n                        UserActions.checkAuth().then(function (res) {\n                            DataService.save('playlists', {\n                                name: scope.model.newName,\n                                user_id: $rootScope.AppData.User.id\n                            }, false, true).then(function (pl) {\n                                scope.toggleNewPlInput(false);\n                                scope.model.newName = null;\n                                scope.playlists.push(pl.data.data)\n                            });\n                        }, function (err) {\n                            UserActions.loginModal().then(function (res) {\n                                debugger;\n                            });\n                        });\n                    };\n\n                    scope.syncPlaylists = function (bool, item) {\n                        if (bool) {\n                            // add item\n                            scope.model.playlistArr.push(item);\n                            DataService.save('playlistItems', {playlist: item.id, project: scope.project.id});\n                            $rootScope.toastMessage('Added to playlist');\n                            // console.log('Added to playlist: ', item);\n                        } else {\n                            // remove item\n\n                            for (var i = 0; i < scope.model.playlistArr.length; i++) {\n                                if (scope.model.playlistArr[i].id == item.id) {\n                                    var genreSetting = _.findWhere(scope.model.playlistArr, {\n                                        project: scope.project.id,\n                                        playlist_id: item.id\n                                    });\n                                    // console.log(genreSetting);\n                                    if (genreSetting) {\n                                        DataService.delete('PlaylistItem', genreSetting.id);\n                                    }\n                                    scope.model.playlistArr.splice(i, 1);\n                                    $rootScope.toastMessage('Removed from playlist');\n                                    // console.log('Removed from playlist: ', item);\n                                }\n                            }\n                        }\n                    };\n\n                    scope.isCheckedPlaylist = function (id) {\n                        var match = false;\n                        for (var i = 0; i < scope.model.playlistArr.length; i++) {\n                            if (scope.model.playlistArr[i].playlist_id == id) {\n                                match = true;\n                            }\n                        }\n                        return match;\n                    };\n                }\n            }\n        }])\n        .directive('toggleShowMore', ['$rootScope', '$timeout', function ($rootScope, $timeout) {\n            return {\n                restrict: 'A',\n                scope: {\n                    showMoreHeight: '=showMoreHeight'\n                },\n                link: function (scope, el, attrs) {\n                    $timeout(function () {\n                        //show more and less\n                        el.showMore({\n                            speedDown: 300,\n                            speedUp: 300,\n                            height: scope.showMoreHeight ? scope.showMoreHeight + 'px' : '165px',\n                            showText: 'Show more',\n                            hideText: 'Show less'\n                        });\n                    }, 500);\n\n                }\n            }\n        }])\n        .directive('scriptViewer', ['$timeout', function ($timeout) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/script-viewer.html',\n                transclude: true,\n                // replace: true,\n                scope: {film: '=film', lightsOff: '=lightsOff'},\n                link: function (scope, el, attrs) {\n                    scope.script = scope.film.video_url + '?cache=true&css=https://www.filestackapi.com/api/file/5dYvfXsLTqiri3YfMd1e'\n                    // scope.script = scope.film.video_url.replace('https://cdn.filepicker.io/api', 'https://www.filestackapi.com/api');\n                }\n            }\n        }])\n        .directive('videoPlayer', ['$rootScope', 'DataService', 'UserActions', '$timeout', '$interval', '$state', 'anchorSmoothScroll', '_', function ($rootScope, DataService, UserActions, $timeout, $interval, $state, anchorSmoothScroll, _) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/video-player.html',\n                transclude: true,\n                // replace: true,\n                scope: {film: '=film', type: '=type', lightsOff: '=lightsOff'},\n                link: function (scope, el, attrs) {\n                    var sources = [];\n                    var tracks = [];\n                    var otherSources = [];\n                    scope.hideSidebar = false;\n                    scope.loaded = false;\n                    scope.setupOptions = {\n                        controls: true,\n                        preload: 'auto',\n                        autoplay: false,\n                        techOrder: ['youtube', 'vimeo', 'Html5'],\n                        plugins: {\n                            // airplayButton: {},\n                            /*chromecast: {\n                                appId: \"AppID of your Chromecast App\",\n                                metadata: {\n                                    title: 'IndieWise',\n                                    subtitle: scope.film.name\n                                }\n                            },*/\n                            videoJsResolutionSwitcher: {\n                                default: 'high',\n                                dynamicLabel: true\n                            }\n                        }\n                    };\n\n                    // Setup Source\n                    setupSource(scope.film, sources);\n\n                    // build media object\n                    scope.media = {\n                        sources: sources,\n                        tracks: tracks,\n                    };\n\n                    // Setup Playlist\n                    // Generate playlist\n                    DataService.collection('projects', {owner: scope.film.owner.id, notVideo: scope.film.id, per_page: 20})\n                        .then(function (response) {\n                            scope.otherSources = response.data.data;\n                            _.each(response.data.data, function (vid) {\n                                // setupSource(vid, otherSources);\n                                otherSources.push({\n                                    title: vid.name,\n                                    url: '/' + vid.url_id,\n                                    image: vid.thumbnail_url || 'https://getindiewise.com/assets/img/default_video_thumbnail.jpg', // could be an animated GIF\n                                    alt: vid.description, // optional photo description, defaults to the title\n                                    target: '_self' // can be any anchor target type\n                                })\n                            });\n\n                            console.log(scope.media);\n                        }).finally(function (res) {\n                            scope.loaded = true;\n                        });\n\n                    scope.$on('vjsVideoReady', function (e, data) {\n                        //data contains `id`, `vid`, `player` and `controlBar`\n                        //NOTE: vid is depricated, use player instead\n                        console.log('video id:' + data.id);\n                        console.log('video.js player instance: ', data.player);\n                        window.player = scope.player = data.player;\n                        console.log('video.js controlBar instance: ', data.controlBar);\n                        scope.controlBar = data.controlBar;\n\n                        // Add Playlist toggle button\n                        /*var Button = videojs.getComponent('Button');\n                        var MyButton = videojs.extend(Button, {\n                            constructor: function() {\n                                Button.apply(this, arguments);\n                                /!* initialize your button *!/\n                            },\n                            handleClick: function() {\n                                /!* do something on click *!/\n                            }\n                        });\n                        videojs.registerComponent('MyButton', MyButton);\n                        scope.player.getChild('controlBar').addChild('myButton', {});*/\n\n                        // Use playlist as suggested others\n                        scope.player.suggestedVideoEndcap({\n                            header: 'Other videos from ' + scope.film.owner.fullName + '...',\n                            suggestions: otherSources\n                        });\n                        // handle watched\n                        //if (scope.type !== 'vimeo') {\n                            var timeForPlayButton = scope.$watch('player.currentTime()', function (newValue, oldValue) {\n                                if (newValue > 5) {\n                                    $rootScope.initWatch();\n                                    timeForPlayButton();\n                                }\n                            });\n                        //}\n\n                        // Setup watcher\n                        scope.player.on('sourcechanged', function(e, data) {\n                            videojs.log('SOURCE CHANGED!', e, data);\n\n                            // Find which source it changed to\n                            /*if (angular.isDefined(data.from)) {\n                                var videoObj = _.findWhere(scope.otherSources, {id: _.findWhere(scope.media.sources, {src: data.to}).id});\n                                if (videoObj && videoObj.hasOwnProperty('id')) {\n                                    // Send video object to rest of page or reload\n                                    scope.$emit('VideoPlayer:sourceChanged', videoObj);\n                                }\n                            }*/\n                        });\n\n                        // Init behaviours\n                        // scope.player.perSourceBehaviors();\n\n                        // Init Sharing\n                        scope.player.socialShare({\n                            facebook: { // optional, includes a Facebook share button (See the [Facebook documentation](https://developers.facebook.com/docs/sharing/reference/share-dialog) for more information)\n                                // shareUrl: '', // optional, defaults to window.location.href\n                                shareImage: scope.film.thumbnail_url, // optional, defaults to the Facebook-scraped image\n                                shareText: 'I\\'m watching ' + scope.film.name + ' on IndieWise - Check it out!'\n                            },\n                            twitter: { // optional, includes a Twitter share button (See the [Twitter documentation](https://dev.twitter.com/web/tweet-button/web-intent) for more information)\n                                handle: 'indiewise', // optional, appends `via @handle` to the end of the tweet\n                                shareUrl: '', // optional, defaults to window.location.href\n                                shareText: 'I\\'m watching ' + scope.film.name + ' on IndieWise - Check it out!'\n                            }\n                        });\n\n                        // init Playlist\n                        // scope.player.playlist({ videos: sources, playlist: { hideSidebar: scope.hideSidebar, upNext: true, hideIcons: true, thumbnailSize: 300, items: 5 } })\n\n                        /*$timeout(function () {\n                            console.log('hiding sidebar');\n                            scope.hideSidebar = true;\n\n                            updateElementWidth(scope.player);\n                        }, 5000)*/\n                    });\n\n                    scope.$on('vjsVideoMediaChanged', function (e, data) {\n                        console.log('vjsVideoMediaChanged event was fired');\n                    });\n\n                    function setupSource(video, dest) {\n                        var source = {\n                            id: video.id,\n                            src: video.video_url,\n                            title: video.name,\n                            thumbnail: video.thumbnail_url || 'https://getindiewise.com/assets/img/default_video_thumbnail.jpg'\n                        };\n                        switch (video.hosting_type) {\n                            case 'HTML5':\n                                source.type = 'video/mp4';\n                                break;\n                            case 'youtube':\n                                source.type = 'video/youtube';\n                                source.src = 'https://www.youtube.com/watch?v=' + video.hosting_id;\n                                // source.youtube = { 'ytControls': 2, 'cc_load_policy': 1, 'iv_load_policy': 1, 'modestbranding': 1, 'cc': 1};\n                                break;\n                            case 'vimeo':\n                                source.type = 'video/vimeo';\n                                source.src = 'https://vimeo.com/' + video.hosting_id;\n                                // source.vimeo = { \"ytControls\": 2 };\n                                break;\n                        }\n                        dest.push(source);\n                    }\n\n                    function updateElementWidth(player) {\n                        var resize = function resize(p) {\n                            var itemWidth = scope.hideSidebar ? 0 : 300;\n\n                            var playerWidth = p.el().offsetWidth;\n                            var playerHeight = p.el().offsetHeight;\n                            var itemHeight = Math.round(playerHeight / 5);\n\n                            var youtube = p.$(\".vjs-tech\");\n                            var newSize = playerWidth - itemWidth;\n\n                            if (newSize >= 0) {\n\n                                var style = document.createElement('style');\n                                var def = ' ' + '.vjs-playlist .vjs-poster { width: ' + newSize + 'px !important; }' + '.vjs-playlist .vjs-playlist-items { width: ' + itemWidth + 'px !important; }' + '.vjs-playlist .vjs-playlist-items li { width: ' + itemWidth + 'px !important; height: ' + itemHeight + 'px !important; }' + '.vjs-playlist .vjs-modal-dialog { width: ' + newSize + 'px !important; } ' + '.vjs-playlist .vjs-control-bar, .vjs-playlist .vjs-tech { width: ' + newSize + 'px !important; } ' + '.vjs-playlist .vjs-big-play-button, .vjs-playlist .vjs-loading-spinner { left: ' + Math.round(newSize / 2) + 'px !important; } ';\n\n                                style.setAttribute('type', 'text/css');\n                                style.setAttribute('id', 'videoplayer-playlist-stylesheet');\n                                document.getElementsByTagName('head')[0].appendChild(style);\n\n                                if (style.styleSheet) {\n                                    style.styleSheet.cssText = def;\n                                } else {\n                                    style.appendChild(document.createTextNode(def));\n                                }\n                            }\n                        };\n\n                        if (player) {\n                            resize(player);\n                        }\n\n                        if (!scope.hideSidebar) {\n                            window.onresize = function () {\n                                resize(player);\n                            };\n\n                        }\n                    };\n\n                    function toggleLights() {\n                        scope.lightsOff = !scope.lightsOff;\n                        var overlay = jQuery('#overlay');\n                        var body = jQuery('body');\n                        overlay.fadeToggle(1000);\n                        /* Choose desired delay */\n                        if (!scope.lightsOff) {\n                            $timeout(function () {\n                                overlay.removeClass('highlight');\n                                body.removeClass('cinema-mode');\n                            }, 1000);\n                            /* Same delay */\n                        } else {\n                            overlay.addClass('highlight');\n                            body.addClass('cinema-mode');\n                        }\n                    }\n\n                    jQuery('#overlay').on('click', function () {\n                        toggleLights();\n                    });\n                }\n            }\n        }])\n        .directive('videogularPlayer', ['$rootScope', 'DataService', 'UserActions', '$timeout', '$interval', '$state', 'anchorSmoothScroll', '$sce', '_', function ($rootScope, DataService, UserActions, $timeout, $interval, $state, anchorSmoothScroll, $sce, _) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/videogular-player.html',\n                transclude: true,\n                // replace: true,\n                scope: {film: '=film', type: '=type', lightsOff: '=lightsOff'},\n                link: function (scope, el, attrs) {\n\n                    scope.onPlayerReady = false;\n                    scope.config = {\n                        sources: [\n                            {src: $sce.trustAsResourceUrl(scope.film.video_url), type: (scope.type === 'HTML5' ? 'video/mp4': undefined) }\n                        ],\n                        tracks: [],\n                        theme: 'http://www.videogular.com/styles/themes/default/latest/videogular.css',\n                        plugins: {\n                            poster: scope.film.thumbnail_url,\n                            controls: {\n                                autoHide: false,\n                                autoHideTime: 3000,\n                            },\n                        },\n                    };\n                    var sources = [];\n                    var tracks = [];\n                        // var otherSources = [];\n                    scope.hideSidebar = false;\n                    scope.loaded = false;\n\n\n                    // Setup Playlist\n                    // Generate playlist\n                    DataService.collection('projects', {owner: scope.film.owner.id, notVideo: scope.film.id, per_page: 20})\n                        .then(function (response) {\n                            /*scope.otherSources = response.data.data;\n                            _.each(response.data.data, function (vid) {\n                                setupSource(vid, sources);\n                            });*/\n\n                            // build media object\n                            scope.media = {\n                                sources: sources,\n                                tracks: tracks,\n                            };\n                            console.log(scope.media);\n                        }).finally(function (res) {\n                            scope.loaded = true;\n                        });\n                }\n            }\n        }])\n        .directive('elitePlayer', ['$rootScope', 'DataService', 'UserActions', '$timeout', '$interval', '$state', 'anchorSmoothScroll', '_', function ($rootScope, DataService, UserActions, $timeout, $interval, $state, anchorSmoothScroll, _) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/videoPlayer.html',\n                scope: {film: '=film', type: '=type', lightsOff: '=lightsOff'},\n                link: function (scope, el, attrs) {\n                    var listenerStarted = false;\n                    var hasWatched = false;\n                    var playlist = [];\n                    //console.log(scope.film);\n                    var video = scope.film;\n                    //attrs.$observe(\"film\", function (video) {\n                    //video = JSON.parse(video);\n                    playlist.push({\n                        videoType: scope.type,                                      //choose video type: \"HTML5\", \"youtube\", \"vimeo\", \"image\"\n                        title: video.name,                                             //video title\n                        youtubeID: scope.type === 'youtube' ? video.hosting_id : \"\",   //last part if the URL https://www.youtube.com/watch?v=0dJO0HyE8xE\n                        vimeoID: scope.type === 'vimeo' ? video.hosting_id : \"\",          //last part of the URL http://vimeo.com/119641053\n                        mp4: scope.type === 'HTML5' ? video.video_url : \"\",               //HTML5 video mp4 url\n                        imageUrl: video.thumbnail_url,                                     //display image instead of playing video\n                        imageTimer: 4, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  //set time how long image will display\n                        prerollAD: \"no\",                                                                  //show pre-roll \"yes\",\"no\"\n                        prerollGotoLink: \"http://getindiewise.com/\",                                         //pre-roll goto link\n                        // preroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Short_Elegant_Logo_Reveal.mp4\",   //pre-roll video mp4 format\n                        prerollSkipTimer: 5,\n                        midrollAD: \"no\",                                                                  //show mid-roll \"yes\",\"no\"\n                        midrollAD_displayTime: \"00:10\",                                                    //show mid-roll at any custom time in format \"minutes:seconds\" (\"00:00\")\n                        midrollGotoLink: \"http://getindiewise.com/\",                                         //mid-roll goto link\n                        // midroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Explode.mp4\", //mid-roll video mp4 format\n                        midrollSkipTimer: 5,\n                        postrollAD: \"no\",                                                                 //show post-roll \"yes\",\"no\"\n                        postrollGotoLink: \"http://getindiewise.com/\",                                        //post-roll goto link\n                        // postroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Light.mp4\",  //post-roll video mp4 format\n                        postrollSkipTimer: 5,\n                        // popupImg: \"images/preview_images/popup.jpg\",                        \t\t\t  \t  //popup image URL\n                        popupAdShow: \"no\",                                                                //enable/disable popup image: \"yes\",\"no\"\n                        popupAdStartTime: \"00:03\",                                                         //time to show popup ad during playback\n                        popupAdEndTime: \"00:07\",                                                           //time to hide popup ad during playback\n                        popupAdGoToLink: \"http://getindiewise.com/\",                                         //re-direct to URL when popup ad clicked\n                        description: video.description,                                                      //video description\n                        thumbImg: video.thumbnail_url||'/assets/img/default_avatar.jpg',                //path to playlist thumbnail image\n                        info: \"\"                                                                                    //video info\n                    });\n\n                    // Generate playlist\n                    DataService.collection('projects', {owner: video.owner.id, notVideo: video.id, per_page: 20}).then(function (result) {\n                        scope.playlistFilms = result.data.data;\n                        return scope.playlistFilms;\n                    }).then(function (res) {\n                        _.each(res, function (vid) {\n                            var type = '';\n                            if (vid.video_url.indexOf('youtu') != -1) {\n                                type = 'youtube';\n                            } else if (vid.video_url.indexOf('vimeo') != -1) {\n                                type = 'vimeo';\n                            } else {\n                                type = 'other';\n                            }\n\n                            playlist.push({\n                                videoType: type,                                                              //choose video type: \"HTML5\", \"youtube\", \"vimeo\", \"image\"\n                                title: vid.name,                                                            //video title\n                                youtubeID: type === 'youtube' ? vid.hosting_id : \"\",                                                          //last part if the URL https://www.youtube.com/watch?v=0dJO0HyE8xE\n                                vimeoID: type === 'vimeo' ? vid.hosting_id : \"\",                                                              //last part of the URL http://vimeo.com/119641053\n                                mp4: type === 'hosted' ? vid.video_url : \"\",               //HTML5 video mp4 url\n                                //imageUrl:\"images/preview_images/poster2.jpg\",                                     //display image instead of playing video\n                                //imageTimer:4, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  //set time how long image will display\n                                prerollAD: \"no\",                                                                  //show pre-roll \"yes\",\"no\"\n                                prerollGotoLink: \"http://getindiewise.com/\",                                         //pre-roll goto link\n                                preroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Short_Elegant_Logo_Reveal.mp4\",   //pre-roll video mp4 format\n                                prerollSkipTimer: 5,\n                                midrollAD: \"no\",                                                                  //show mid-roll \"yes\",\"no\"\n                                midrollAD_displayTime: \"00:10\",                                                    //show mid-roll at any custom time in format \"minutes:seconds\" (\"00:00\")\n                                midrollGotoLink: \"http://getindiewise.com/\",                                         //mid-roll goto link\n                                midroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Explode.mp4\", //mid-roll video mp4 format\n                                midrollSkipTimer: 5,\n                                postrollAD: \"no\",                                                                 //show post-roll \"yes\",\"no\"\n                                postrollGotoLink: \"http://getindiewise.com/\",                                        //post-roll goto link\n                                postroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Light.mp4\",  //post-roll video mp4 format\n                                postrollSkipTimer: 5,\n                                popupImg: \"images/preview_images/popup.jpg\",                        \t\t\t  \t  //popup image URL\n                                popupAdShow: \"no\",                                                                //enable/disable popup image: \"yes\",\"no\"\n                                popupAdStartTime: \"00:03\",                                                         //time to show popup ad during playback\n                                popupAdEndTime: \"00:07\",                                                           //time to hide popup ad during playback\n                                popupAdGoToLink: \"http://getindiewise.com/\",                                         //re-direct to URL when popup ad clicked\n                                description: vid.url_id,                                                      //video description\n                                thumbImg: vid.thumbnail_url||'/assets/img/default_avatar.jpg',                //path to playlist thumbnail image\n                                info: \"\"                                                                                    //video info\n                            });\n                        });\n                    }).finally(function () {\n                        window.videoPlayer = scope.videoPlayer = el.Video({                  //ALL PLUGIN OPTIONS\n                            instanceName: \"player1\",                      //name of the player instance\n                            instanceTheme:\"dark\",                        //choose video player theme: \"dark\", \"light\"\n                            autohideControls: 2,                          //autohide HTML5 player controls\n                            hideControlsOnMouseOut: \"No\",                 //hide HTML5 player controls on mouse out of the player: \"Yes\",\"No\"\n                            playerLayout: \"fitToContainer\",                   //Select player layout: \"fitToContainer\", \"fixedSize\", \"fitToBrowser\"\n                            // videoPlayerWidth: '100%',                     //fixed total player width\n                            // videoPlayerHeight: Foundation.MediaQuery.atLeast('large') ? 470 : 420,                       //fixed total player height\n                            responsive: true,  //!Foundation.MediaQuery.atLeast('large'),\t\t\t\t             //this option will overwrite above videoPlayerWidth/videoPlayerHeight and set player to fit your div (parent) container: true/false\n                            playlist: /*scope.type === 'vimeo' ? \"Off\" :*/ \"Right playlist\",                   //choose playlist type: \"Right playlist\", \"Off\"\n                            playlistScrollType: \"light\",                  //choose scrollbar type: \"light\",\"minimal\",\"light-2\",\"light-3\",\"light-thick\",\"light-thin\",\"inset\",\"inset-2\",\"inset-3\",\"rounded\",\"rounded-dots\",\"3d\"\n                            playlistBehaviourOnPageload: \"closed\",\t\t //choose playlist behaviour when webpage loads: \"closed\", \"opened\" (not apply to Vimeo player)\n                            autoplay: false,                              //autoplay when webpage loads: true/false\n                            colorAccent: \"#3F51B5\",                       //plugin colors accent (hexadecimal or RGB value - http://www.colorpicker.com/)\n                            vimeoColor: \"00adef\",                         //set \"hexadecimal value\", default vimeo color is \"00adef\"\n                            youtubeControls: \"custom controls\",\t\t\t //choose youtube player controls: \"custom controls\", \"default controls\"\n                            youtubeSkin: \"dark\",                          //default youtube controls theme: light, dark\n                            youtubeColor: \"red\",                          //default youtube controls bar color: red, white\n                            youtubeQuality: \"default\",                    //choose youtube quality: \"small\", \"medium\", \"large\", \"hd720\", \"hd1080\", \"highres\", \"default\"\n                            youtubeShowRelatedVideos: \"No\",\t\t\t\t //choose to show youtube related videos when video finish: \"Yes\", \"No\" (onFinish:\"Stop video\" needs to be enabled)\n                            videoPlayerShadow: \"effect2\",                 //choose player shadow:  \"effect1\" , \"effect2\", \"effect3\", \"effect4\", \"effect5\", \"effect6\", \"off\"\n                            loadRandomVideoOnStart: \"No\",                 //choose to load random video when webpage loads: \"Yes\", \"No\"\n                            shuffle: \"No\",\t\t\t\t                 //choose to shuffle videos when playing one after another: \"Yes\", \"No\" (shuffle button enabled/disabled on start)\n                            posterImg: '',//video.thumbnail_url,                               //player poster image\n                            onFinish: \"Stop video\",                      //\"Play next video\",\"Restart video\", \"Stop video\",\n                            nowPlayingText: \"Yes\",                        //enable disable now playing title: \"Yes\",\"No\"\n                            fullscreen: \"Fullscreen native\",              //choose fullscreen type: \"Fullscreen native\",\"Fullscreen browser\"\n                            rightClickMenu: false,                         //enable/disable right click over HTML5 player: true/false\n                            hideVideoSource: true,\t\t\t\t\t\t //option to hide self hosted video sources (to prevent users from download/steal your videos): true/false\n                            showAllControls: true,\t\t\t\t\t\t //enable/disable all HTML5 player controls: true/false\n                            allowSkipAd: true,                            //enable/disable \"Skip advertisement\" option: true/false\n                            infoShow: \"No\",                              //enable/disable info option: \"Yes\",\"No\"\n                            shareShow: \"No\",                             //enable/disable all share options: \"Yes\",\"No\"\n                            facebookShow: \"No\",                          //enable/disable facebook option individually: \"Yes\",\"No\"\n                            twitterShow: \"No\",                           //enable/disable twitter option individually: \"Yes\",\"No\"\n                            mailShow: \"No\",                              //enable/disable mail option individually: \"Yes\",\"No\"\n                            facebookShareName: video.name,      //first parametar of facebook share in facebook feed dialog is title\n                            facebookShareLink: window.location.href,  //second parametar of facebook share in facebook feed dialog is link below title\n                            facebookShareDescription: video.description, //third parametar of facebook share in facebook feed dialog is description below link\n                            facebookSharePicture: video.thumbnail_url, //fourth parametar in facebook feed dialog is picture on left side\n                            twitterText: video.name,\t\t\t //first parametar of twitter share in twitter feed dialog is text\n                            twitterLink: window.location.href, //second parametar of twitter share in twitter feed dialog is link\n                            twitterHashtags: \"indiewise\",\t\t //third parametar of twitter share in twitter feed dialog is hashtag\n                            twitterVia: \"IndieWise\",\t\t\t\t //fourth parametar of twitter share in twitter feed dialog is via (@)\n                            googlePlus: window.location.href, //share link over Google +\n                            logoShow: \"Yes\",                              //\"Yes\",\"No\"\n                            logoClickable: \"No\",                         //\"Yes\",\"No\"\n                            logoPath: \"/assets/img/Logo_alt2_web_87x45.png\",             //path to logo image\n                            logoGoToLink: \"http://getindiewise.com\",       //redirect to page when logo clicked\n                            logoPosition: \"bottom-left\",                  //choose logo position: \"bottom-right\",\"bottom-left\"\n                            embedShow: \"No\",                             //enable/disable embed option: \"Yes\",\"No\"\n                            embedCodeSrc: \"www.yourwebsite.com/videoplayer/index.html\", //path to your video player on server\n                            embedCodeW: \"746\",                            //embed player code width\n                            embedCodeH: \"420\",                            //embed player code height\n                            embedShareLink: window.location.href, //direct link to your site (or any other URL) you want to be \"shared\"\n                            youtubePlaylistID: \"\",                        //automatic youtube playlist ID (leave blank \"\" if you want to use manual playlist) LL4qbSRobYCjvwo4FCQFrJ4g\n                            youtubeChannelID: \"\",                         //automatic youtube channel ID (leave blank \"\" if you want to use manual playlist) UCHqaLr9a9M7g9QN6xem9HcQ\n\n                            //manual playlist\n                            videos: playlist\n                        });\n\n                        // playlist actions\n                        el.find('.elite_vp_item:not(:first) *').bind('click', function (event) {\n                            event.preventDefault();\n                            var $parent = jQuery(this).hasClass('elite_vp_item') ? jQuery(this) : jQuery(this).parents('.elite_vp_item');\n                            var $description = $parent.find('.elite_vp_description');\n                            var urlId = $description.html().trim();\n                            $state.go('video', {url_id: urlId});\n                        });\n\n                        el.find('.fa-elite-backward').bind('click', function (event) {\n                            event.preventDefault();\n                            var $parent = jQuery('.elite_vp_itemSelected').prev();\n                            if (!$parent.length) {\n                                $parent = jQuery('.elite_vp_item').last();\n                            }\n                            var $description = $parent.find('.elite_vp_description');\n                            var urlId = $description.html().trim();\n                            $state.go('video', {url_id: urlId});\n                        });\n\n                        el.find('.fa-elite-forward').bind('click', function (event) {\n                            event.preventDefault();\n                            var $parent = jQuery('.elite_vp_itemSelected').next();\n                            var $description = $parent.find('.elite_vp_description');\n                            var urlId = $description.html().trim();\n                            $state.go('video', {url_id: urlId});\n                        });\n\n                        // $timeout(function () {\n                        //     scope.startedPlaying();\n                        // }, 100);\n\n                        scope.startedPlaying = $interval(function () {\n                            // If Vimeo video\n                            if (scope.videoPlayer.state === 'loading' && !!angular.element('#elite_vp_vimeoWrapper iframe')) {\n                                // Listen for messages from the player\n                                if (!listenerStarted) {\n                                    if (window.addEventListener) {\n                                        window.addEventListener('message', vimeoListener, false);\n                                    }\n                                    else {\n                                        window.attachEvent('onmessage', vimeoListener);\n                                    }\n                                    listenerStarted = true;\n                                }\n                            }\n\n                            // if YouTube Video\n                            if (scope.videoPlayer.state === \"elite_vp_playing\") {\n                                toggleLights();\n                                $rootScope.initWatch();\n\n                                switch (scope.type) {\n                                    case \"youtube\":\n                                        //console.log('Youtube API is Ready');\n                                        scope.videoPlayer.youtubePlayer.addEventListener(\"onStateChange\", function (a) {\n                                            //console.log(a.target.getPlayerState());\n                                            if (a.target.getPlayerState() == 0) {\n                                                //console.log('Scroll page to content');\n                                                if (!!scope.lightsOff) {\n                                                    toggleLights();\n                                                }\n                                                //anchorSmoothScroll.scrollTo('SinglePostStats');\n                                            }\n                                        });\n                                        break;\n                                }\n\n                                $interval.cancel(scope.startedPlaying)\n                            }\n                        }, 1000);\n\n                    });\n\n                    function vimeoListener(event) {\n                        // Handle messages from the vimeo player only\n                        if (!(/^https?:\\/\\/player.vimeo.com/).test(event.origin)) {\n                            return false;\n                        }\n                        var data = JSON.parse(event.data);\n\n                        if (data.event === 'playProgress') {\n                            if (!hasWatched) {\n                                if (!!scope.lightsOff) {\n                                    toggleLights();\n                                }\n                                $rootScope.initWatch();\n                                hasWatched = true;\n                                $interval.cancel(scope.startedPlaying)\n                            }\n\n                            if (window.addEventListener) {\n                                window.removeEventListener('message', vimeoListener, false);\n                            }\n                            else {\n                                window.detachEvent('onmessage', vimeoListener);\n                            }\n                        }\n                    }\n\n                    function toggleLights() {\n                        scope.lightsOff = !scope.lightsOff;\n                        var overlay = jQuery('#overlay');\n                        overlay.fadeToggle(1000);\n                        /* Choose desired delay */\n                        if (!scope.lightsOff) {\n                            $timeout(function () {\n                                overlay.removeClass('highlight');\n                            }, 1000);\n                            /* Same delay */\n                        } else {\n                            overlay.addClass('highlight');\n                        }\n                    }\n\n                    jQuery('#overlay').on('click', function () {\n                        toggleLights();\n                    });\n\n                    // TODO: on playlist end, exit fullscreen\n                    //videoPlayer.fsEnter.click()\n\n\n                    //$state.go('stateName',params,{\n                    //    // prevent the events onStart and onSuccess from firing\n                    //    notify:false,\n                    //    // prevent reload of the current state\n                    //    reload:false,\n                    //    // replace the last record when changing the params so you don't hit the back button and get old params\n                    //    location:'replace',\n                    //    // inherit the current params on the url\n                    //    inherit:true\n                    //});\n                }\n            }\n        }])\n        .directive('elitePlayerEmbed', ['$rootScope', '_', function ($rootScope, _) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/videoPlayer.html',\n                scope: { name: '=', hosting_id: '=', url: '=', type: '=', thumbnail: '=', description: '=' },\n                link: function (scope, el, attrs) {\n                    var playlist = [];\n                    playlist.push({\n                        videoType: scope.type,                                      //choose video type: \"HTML5\", \"youtube\", \"vimeo\", \"image\"\n                        title: scope.name,                                             //video title\n                        youtubeID: scope.type === 'youtube' ? scope.hosting_id : \"\",   //last part if the URL https://www.youtube.com/watch?v=0dJO0HyE8xE\n                        vimeoID: scope.type === 'vimeo' ? scope.hosting_id : \"\",          //last part of the URL http://vimeo.com/119641053\n                        mp4: scope.type === 'HTML5' ? scope.url : \"\",               //HTML5 video mp4 url\n                        imageUrl: scope.thumbnail,                                     //display image instead of playing video\n                        imageTimer: 4, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  //set time how long image will display\n                        prerollAD: \"no\",                                                                  //show pre-roll \"yes\",\"no\"\n                        prerollGotoLink: \"http://getindiewise.com/\",                                         //pre-roll goto link\n                        // preroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Short_Elegant_Logo_Reveal.mp4\",   //pre-roll video mp4 format\n                        prerollSkipTimer: 5,\n                        midrollAD: \"no\",                                                                  //show mid-roll \"yes\",\"no\"\n                        midrollAD_displayTime: \"00:10\",                                                    //show mid-roll at any custom time in format \"minutes:seconds\" (\"00:00\")\n                        midrollGotoLink: \"http://getindiewise.com/\",                                         //mid-roll goto link\n                        // midroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Explode.mp4\", //mid-roll video mp4 format\n                        midrollSkipTimer: 5,\n                        postrollAD: \"no\",                                                                 //show post-roll \"yes\",\"no\"\n                        postrollGotoLink: \"http://getindiewise.com/\",                                        //post-roll goto link\n                        // postroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Light.mp4\",  //post-roll video mp4 format\n                        postrollSkipTimer: 5,\n                        // popupImg: \"images/preview_images/popup.jpg\",                        \t\t\t  \t  //popup image URL\n                        popupAdShow: \"no\",                                                                //enable/disable popup image: \"yes\",\"no\"\n                        popupAdStartTime: \"00:03\",                                                         //time to show popup ad during playback\n                        popupAdEndTime: \"00:07\",                                                           //time to hide popup ad during playback\n                        popupAdGoToLink: \"http://getindiewise.com/\",                                         //re-direct to URL when popup ad clicked\n                        description: '',                                                      //video description\n                        thumbImg: scope.thumbnail,                                                      //path to playlist thumbnail image\n                        info: \"\"                                                                                    //video info\n                    });\n\n                    scope.videoPlayer = el.Video({                  //ALL PLUGIN OPTIONS\n                        instanceName: \"player_\" + new Date().valueOf().toString(),                      //name of the player instance\n                        instanceTheme:\"dark\",                        //choose video player theme: \"dark\", \"light\"\n                        autohideControls: 2,                          //autohide HTML5 player controls\n                        hideControlsOnMouseOut: \"No\",                 //hide HTML5 player controls on mouse out of the player: \"Yes\",\"No\"\n                        playerLayout: \"fixedSize\",\n                        videoPlayerWidth: '100%',                     //fixed total player width\n                        videoPlayerHeight: Foundation.MediaQuery.atLeast('large') ? 470 : 420,                       //fixed total player height\n                        // responsive: true,  //!Foundation.MediaQuery.atLeast('large'),\t\t\t\t             //this option will overwrite above videoPlayerWidth/videoPlayerHeight and set player to fit your div (parent) container: true/false\n                        playlist: \"Off\",                   //choose playlist type: \"Right playlist\", \"Off\"\n                        playlistScrollType: \"light\",                  //choose scrollbar type: \"light\",\"minimal\",\"light-2\",\"light-3\",\"light-thick\",\"light-thin\",\"inset\",\"inset-2\",\"inset-3\",\"rounded\",\"rounded-dots\",\"3d\"\n                        playlistBehaviourOnPageload: \"closed\",\t\t //choose playlist behaviour when webpage loads: \"closed\", \"opened\" (not apply to Vimeo player)\n                        autoplay: false,                              //autoplay when webpage loads: true/false\n                        colorAccent: \"#3F51B5\",                       //plugin colors accent (hexadecimal or RGB value - http://www.colorpicker.com/)\n                        vimeoColor: \"00adef\",                         //set \"hexadecimal value\", default vimeo color is \"00adef\"\n                        youtubeControls: \"custom controls\",\t\t\t //choose youtube player controls: \"custom controls\", \"default controls\"\n                        youtubeSkin: \"dark\",                          //default youtube controls theme: light, dark\n                        youtubeColor: \"red\",                          //default youtube controls bar color: red, white\n                        youtubeQuality: \"default\",                    //choose youtube quality: \"small\", \"medium\", \"large\", \"hd720\", \"hd1080\", \"highres\", \"default\"\n                        youtubeShowRelatedVideos: \"No\",\t\t\t\t //choose to show youtube related videos when video finish: \"Yes\", \"No\" (onFinish:\"Stop video\" needs to be enabled)\n                        videoPlayerShadow: \"effect2\",                 //choose player shadow:  \"effect1\" , \"effect2\", \"effect3\", \"effect4\", \"effect5\", \"effect6\", \"off\"\n                        loadRandomVideoOnStart: \"No\",                 //choose to load random video when webpage loads: \"Yes\", \"No\"\n                        shuffle: \"No\",\t\t\t\t                 //choose to shuffle videos when playing one after another: \"Yes\", \"No\" (shuffle button enabled/disabled on start)\n                        posterImg: '',//video.thumbnail_url,                               //player poster image\n                        onFinish: \"Stop video\",                      //\"Play next video\",\"Restart video\", \"Stop video\",\n                        nowPlayingText: \"Yes\",                        //enable disable now playing title: \"Yes\",\"No\"\n                        fullscreen: \"Fullscreen native\",              //choose fullscreen type: \"Fullscreen native\",\"Fullscreen browser\"\n                        rightClickMenu: false,                         //enable/disable right click over HTML5 player: true/false\n                        hideVideoSource: true,\t\t\t\t\t\t //option to hide self hosted video sources (to prevent users from download/steal your videos): true/false\n                        showAllControls: true,\t\t\t\t\t\t //enable/disable all HTML5 player controls: true/false\n                        allowSkipAd: true,                            //enable/disable \"Skip advertisement\" option: true/false\n                        infoShow: \"No\",                              //enable/disable info option: \"Yes\",\"No\"\n                        shareShow: \"No\",                             //enable/disable all share options: \"Yes\",\"No\"\n                        facebookShow: \"No\",                          //enable/disable facebook option individually: \"Yes\",\"No\"\n                        twitterShow: \"No\",                           //enable/disable twitter option individually: \"Yes\",\"No\"\n                        mailShow: \"No\",                              //enable/disable mail option individually: \"Yes\",\"No\"\n                        facebookShareName: scope.name,      //first parametar of facebook share in facebook feed dialog is title\n                        facebookShareLink: window.location.href,  //second parametar of facebook share in facebook feed dialog is link below title\n                        facebookShareDescription: scope.description, //third parametar of facebook share in facebook feed dialog is description below link\n                        facebookSharePicture: scope.thumbnail, //fourth parametar in facebook feed dialog is picture on left side\n                        twitterText: scope.name,\t\t\t //first parametar of twitter share in twitter feed dialog is text\n                        twitterLink: window.location.href, //second parametar of twitter share in twitter feed dialog is link\n                        twitterHashtags: \"indiewise\",\t\t //third parametar of twitter share in twitter feed dialog is hashtag\n                        twitterVia: \"IndieWise\",\t\t\t\t //fourth parametar of twitter share in twitter feed dialog is via (@)\n                        googlePlus: window.location.href, //share link over Google +\n                        logoShow: \"Yes\",                              //\"Yes\",\"No\"\n                        logoClickable: \"No\",                         //\"Yes\",\"No\"\n                        logoPath: \"/assets/img/Logo_alt2_web_87x45.png\",             //path to logo image\n                        logoGoToLink: \"http://getindiewise.com\",       //redirect to page when logo clicked\n                        logoPosition: \"bottom-left\",                  //choose logo position: \"bottom-right\",\"bottom-left\"\n                        embedShow: \"No\",                             //enable/disable embed option: \"Yes\",\"No\"\n                        embedCodeSrc: \"www.yourwebsite.com/videoplayer/index.html\", //path to your video player on server\n                        embedCodeW: \"746\",                            //embed player code width\n                        embedCodeH: \"420\",                            //embed player code height\n                        embedShareLink: window.location.href, //direct link to your site (or any other URL) you want to be \"shared\"\n                        youtubePlaylistID: \"\",                        //automatic youtube playlist ID (leave blank \"\" if you want to use manual playlist) LL4qbSRobYCjvwo4FCQFrJ4g\n                        youtubeChannelID: \"\",                         //automatic youtube channel ID (leave blank \"\" if you want to use manual playlist) UCHqaLr9a9M7g9QN6xem9HcQ\n\n                        //manual playlist\n                        videos: playlist\n                    });\n                }\n            }\n        }])\n        .directive('offCanvasNav', ['$rootScope', function ($rootScope) {\n            return {\n                restrict: 'A',\n                link: function (scope, el, attrs) {\n                    el.find('a').on('click', function () {\n                        angular.element('#offCanvas-responsive').foundation('close');\n                    });\n                }\n            }\n        }])\n        .directive('messagesHeight', ['$window', function ($window) {\n            return {\n                restrict: 'A',\n                link: function (scope, el, attrs) {\n                    setHeight();\n                    angular.element($window).bind('resize', function(){\n                        setHeight();\n\n                        scope.$digest();\n                    });\n\n                    function setHeight() {\n                        var parentEl = el.parent();\n                        var prevElHeight = el.prev().height();\n                        var nextElHeight = el.next().height();\n                        var newHeight = $window.innerHeight - (parentEl.offset().top + prevElHeight + nextElHeight);\n                        scope.Msgs.viewportHeight = {height: newHeight + 'px'};\n                    }\n                }\n            }\n        }])\n        .directive('sideNavNotif', ['$mdSidenav', function ($mdSidenav) {\n            return {\n                restrict: 'A',\n                link: function (scope, el, attrs) {\n                    el.find('a').bind('click', function () {\n                        $mdSidenav('right').close();\n                    });\n                }\n            }\n        }])\n        .directive('helpInfo', [function () {\n            return {\n                restrict: 'E',\n                transclude: true,\n                templateUrl: 'directives/help-info.html',\n                scope: {\n                    text: '=text',\n                    direction: '=direction'\n                }\n            }\n        }])\n        .directive('projectCard', ['$rootScope', '$state', '$modal', '$mdMedia', 'UserActions', function ($rootScope, $state, $modal, $mdMedia, UserActions) {\n            return {\n                restrict: 'E',\n                transclude: true,\n                replace: false,\n                templateUrl: 'directives/project-card.html',\n                scope: {\n                    video: '=video',\n                    type: '=type',\n                    related: '=related',\n                    queried: '=queried'\n                },\n                link: function (scope, el, attrs) {\n                    scope.isQueried = scope.queried === 'true';\n                    scope.isLoggedIn = $rootScope.AppData.User;\n                    scope.openShareDialog = openShareDialog;\n\n                    function openShareDialog(video) {\n                        $modal.open({\n                            templateUrl: 'common/shareDialog.html',\n                            resolve: {\n                                Video: function () {\n                                    return video;\n                                }\n                            },\n                            controller: ['$scope', '$modalInstance', 'Video', function ($scope, $modalInstance, Video) {\n                                $scope.video = Video;\n                                $scope.shareLink = window.location.origin + '/' + Video.url_id;\n                                $scope.cancel = function () {\n                                    $modalInstance.close();\n                                };\n                            }]\n                        })\n                    }\n                }\n            }\n        }])\n        .directive('commentsBlock', ['$rootScope', 'DataService', 'UserActions', '$modal', '_', function ($rootScope, DataService, UserActions, $modal, _) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/comments.html',\n                scope: {\n                    comments: '=comments',\n                    disable: '=disable',\n                    parent: '=parent',\n                    child: '=child',\n                },\n                link: function (scope, el, attrs) {\n                    scope.model = {\n                        myComment: null,\n                        isLoggedIn: $rootScope.AppData.User,\n                    };\n                    scope.myReply = null;\n                    scope.showCommentInput = false;\n                    scope.showReplyInput = false;\n                    scope.editCommentMode = false;\n                    scope.postComment = _.throttle(postComment, 1000);\n                    scope.deleteComment = deleteComment;\n                    scope.loadReplies = loadReplies;\n                    scope.showReplies = false;\n                    scope.toggleCommentInput = toggleCommentInput;\n                    scope.toggleEditCommentMode = toggleEditCommentMode;\n                    scope.toggleReplyInput = toggleReplyInput;\n\n                    function postComment() {\n                        if (!$rootScope.isAuthenticated()) {\n                            UserActions.loginModal();\n                            return false;\n                        }\n\n                        if ($rootScope.isNotVerified()) {\n                            $rootScope.toastAction('Please verify your account so you can rate videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\n                            return false;\n                        }\n\n                        DataService.save('comments', {\n                            body: scope.model.myComment,\n                            critique_id: !scope.parent.hasOwnProperty('unlist') ? scope.parent.id : undefined,\n                            user_id: scope.model.isLoggedIn.id\n                        })\n                            .then(function (comment) {\n                                scope.comments.data.push(comment.data.data);\n                                $rootScope.toastMessage('Comment posted!');\n                                scope.model.myComment = null;\n                                clearCommentinput();\n                                scope.parent.comments_count++;\n                            }, function (error) {\n                                console.log('Failed to create new comment, with error code: ' + error.message);\n                            });\n                    }\n\n                    function deleteComment(c, ev) {\n                        UserActions.checkAuth().then(function (res) {\n                            if (res) {\n                                var confirm = $modal.confirm()\n                                    .title('Would you like to delete your comment?')\n                                    //.content('All of the banks have agreed to <span class=\"debt-be-gone\">forgive</span> you your debts.')\n                                    //.ariaLabel('Lucky day')\n                                    .targetEvent(ev)\n                                    .ok('Delete')\n                                    .cancel('Cancel');\n                                $modal.show(confirm).then(function () {\n                                    var p = c.parentComment || undefined;\n\n                                    DataService.delete('comments', c.id).then(function (res) {\n                                        // Decrement film commentCount\n                                        scope.parent.commentCount--;\n\n\n                                        if (angular.isUndefined(p)) {\n                                            // normal comment\n                                            scope.comments = _.reject(scope.comments, function (a) {\n                                                return a.id === c.id;\n                                            });\n\n                                        } else {\n                                            // reply comment\n                                            var z = _.find(scope.comments, function (a) {\n                                                return a.id === p.id;\n                                            });\n\n                                            z.replies = _.reject(z.replies, function (a) {\n                                                return a.id === c.id;\n                                            });\n                                            // Increment film commentCount\n                                            var pcQuery = new Parse.Query(\"Comment\");\n                                            pcQuery.get(p.id).then(function (res) {\n                                                res.increment('replyCount', -1);\n                                                res.save();\n                                            });\n\n                                            return c = undefined;\n                                        }\n\n                                        $rootScope.toastMessage('Your comment was deleted.');\n                                    });\n                                }, function () {\n                                    //$scope.status = 'You decided to keep your debt.';\n                                });\n                            }\n                        })\n                    }\n\n                    function loadReplies(comment) {\n                        // Fetch Replies\n                        if (!comment.repliesLoaded) {\n                            DataService.collection('comments', {comment: comment.id}).then(function (replies) {\n                                comment.replies = replies.data.data;\n                                comment.repliesLoaded = true;\n                                comment.showReplies = !comment.showReplies;\n                                return comment;\n                            });\n                        } else {\n                            comment.showReplies = !comment.showReplies;\n                            return comment;\n                        }\n                    }\n\n                    function toggleCommentInput() {\n                        scope.showCommentInput = !scope.showCommentInput;\n                    }\n\n                    function clearCommentinput() {\n                        scope.model.myComment = null;\n                    }\n\n                    function toggleEditCommentMode(comment) {\n                        scope.editCommentMode = !scope.editCommentMode;\n                        scope.editComment = !!scope.editCommentMode ? comment : undefined;\n                    }\n\n                    function toggleReplyInput(comment) {\n                        scope.showReplyInput = !scope.showReplyInput;\n                        scope.targetComment = comment;\n                    }\n\n                    scope.$on('reply:complete', function (event, comment) {\n                        scope.toggleReplyInput(undefined);\n                    });\n                }\n            }\n        }])\n        .directive('critiquesBlock', ['$rootScope', 'DataService', 'UserActions', '$modal', '_', function ($rootScope, DataService, UserActions, $modal, _) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/critiques.html',\n                scope: {\n                    critiques: '=critiques',\n                    disable: '=disable',\n                    parentUrlId: '=',\n                    parentOwnerId: '='\n                },\n                link: function (scope, el, attrs) {\n                    scope.isLoggedIn = $rootScope.AppData.User;\n                    scope.showQuickReply = Foundation.MediaQuery.atLeast('large');\n\n                    scope.isPrivate = function (critique) {\n                        return critique.private;\n                    };\n\n                    scope.isOwnerOrAuthor = function (critique) {\n                        return scope.isLoggedIn && (scope.isLoggedIn.id == critique.user_id || scope.isLoggedIn.id == scope.parentOwnerId);\n                    };\n\n                    scope.deleteCritique = function (c) {\n                        UserActions.checkAuth().then(function (res) {\n                            if (res) {\n                                var modalInstance = $modal.open({\n                                    templateUrl: 'common/confirmDialog.html',\n                                    controller: ['$scope', '$modalInstance', function ($scope, $modalInstance) {\n                                        $scope.ok = function () {\n                                            $modalInstance.close(true);\n                                        };\n\n                                        $scope.cancel = function () {\n                                            $modalInstance.dismiss('cancel');\n                                        };\n                                    }],\n                                    size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\n                                    keyboard: true\n                                });\n                                modalInstance.result.then(function () {\n                                    if (scope.isOwnerOrAuthor) {\n                                        DataService.delete('Critique', c.id).then(function () {\n                                            $rootScope.toastMessage('Your critique was deleted.');\n                                            // Decrement film critiques_count\n                                            self.film.critiques_count--;\n                                            scope.updateVideoObj();\n                                            self.checkUserActions();\n                                            scope.critiques = _.reject(scope.critiques, function (a) {\n                                                return a.id === c.id;\n                                            });\n                                        });\n                                    }\n                                }, function () {\n                                    // console.info('Modal dismissed at: ' + new Date());\n                                });\n                            }\n                        })\n                    };\n                }\n            }\n        }])\n        .directive('toggleReplies', ['$rootScope', function ($rootScope) {\n            return {\n                restrict: 'A',\n                link: function (scope, el, attrs) {\n                    /*if (scope.comment.replies_count) {\n                        el.html('Show replies <i class=\"fa fa-angle-down\"></i>');\n                    }*/\n                    //comments reply hide show\n                    el.on('click', function () {\n                        scope.loadReplies(scope.comment);\n                        if (scope.comment.replies_count  /*jQuery(this).parent().next().length > 0*/) {\n                            jQuery(this).parent().nextAll().slideToggle();\n                            //jQuery(this).html(jQuery(this).text() === 'Hide replies' ? 'Show replies' : 'Hide replies');\n                            if (jQuery(this).hasClass('hide-reply')) {\n                                jQuery(this).removeClass('hide-reply');\n                                jQuery(this).html('Show replies <i class=\"fa fa-angle-down\"></i>');\n                            } else {\n                                jQuery(this).addClass('hide-reply');\n                                jQuery(this).html('Hide replies <i class=\"fa fa-angle-up\"></i>');\n                            }\n                        }\n                    });\n\n                }\n            }\n        }])\n        .directive('repliesBlock', [function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'directives/replies.html',\n                link: function (scope, el, attrs) {\n\n                }\n            }\n        }])\n        .directive('replyBlock', ['$rootScope', 'UserActions', 'DataService', '_', function ($rootScope, UserActions, DataService, _) {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'directives/reply-comment.html',\n                link: function (scope, el, attrs) {\n                    scope.postReply = _.throttle(postReply, 1000);\n                    function postReply() {\n                        if (!$rootScope.isAuthenticated()) {\n                            UserActions.loginModal();\n                            return false;\n                        }\n\n                        if ($rootScope.isNotVerified()) {\n                            $rootScope.toastAction('Please verify your account so you can rate videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\n                            return false;\n                        }\n\n                                var repliedTo = angular.isString(scope.targetComment.comment_id) ? scope.targetComment.comment_id : scope.targetComment;\n                                if (angular.isString(repliedTo)) {\n                                    repliedTo = _.findWhere(scope.comments.data, {id: scope.targetComment.comment_id})\n                                }\n                                DataService.save('comments', {\n                                    body: scope.myReply,\n                                    critique_id: scope.parent.id,\n                                    comment_id: repliedTo.id,\n                                    user_id: scope.model.isLoggedIn.id\n                                }).then(function (comment) {\n\n                                    if (!!repliedTo.repliesLoaded) {\n                                        var repliesLoaded = true;\n                                        var oldReplies = repliedTo.replies || [];\n                                    }\n                                    if (!repliedTo.replies) {\n                                        repliedTo.replies = [];\n                                    }\n\n                                    repliedTo.replies.push(comment.data.data);\n                                    repliedTo.replies_count++;\n                                    scope.toggleReplyInput();\n                                    // refresh parent data\n                                    scope.parent.comments_count++;\n                                    if (scope.parent.hasOwnProperty('unlist')) {\n                                        DataService.item('projects', scope.parent.id).then(function (a) {\n                                            angular.extend(scope.parent, a.data.data);\n                                            if (repliesLoaded) {\n                                                repliedTo.repliesLoaded = true;\n                                                oldReplies.push(comment.data.data);\n                                                repliedTo.replies = oldReplies;\n                                            }\n                                        });\n                                    } else {\n                                        DataService.item('critiques', scope.parent.id).then(function (a) {\n                                            angular.extend(scope.parent, a.data.data);\n                                            if (repliesLoaded) {\n                                                repliedTo.repliesLoaded = true;\n                                                oldReplies.push(comment.data.data);\n                                                repliedTo.replies = oldReplies;\n                                            }\n                                        });\n                                    }\n                                    $rootScope.toastMessage('Reply posted!');\n                                    scope.myReply = null;\n\n                                }, function (error) {\n                                    console.log('Failed to create new reply, with error code: ' + error.message);\n                                });\n                    }\n                }\n            }\n        }])\n        .directive('quickReplyBlock', ['$rootScope', 'UserActions', 'DataService', '_', function ($rootScope, UserActions, DataService, _) {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'directives/reply-comment.html',\n                link: function (scope, el, attrs) {\n                    scope.model = {\n                        isLoggedIn: $rootScope.AppData.User\n                    };\n\n                    scope.postReply = _.throttle(postReply, 1000);\n                    function postReply() {\n                        if (!$rootScope.isAuthenticated()) {\n                            UserActions.loginModal();\n                            return false;\n                        }\n\n                        if ($rootScope.isNotVerified()) {\n                            $rootScope.toastAction('Please verify your account so you can rate videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\n                            return false;\n                        }\n\n                        DataService.save('comments', {\n                            body: scope.myReply,\n                            critique_id: scope.critique.id,\n                            user_id: scope.model.isLoggedIn.id\n                        }).then(function (comment) {\n                            scope.critique.comments_count++;\n                            scope.myReply = null;\n                            scope.showQuickReply = false;\n\n                            // register Action\n                            $rootScope.toastMessage('Quick Reply posted!');\n                        }, function (error) {\n                            console.log('Failed to create new reply, with error code: ' + error.message);\n                        });\n                    }\n                }\n            }\n        }])\n        .directive('editCommentBlock', ['$rootScope', 'UserActions', 'DataService', '_', function ($rootScope, UserActions, DataService, _) {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'directives/edit-comment.html',\n                link: function (scope, el, attrs) {\n                    scope.editedBody = scope.editComment.body;\n                    scope.updateComment = _.throttle(updateComment, 1000);\n                    function updateComment() {\n                        if (scope.editedBody === scope.editComment.body) {\n                            scope.toggleEditCommentMode();\n                            return scope.editComment;\n                        }\n                        UserActions.checkAuth().then(function (res) {\n                            DataService.update('comments', scope.editComment.id, {\n                                body: scope.editedBody,\n                                editedAt: moment().toDate()\n                            }).then(function (comment) {\n                                scope.toggleEditCommentMode();\n                                return comment.data;\n                            })\n                        });\n                    }\n                }\n            }\n        }])\n        .directive('focusOn', ['$timeout', function ($timeout) {\n            return {\n                restrict: 'A',\n                link: function ($scope, $element, $attr) {\n                    $scope.$watch($attr.focusOn, function (_focusVal) {\n                        $timeout(function () {\n                            _focusVal ? $element.focus() :\n                                $element.blur();\n                        });\n                    });\n                }\n            }\n        }])\n        .directive('validateEmail', function () {\n            // var EMAIL_REGEXP = /^[_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,5})$/;\n            var EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            // var EMAIL_REGEXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n            return {\n                require: 'ngModel',\n                restrict: '',\n                link: function (scope, elm, attrs, ctrl) {\n                    // only apply the validator if ngModel is present and Angular has added the email validator\n                    if (ctrl && ctrl.$validators.email) {\n\n                        // this will overwrite the default Angular email validator\n                        ctrl.$validators.email = function (modelValue) {\n                            return ctrl.$isEmpty(modelValue) || EMAIL_REGEXP.test(modelValue);\n                        };\n                    }\n                }\n            };\n        })\n        .directive('myEnter', function () {\n            return function (scope, element, attrs) {\n                element.bind(\"keydown keypress\", function (event) {\n                    if (event.which === 13) {\n                        scope.$apply(function () {\n                            scope.$eval(attrs.myEnter);\n                        });\n\n                        event.preventDefault();\n                    }\n                });\n            };\n        })\n        .directive('datepicker', ['$document', function ($document) {\n            return {\n                require: 'ngModel',\n                restrict: 'A',\n                scope: {format: \"=\"},\n                link: function (scope, el, attrs, ngModel) {\n                    var FIREFOX = /Firefox/i.test(navigator.userAgent);\n                    var IEXPLORER = $document.documentMode||false;\n\n                    if (FIREFOX || IEXPLORER) {\n                        jQuery(el).fdatepicker({format: scope.format || \"mm-dd-yyyy\"}).on('changeDate', function (ev) {\n                            scope.$apply(function () {\n                                ngModel.$setViewValue(ev.date);\n                            });\n                        })\n                    }\n                }\n            }\n        }])\n        .directive('linkify', ['$filter', '$timeout', 'linkify', function ($filter, $timeout, linkify) {\n            return {\n                restrict: 'A',\n                link: function (scope, element, attrs) {\n                    var type = attrs.linkify || 'normal';\n                    $timeout(function () {\n                        element.html(linkify[type](element.html()));\n                    });\n                }\n            };\n        }])\n        .directive('broadstreetZone', ['$window', '$sce', function ($window, $sce) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/broadstreet-zone.html',\n                transclude: true,\n                scope: { \n                    zone: \"=\",\n                    width: \"=\",\n                    height: \"=\",\n                },\n                link: function (scope, el, attrs) {\n                    scope.link = $sce.trustAsResourceUrl('https://ad.broadstreetads.com/zdisplay/' + scope.zone + '.html');\n                }\n            }\n        }])\n        .directive('staticSideBar', ['$window', '$sce', function ($window, $sce) {\n            return {\n                restrict: 'E',\n                templateUrl: 'directives/static-sidebar.html',\n                transclude: true,\n                replace: true\n            }\n        }])\n        .directive('nonAngularRoutes', ['$window', '$rootElement', function ($window, $rootElement) {\n            return {\n                restrict: 'A',\n                // templateUrl: 'directives/static-sidebar.html',\n                // transclude: true,\n                link: function () {\n                    $rootElement.off('click');\n                }\n            }\n        }]);\n\n    angular.module('IndieWise.filters', [])\n        .filter('truncate', function () {\n            return function (text, length, end) {\n                if (angular.isString(text)) {\n                    if (isNaN(length))\n                        length = 10;\n\n                    if (end === undefined)\n                        end = \"...\";\n\n                    if (text.length <= length || text.length - end.length <= length) {\n                        return text;\n                    }\n                    else {\n                        return String(text).substring(0, length - end.length) + end;\n                    }\n                }\n            };\n        })\n        .filter('secondsToDateTime', [function () {\n            return function (seconds) {\n                return new Date(1970, 0, 1).setSeconds(seconds);\n            };\n        }])\n        .filter('linkify', function () {\n\n            function linkify(_str, type) {\n                if (!_str) {\n                    return;\n                }\n\n                var _text = _str.replace(/(?:https?\\:\\/\\/|www\\.)+(?![^\\s]*?\")([\\w.,@?!^=%&amp;:\\/~+#-]*[\\w@?!^=%&amp;\\/~+#-])?/ig, function (url) {\n                    var wrap = document.createElement('div');\n                    var anch = document.createElement('a');\n                    anch.href = url;\n                    anch.target = \"_blank\";\n                    anch.innerHTML = url;\n                    wrap.appendChild(anch);\n                    return wrap.innerHTML;\n                });\n\n                // bugfix\n                if (!_text) {\n                    return '';\n                }\n\n                // Twitter\n                if (type === 'twitter') {\n                    _text = _text.replace(/(|\\s)*@([\\u00C0-\\u1FFF\\w]+)/g, '$1<a href=\"https://twitter.com/$2\" target=\"_blank\">@$2</a>');\n                    _text = _text.replace(/(^|\\s)*#([\\u00C0-\\u1FFF\\w]+)/g, '$1<a href=\"https://twitter.com/search?q=%23$2\" target=\"_blank\">#$2</a>');\n                }\n\n\n                // Github\n                if (type === 'github') {\n                    _text = _text.replace(/(|\\s)*@(\\w+)/g, '$1<a href=\"https://github.com/$2\" target=\"_blank\">@$2</a>');\n                }\n\n                return _text;\n            }\n\n            //\n            return function (text, type) {\n                return linkify(text, type);\n            };\n        });\n        /*.filter('moment', function () {\n            return function (input, momentFn /!*, param1, param2, ...param n *!/) {\n                var args = Array.prototype.slice.call(arguments, 2),\n                    momentObj = moment(input);\n                return momentObj[momentFn].apply(momentObj, args);\n            };\n        })*/\n})();","(function () {\n    'use strict';\n    angular\n        .module('IndieWise.services', [])\n        .factory('FacebookAngularPatch', ['$q', '$timeout', '$window', function ($q, $timeout, $window) {\n\n            var fbApiAngular = function () {\n\n                var params = [].splice.call(arguments, 0);\n                var defer = $q.defer();\n                var angularWrap = $timeout;\n\n                $window.fbPromise.then(function () {\n\n                    // Pushing callback function that will resolve to the params array\n                    params.push(function (response) {\n                        if (!___.isUndefined(response.error)) {\n                            angularWrap(function () {\n                                defer.reject(response.error);\n                            });\n                            return;\n                        }\n\n                        angularWrap(function () {\n                            defer.resolve(response);\n                        });\n                    });\n\n                    FB.api.apply(FB, params);\n\n                });\n\n                return defer.promise;\n            };\n\n\n            // using the fbPromise we set up in index.html, we extend the FB SDK with FB.apiAngular\n            // now we use FB.apiAngular instead of FB.api, which gives us an angular wrapped promise\n            if (angular.isObject($window.FB)) {\n                $window.FB.init({\n                    appId: '150687055270744',\n                    status: true,\n                    cookie: true,\n                    xfbml: true,\n                    version: 'v2.7'\n                });\n\n                $window.FB.AppEvents.activateApp();\n\n                /*$window.fbPromise.then(function () {\n                    FB.apiAngular = fbApiAngular;\n                });*/\n            }\n\n            return fbApiAngular;\n        }])\n        .factory('AuthService', AuthService)\n        .factory('UserActions', UserActions)\n        .factory('DataService', DataService)\n        .factory('socket', ['$rootScope', '$window',function ($rootScope, $window) {\n            var socket = io($window.location.origin, {\n                'secure': true,\n                'reconnect': true,\n                'reconnection delay': 500,\n                'max reconnection attempts': 10\n            });\n            return {\n                on: function (eventName, callback) {\n                    socket.on(eventName, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            callback.apply(socket, args);\n                        });\n                    });\n                },\n                emit: function (eventName, data, callback) {\n                    socket.emit(eventName, data, function () {\n                        var args = arguments;\n                        $rootScope.$apply(function () {\n                            if (callback) {\n                                callback.apply(socket, args);\n                            }\n                        });\n                    })\n                }\n            };\n        }])\n        .factory('linkify', ['$filter', function ($filter) {\n            function _linkifyAsType(type) {\n                return function (str) {\n                    // (type, str);\n                    return $filter('linkify')(str, type);\n                };\n            }\n\n            return {\n                twitter: _linkifyAsType('twitter'),\n                github: _linkifyAsType('github'),\n                normal: _linkifyAsType()\n            };\n        }])\n        .service('anchorSmoothScroll', function(){\n\n            this.scrollTo = function(eID) {\n\n                // This scrolling function\n                // is from http://www.itnewb.com/tutorial/Creating-the-Smooth-Scroll-Effect-with-JavaScript\n\n                var startY = currentYPosition();\n                var stopY = elmYPosition(eID);\n                var distance = stopY > startY ? stopY - startY : startY - stopY;\n                if (distance < 100) {\n                    scrollTo(0, stopY); return;\n                }\n                var speed = Math.round(distance / 100);\n                if (speed >= 20) speed = 20;\n                var step = Math.round(distance / 25);\n                var leapY = stopY > startY ? startY + step : startY - step;\n                var timer = 0;\n                if (stopY > startY) {\n                    for ( var i=startY; i<stopY; i+=step ) {\n                        setTimeout(\"window.scrollTo(0, \"+leapY+\")\", timer * speed);\n                        leapY += step; if (leapY > stopY) leapY = stopY; timer++;\n                    } return;\n                }\n                for ( var i=startY; i>stopY; i-=step ) {\n                    setTimeout(\"window.scrollTo(0, \"+leapY+\")\", timer * speed);\n                    leapY -= step; if (leapY < stopY) leapY = stopY; timer++;\n                }\n\n                function currentYPosition() {\n                    // Firefox, Chrome, Opera, Safari\n                    if (self.pageYOffset) return self.pageYOffset;\n                    // Internet Explorer 6 - standards mode\n                    if (document.documentElement && document.documentElement.scrollTop)\n                        return document.documentElement.scrollTop;\n                    // Internet Explorer 6, 7 and 8\n                    if (document.body.scrollTop) return document.body.scrollTop;\n                    return 0;\n                }\n\n                function elmYPosition(eID) {\n                    var elm = document.getElementById(eID);\n                    var y = elm.offsetTop;\n                    var node = elm;\n                    while (node.offsetParent && node.offsetParent != document.body) {\n                        node = node.offsetParent;\n                        y += node.offsetTop;\n                    } return y;\n                }\n\n            };\n\n        });\n\n    UserActions.$inject = ['$rootScope', '$q', 'AuthService', 'DataService', 'UtilsService', '$timeout', '$modal', '$mdMedia'];\n    function UserActions($rootScope, $q, AuthService, DataService, UtilsService, $timeout, $modal, $mdMedia) {\n        var service = {\n            checkAuth: function () {\n                var deferred = $q.defer();\n                AuthService.isAuthenticated() ? deferred.resolve(true) : deferred.reject(false);\n                return deferred.promise;\n            },\n            markAsWatched: function (video) {\n                // Set as watched when user has watched 20% for the video's runtime or 6 seconds\n                var time = 0;// (video.attributes.runTime * 200) || 6000;\n                return $timeout(function () {\n                    //console.log('Marked as Watched');\n                    DataService.save('projects/watched', {\n                        project_id: video.id\n                    });\n                }, time);\n            },\n            cancelWatched: function (promise) {\n                $timeout.cancel(promise);\n            },\n            canCritique: function (filmId) {\n                var deferred = $q.defer();\n                if (AuthService.isAuthenticated()) {\n                    DataService.collection('critiques', {project: filmId, user: AuthService.currentUser.id})\n                        .then(function (res) {\n                            res.data.data.length\n                                // critique exists already from this user\n                                ? deferred.reject(res.data.data[0])\n                                // user hasn't critiqued yet\n                                : deferred.resolve(true);\n                        });\n                } else {\n                    deferred.reject(false);\n                }\n                return deferred.promise;\n            },\n            canReact: function (filmId) {\n                var deferred = $q.defer();\n                if (AuthService.currentUser) {\n                    DataService.collection('reactions', {project: filmId, user: AuthService.currentUser.id})\n                        .then(function (res) {\n                            res.data.data.length\n                                // critique exists already from this user\n                                ? deferred.reject(res.data.data[0])\n                                // user hasn't critiqued yet\n                                : deferred.resolve(true);\n                        });\n                } else {\n                    deferred.reject(false);\n                }\n                return deferred.promise;\n            },\n            canRate: function (filmId) {\n                var deferred = $q.defer();\n                if (AuthService.currentUser) {\n                    DataService.collection('ratings', {project: filmId, user: AuthService.currentUser.id})\n                        .then(function (res) {\n                            res.data.ratings.length\n                                // critique exists already from this user\n                                ? deferred.reject(res.data.ratings[0])\n                                // user hasn't critiqued yet\n                                : deferred.resolve(true);\n                        });\n                } else {\n                    deferred.reject(false);\n                }\n                return deferred.promise;\n            },\n            loginModal: function () {\n                if (!$rootScope.authModalOpen) {\n                    var options = {\n                        controller: SignInModalCtrl,\n                        controllerAs: 'SIC',\n                        templateUrl: 'auth/sign-in-dialog.html',\n                        size: Foundation.MediaQuery.atLeast('medium') ? 'large' : 'full'\n                    };\n\n                    var modalInstance = $modal.open(options);\n                    modalInstance.result.then(function (answer) {\n                        console.log(answer);\n                        $rootScope.authModalOpen = false;\n                        zIndexPlayer(true);\n                    }, function () {\n                        console.log('You cancelled the dialog.');\n                        $rootScope.authModalOpen = false;\n                        zIndexPlayer(true);\n                    });\n                    $rootScope.authModalOpen = true;\n                }\n            }\n        };\n        return service;\n    }\n\n    AuthService.$inject = ['$rootScope', '$q', '$state', '$http', 'DataService', '$auth', 'API', '$cookies'];\n    function AuthService($rootScope, $q, $state, $http, DataService, $auth, API, $cookies) {\n        /**\n         *\n         * @returns {*}\n         */\n\n\n        var service = {\n            /**\n             *\n             * @param _userParams\n             */\n            createUser: function (_userParams) {\n\n                var user = {\n                    email: _userParams.email,\n                    password: _userParams.password,\n                    password_confirmation:_userParams.passwordCheck,\n                    username: _userParams.email,\n                    firstName: _userParams.firstName,\n                    lastName: _userParams.lastName,\n                    fullName: _userParams.firstName + ' ' + _userParams.lastName,\n                    country_id: _userParams.country,\n                    dob: _userParams.dob,\n                    gender: _userParams.gender,\n                };\n\n                return $auth.signup(user)\n                    .then(function (userData) {\n                        service.error = '';\n                        console.log('User ' + userData.username + ' created successfully!');\n                        return service.login(_userParams.email, _userParams.password).then(function (res) {\n                            console.log(res);\n                            service.getCurrentUser().then(function (res) {\n                                console.log(res);\n                                $state.go('profile.about');\n                            });\n                        });\n                    })\n                    .catch(function (error) {\n                        return {\n                            status: false,\n                            errors: service.error = error.data.errors || 'Unknown error from server'\n                        };\n                    });\n            },\n            /**\n             *\n             * @param _userParams\n             */\n            updateUser: function (_userParams) {\n                return DataService.update('users/me', _userParams.id, _userParams).then(function (response) {\n                    return response;\n                }).catch(function (error) {\n                    console.log(error);\n                    return error;\n                });\n            },\n            /**\n             *\n             * @param _userParams\n             */\n            deleteUser: function (_userParams) {\n                return DataService.delete('users/me', _userParams.id).then(function (response) {\n                    return response;\n                });\n            },\n            /**\n             *\n             * @param _userParams\n             */\n            requestVerification: function () {\n                return DataService.collection('request_verification').then(function (response) {\n                    return response;\n                });\n            },\n            /**\n             *\n             * @param Back&\n             * @returns {Promise}\n             */\n            currentUser: null,\n            getCurrentUser: function (force) {\n                var deferred = $q.defer();\n                if(service.isAuthenticated()) {\n                    if (!angular.isObject(service.currentUser)) {\n                        $http.get(API + 'authenticate').then(function (response) {\n                            $cookies.put('iw_token', $auth.getToken(), { secure: true});\n                            deferred.resolve($rootScope.AppData.User = service.currentUser = response.data.user);\n                        });\n                    } else {\n                        deferred.resolve(service.currentUser);\n                    }\n                } else {\n                    deferred.reject(false);\n                }\n                return deferred.promise;\n\n            },\n            /**\n             *\n             * @param _user\n             * @param _password\n             * @returns {Promise}\n             */\n            login: function (_user, _password) {\n                return $auth.login({ email: _user, password: _password })\n                    .then(function (response) {\n                        if (response.status === 200) {\n                            $http.defaults.headers.common.Authorization = 'Bearer ' + response.data.token;\n                            $auth.setToken(response.data.token);\n                            $cookies.put('iw_token', response.data.token, { secure: true});\n                            service.getCurrentUser();\n                            return true;\n                        } else {\n                            return {\n                                status: false,\n                                errors: service.error = { credentials: ['Invalid email or password']}\n                            };\n                        }\n                    })\n                    .catch(function(response) {\n                        // Handle errors here, such as displaying a notification\n                        // for invalid email and/or password.\n                        console.log(response);\n                        return {\n                            status: false,\n                            errors: service.error = response.data ? response.data.errors : 'Unknown error from server'\n                        };\n                    });\n            },\n            socialLogin: function (provider, isModal) {\n                isModal = isModal || false;\n                return $auth.authenticate(provider)\n                    .then(function(response) {\n                        // console.log(response.data);\n                        service.getCurrentUser().then(function (user) {\n                            self.error = '';\n                            if (!isModal) {\n                                if (moment(user.created_at).isSame(moment(), 'hour')) {\n                                    console.log('User ' + user.fullName + ' created successfully!');\n                                    $state.go('profile.about');\n                                } else {\n                                    if($rootScope.$stateParams.redirect) {\n                                        return window.location.href = $rootScope.$stateParams.redirect;\n                                    };\n                                    $state.go('home');\n                                }\n                            } else {\n                                return user;\n                            }\n                        });\n                    })\n                    .catch(function(response) {\n                        console.log(response);\n                        return {\n                            status: false,\n                            errors: service.error = response || 'Unknown error from server'\n                        };\n                    });\n            },\n            /**\n             *\n             * @returns {Promise}\n             */\n            logout: function () {\n                //var deferred = $q.defer();\n                return $http.post(API + 'logout', null).then(function () {\n                    $auth.removeToken();\n                    $cookies.remove('iw_token');\n                    $auth.logout();\n                    // localStorage.removeItem('User');\n                    // $rootScope.AppData.User = undefined;\n                    //deferred.resolve(true);\n                });\n                //return deferred.promise;\n            },\n            /**\n             *\n             * @param email\n             * @returns {Promise}\n             */\n            requestPasswordReset: function (email) {\n                return $http.post(API + 'requestPasswordReset', {email: email}).then(function (res) {\n                    console.log(res);\n                    return res;\n                }, function (error) {\n                    //console.log(error);\n                    return error;\n                });\n            },\n            passwordReset: function (email, password, password_confirmation,token) {\n                return $http.post(API + 'resetPassword', {email: email, password: password, password_confirmation: password_confirmation, token: token})\n                    .then(function (res) {\n                        console.log(res);\n                        $state.go('sign_in');\n                        return res;\n                    }, function (error) {\n                        //console.log(error);\n                        return error;\n                    });\n            },\n            parseJwt: function(token) {\n                var base64Url = token.split('.')[1];\n                var base64 = base64Url.replace('-', '+').replace('_', '/');\n                return JSON.parse(atob(base64));\n            },\n            isAuthenticated: function() {\n                //var params = $auth.getPayload();\n                //console.log(params);\n                return $auth.isAuthenticated();\n            },\n            isVerified: function () {\n                // if user is authenticated and currentUser is an object\n                if (this.isAuthenticated && angular.isObject(this.currentUser)) {\n                    // if currentUser.verified is true\n                    if(this.currentUser.verified === 1 || this.currentUser.verified === true) {\n                        return true;\n                    } else {\n                        // restrict continuous checking. If 30 seconds since the last check has passed, try again\n                        if (this.lastCheckedVerification === null || moment().isAfter( this.lastCheckedVerification.add(30, 's')) ) {\n                            var test = this.throttledVerificationCheck();\n                            return this.currentUser.verified = $rootScope.AppData.User.verified = !!test.$$state.status ? test.$$state.value : false;\n                        } else {\n                            return false;\n                        }\n                    }\n                } else {\n                    // not logged in\n                    return false;\n                }\n            },\n            throttledVerificationCheck: _.throttle(function () {\n                var self = this;\n                return $http.get(API + 'check_verification').then(function (response) {\n                    self.lastCheckedVerification = moment();\n                    return response.data.check;\n                });\n            }.bind(this), 30000),\n            checkedVerification: false,\n            lastCheckedVerification: null\n        };\n\n        function _init() {\n            service.getCurrentUser();\n        }\n\n        _init();\n        return service;\n    }\n\n    DataService.$inject = ['$http', 'API'];\n    function DataService($http, API) {\n        var vm = this;\n\n        vm.collection = function (name, params) {\n            var data = angular.extend({per_page: 10, page: 1}, params);\n            return $http({\n                method: 'GET',\n                url: API + name,\n                params: data\n            });\n        };\n        vm.item = function (name, id, include, search) {\n            return $http({\n                method: 'GET',\n                url: API + name + '/' + id,\n                params: {\n                    include: include,\n                    search: search\n                }\n            });\n        };\n        vm.save = function (name, data, params) {\n            return $http({\n                method: 'POST',\n                url: API + name,\n                params: params,\n                data: data\n            });\n        };\n        vm.update = function (name, id, data, params) {\n            return $http({\n                method: 'PUT',\n                url: API + name + '/' + id,\n                params: params,\n                data: data\n            });\n        };\n        vm.delete = function (name, id) {\n            return $http({\n                method: 'DELETE',\n                url: API + name + '/' + id\n            });\n        };\n        vm.mail = function (route, params) {\n            return $http.post(API + route, params);\n        };\n\n\n        // Newsletter Form\n        vm.notifyMe = function (params) {\n            return $http.post('utils/notify-me.php', params);\n        };\n\n        return vm;\n    }\n\n    SignInModalCtrl.$inject = ['$rootScope', '$timeout', 'AuthService', '$modalInstance'];\n    function SignInModalCtrl($rootScope, $timeout, AuthService, $modalInstance) {\n        zIndexPlayer();\n        $rootScope.metadata.title = 'Sign In';\n        var self = this;\n        self.user = {\n            email: '',\n            password: ''\n        };\n\n        self.doLogin = function (redirect) {\n            redirect = redirect || true;\n            self.error = false;\n            AuthService.login(self.user.email, self.user.password).then(function (res) {\n                console.log('Success', res);\n                if (redirect) {\n                    //$state.go('home');\n                    //window.location.reload();\n                }\n            }, function (res) {\n                self.error = res;\n                console.log('Failed', res);\n            }).then(function () {\n                self.ok();\n            });\n        };\n\n\n        self.authenticate = function (provider) {\n            self.error = null;\n            AuthService.socialLogin(provider, true).then(function (a) {\n                console.log(a);\n                self.ok();\n            });\n        };\n\n        self.ok = function () {\n            $modalInstance.close();\n        };\n\n        self.cancel = function () {\n            $modalInstance.dismiss('cancel');\n        };\n\n        $timeout(function () {\n            jQuery(document).foundation();\n            $timeout(function () {\n                jQuery(document).foundation();\n            }, 500);\n        }, 0);\n    }\n\n    function zIndexPlayer(remove) {\n        var vidDiv = jQuery('.flex-video');\n        if (vidDiv) {\n            !!remove ? vidDiv.css('z-index', '') : vidDiv.css('z-index', 0);\n        }\n    }\n\n})();\n\n","/**\n * Utility Functions\n * Created by Jerez on 11/8/2015.\n */\nangular.module('IndieWise.utilities', [])\n.factory('UtilsService',  ['$rootScope', '$window', 'DataService', function ($rootScope, $window, DataService) {\n        'use strict';\n        return {\n            compressArray: function (original) {\n                var compressed = [];\n                // make a copy of the input array\n                var copy = original.slice(0);\n\n                // first loop goes over every element\n                for (var i = 0; i < original.length; i++) {\n\n                    var myCount = 0;\n                    // loop over every element in the copy and see if it's the same\n                    for (var w = 0; w < copy.length; w++) {\n                        if (original[i] == copy[w]) {\n                            // increase amount of times duplicate is found\n                            myCount++;\n                            // sets item to undefined\n                            delete copy[w];\n                        }\n                    }\n\n                    if (myCount > 0) {\n                        var a = new Object();\n                        a.value = original[i];\n                        a.count = myCount;\n                        compressed.push(a);\n                    }\n                }\n\n                return compressed;\n            },\n            parseJwt: function(token) {\n                var base64Url = token.split('.')[1];\n                var base64 = base64Url.replace('-', '+').replace('_', '/');\n                return JSON.parse($window.atob(base64));\n            }\n        }\n    }]);\n\nif (!String.prototype.endsWith) {\n    String.prototype.endsWith = function(searchString, position) {\n        var subjectString = this.toString();\n        if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n            position = subjectString.length;\n        }\n        position -= searchString.length;\n        var lastIndex = subjectString.indexOf(searchString, position);\n        return lastIndex !== -1 && lastIndex === position;\n    };\n}\n\n/**\n *  @function String.reverse\n *  @description Reverse a string\n *  @return string\n **/\nString.prototype.reverse = function(){\n    return this.split('').reverse().join('');\n};\n"],"sourceRoot":"/source/"}