{"version":3,"sources":["app.ts","controllers.ts","home.js","home-projects-list.ts","browse.js","latest.js","winners.js","directives.ts","services.ts","utils.ts"],"names":["loadScript","url","callback","script","document","createElement","type","onload","src","getElementsByTagName","appendChild","jQuery","foundation","ready","backtotop","length","scrollTrigger","backToTop","scrollTop","window","addClass","removeClass","on","e","preventDefault","animate","mouseenter","mouseleave","thumb","find","id","attr","eq","show","hide","fadeIn","$par","click","n","hasClass","angular","module","factory","___","constant","momentTimeZone","timezone","API","BASE","config","$authProvider","loginUrl","signupUrl","facebook","clientId","redirectUri","location","origin","google","twitter","$intercomProvider","INTERCOM_APPID","appID","asyncLoading","filepickerProvider","setKey","cloudinaryProvider","upload_endpoint","cloud_name","upload_preset","$compileProvider","debugInfoEnabled","AnalyticsProvider","setAccount","$httpProvider","interceptors","push","$q","$injector","$location","retryHttpRequest","deferred","successCallback","response","resolve","errorCallback","reject","$http","get","then","headers","status","indexOf","defer","promise","$mdThemingProvider","$mdIconProvider","theme","primaryPalette","accentPalette","icon","$stateProvider","$urlRouterProvider","$locationProvider","when","state","authenticate","templateUrl","controller","Critique","$stateParams","DataService","item","url_id","result","AuthService","isAuthenticated","data","user_id","currentUser","abstract","User","UserStats","Videos","collection","owner","sort","per_page","Critiques","user","include","Critiqued","notUser","Reactions","Reacted","Awards","Nominations","Nominated","Access","$rootScope","isNotVerified","toastAction","requestVerificationEmail","toastMessage","Project","Playlists","Genres","fieldName","operator","value","UserTypes","Conversations","catch","html5Mode","enabled","requireBase","rewriteLinks","$transitionsProvider","onError","transition","error","console","streamApiKey","streamApiSecret","streamApp","run","$state","UtilsService","$timeout","$transitions","StreamConfig","anchorSmoothScroll","amMoment","$intercom","FacebookAngularPatch","socket","attachFastClick","body","AppData","Notifications","loaded","NotificationsFeed","MessageNotifications","searchText","thisState","metadata","title","description","image","isViewLoading","today","moment","toDate","isVerified","test","justVerified","search","listenNotifications","username","refreshNotifications","res","log","list","unseen","_","where","seen","unread","StreamClient","stream","connect","getNewToken","token","getMessagesFeed","feed","limit","results","subscribeUserFeeds","subscribe","obj","getNotificationsFeed","activities","getNewMessages","$on","intercomShowing","endWatch","$watch","newValue","oldValue","isString","name","fullName","boot","OneSignal","appId","safari_web_id","autoRegister","notifyButton","enable","push_id","getUserId","userId","updateUser","setLoading","unsetLoading","onBefore","$transition$","onStart","to","from","target","getCurrentUser","onSuccess","scrollTo","defaultErrorHandler","err","children","$broadcast","toggleClass","slideToggle","$localForageProvider","version","storeName","$sceDelegateProvider","resourceUrlWhitelist","RegExp","mysql_real_escape_string","str","replace","char","SignInCtrl","ForgotPasswordCtrl","RegisterCtrl","ProfileCtrl","UserAboutController","ProfilePlaylistsController","UserVideosController","ProfileVideoEditCtrl","UserCritiquesController","UserReactionsController","UserAwardsController","ProfileSettingsController","ProfileUploadController","UserCtrl","MessagesCtrl","NotificationsCtrl","BodyCtrl","VideoCtrl","VideoCritiqueCtrl","VideoCritiqueEditCtrl","ContactPageCtrl","$inject","self","creating","accountCreated","genresArr","typesArr","email","password","passwordCheck","firstName","lastName","gender","dobDay","dobMonth","dobYear","authErrors","errors","genres","types","thisYear","year","yearsList","i","generateCountries","countryList","checkEmailUse","verify","doRegister","dob","set","parseInt","startOf","format","createUser","provider","socialLogin","a","go","reload","$window","$modal","cfpLoadingBar","doLogin","redirect","login","isDefined","href","complete","hasOwnProperty","reseting","newPassword","newPasswordCheck","hasToken","doPasswordResetRequest","requestPasswordReset","message","confirmReset","passwordReset","$localForage","$mdToast","UserActions","$sce","$interval","$mdSidenav","selected","decodeURIComponent","q","selectedItem","notificationsTemplate","trustAsResourceUrl","newsletterRegister","getItem","timestamp","add","isBefore","clear","each","footerRecentVideos","startSearch","text","toPage","isIOS","navigator","userAgent","match","isAndroid","isMobile","Foundation","MediaQuery","current","requestVerification","verificationEmailSentMessage","generateGenres","genresList","setItem","toISOString","generateTypes","typesList","Types","Countries","generateLanguages","languageList","Languages","generateReactions","emotion","msg","toast","simple","textContent","position","parent","action","cb","hideDelay","highlightAction","toggleSideNav","closeSideNav","navID","toggle","close","args","notiURL","is_read","markAsRead","main_url","markAllAsSeen","unseenList","mark_seen","is_seen","markAllAsRead","mark_read","reason","doSignOut","logout","openNotificationsMenu","toSignInRedirect","pathname","toFavorites","toWatchLater","checkContains","isSame","favorite","watchLater","contains","b","notifyMe","$scope","Analytics","displayShare","toggleReactionsList","emotions","critiqueAverage","critiquesPage","nominationsPage","activeTab","isFaved","isSaved","playerResponsiveMode","localStorage","JSON","parse","tagsArray","lightsOff","film","init","currentTitle","substr","thumbnail_url","qReactions","qCritiques","qNominations","qWins","checkUserActions","initWatch","trackEvent","markAsWatched","undefined","zIndexPlayer","tags","split","notVideo","notOwner","random","relatedvideo","event","video","notify","canReact","disableCritique","owner_id","canCritique","canRate","project","reactions","chartedReactions","countBy","r","reactionCountMax","max","sortable","object","page","critiques","calcIwAverage","nominations","wins","total","overall","getEmoticonByEmotion","findWhere","showMessageDialog","checkAuth","params","recipient","videoOwner","ContactUserDialogController","msgModal","open","loginModal","rateThrottled","rate","direction","actionVerb","save","author_id","project_id","up","down","up_ratings_count","down_ratings_count","updateVideoObj","extend","projectOwner","isObject","update","react","resA","reactions_count","canReactIcon","emoticon","deleteCritique","c","ev","modalInstance","$modalInstance","ok","cancel","dismiss","size","atLeast","keyboard","critique","noms","nom","delete","nominationCount","critiques_count","openCritiqueDialog","$event","video_url_id","CritiqueDialogController","ratingMax","makePrivateHelp","processing","canNominate","trailer","awardsList","dialogModel","award_id","nominated","critique_id","starArray","copy","reverse","calcOverall","originality","pacing","structure","writing","style","dialogue","characters","presentation","concept","cinematography","performances","production","audio","music","$watchCollection","validateCritique","failA","failB","trim","postCritique","closeDialog","hoveringOver","overStar","percent","valueOf","alert","private","hosting_type","openShareDialog","Video","shareLink","openReactionDialog","Reaction","Emotions","selectedEmotion","reaction","openAddToDialog","toggleWidthMode","videoPlayer","resize","toggleLights","overlay","fadeToggle","reportDialog","closeOnClick","report","mail","remove","vidDiv","css","commentsPage","commentsParent","replies","comments","editedCritique","awards","edited_at","is","filepickerService","Upload","userStats","pickAvatar","pickBanner","generatePublicId","pick","cropRatio","mimetype","services","conversions","customSourcePath","Blob","coverPhoto","avatar","uploadType","newVideo","director","writer","producers","keyCast","language","completionDate","filmingCountry","originCountry","runTime","video_url","unlist","disableComments","nsfw","copyrightOwner","runtime","hours","mins","secs","maxDate","selectedGenre","runtimeToSeconds","getUserFilmPath","isURL","urlRegex","getThumbnailUrl","video_id","hosting_id","jsonp","sizes","thumbnail_large_url","validateNewVideoForm","isUndefined","isArray","syncGenres","bool","splice","isCheckedGenre","getDefaultImage","submitNewVideo","pluck","filmParams","language_id","filmingCountry_id","type_id","pickArtwork","$digest","uploadArtwork","file","upload","skipAuthorization","resp","secure_url","evt","progressPercentage","files","pickFile","saveComplete","editedProject","totalSeconds","Math","floor","thumbnail_large","updateProject","playlists","playlistItems","hasFave","selectedPlaylist","loadPlaylistItems","playlist","removeItem","$mdDialog","countries","updating","settings","throttle","pwSetting","notificationsActive","toggleNotifications","confirmTerminate","pwCanUseServiceWorkers","safari","chrome","pushwoosh","isBrowserChrome","subscribeAtStart","pushwooshSubscribe","pushwooshSetTags","urlId","stringify","syncTypes","isCheckedType","confirm","ariaLabel","targetEvent","deleteUser","model","mySubject","myMessage","postMessage","subject","recipients","Array","convo","projects","deleteProject","videoId","critiqued","reacted","$filter","selectedConvo","newConvo","conversations","newMode","newConversation","fetchConvos","querySearch","leaveConvo","doSendOnEnter","postReply","selectConvo","getParticipantById","myReply","sendOnEnter","inboxConvos","convoMessages","selectedConvoLoaded","viewportHeight","height","currentParticipants","participants","msgs","messages","conversation","first","meta","pagination","current_page","index","count","success","start","end","min","total_pages","union","serverDataIndex","postNewMsg","reply","adapter","append","viewport","element","prop","toString","query","notUsers","me","Parse","Object","first_name","last_name","__type","className","objectId","relParticipants","relation","refresh","emails","address","selectedEmail","getDescription","trustAsHtml","form","submitForm","HomeController","ProjectsListController","tip","field","refInterval","onfocus","onblur","perPage","component","bindings","BrowseController","isOpen","loading","selectedGenres","selectedTypes","films","arrs","filters","d","all","values","filterField","order","loadMore","selectGenres","genre","exists","selectTypes","filterBy","filter","toggleFilterNav","LatestController","WinnersController","date","subtract","fetchWinners","date_start","date_end","endOf","directive","restrict","transclude","scope","link","el","attrs","layerSlider","responsive","slideDelay","layersContainer","skin","hoverPrevNext","skinsPath","featuredFilms","carouselEl","owl","trigger","loopLength","divLength","owlCarousel","dots","items","slideBy","center","loop","margin","nav","autoplay","autoplayTimeout","autoWidth","autoHeight","merge","autoplayHoverPause","responsiveClass","getWatchedList","watched","next","newName","playlistArr","newPlInput","toggleNewPlInput","newPlaylist","pl","syncPlaylists","genreSetting","playlist_id","isCheckedPlaylist","showMoreHeight","showMore","speedDown","speedUp","showText","hideText","sources","tracks","otherSources","hideSidebar","setupOptions","controls","preload","techOrder","plugins","videoJsResolutionSwitcher","default","dynamicLabel","setupSource","media","vid","alt","finally","player","controlBar","suggestedVideoEndcap","header","suggestions","timeForPlayButton","videojs","socialShare","shareImage","shareText","handle","shareUrl","dest","source","thumbnail","updateElementWidth","p","itemWidth","playerWidth","offsetWidth","playerHeight","offsetHeight","itemHeight","round","youtube","$","newSize","def","setAttribute","styleSheet","cssText","createTextNode","onresize","onPlayerReady","poster","autoHide","autoHideTime","listenerStarted","hasWatched","videoType","youtubeID","vimeoID","mp4","imageUrl","imageTimer","prerollAD","prerollGotoLink","prerollSkipTimer","midrollAD","midrollAD_displayTime","midrollGotoLink","midrollSkipTimer","postrollAD","postrollGotoLink","postrollSkipTimer","popupAdShow","popupAdStartTime","popupAdEndTime","popupAdGoToLink","thumbImg","info","playlistFilms","preroll_mp4","midroll_mp4","postroll_mp4","popupImg","instanceName","instanceTheme","autohideControls","hideControlsOnMouseOut","playerLayout","playlistScrollType","playlistBehaviourOnPageload","colorAccent","vimeoColor","youtubeControls","youtubeSkin","youtubeColor","youtubeQuality","youtubeShowRelatedVideos","videoPlayerShadow","loadRandomVideoOnStart","shuffle","posterImg","onFinish","nowPlayingText","fullscreen","rightClickMenu","hideVideoSource","showAllControls","allowSkipAd","infoShow","shareShow","facebookShow","twitterShow","mailShow","facebookShareName","facebookShareLink","facebookShareDescription","facebookSharePicture","twitterText","twitterLink","twitterHashtags","twitterVia","googlePlus","logoShow","logoClickable","logoPath","logoGoToLink","logoPosition","embedShow","embedCodeSrc","embedCodeW","embedCodeH","embedShareLink","youtubePlaylistID","youtubeChannelID","videos","bind","$parent","parents","$description","html","prev","last","startedPlaying","addEventListener","vimeoListener","attachEvent","youtubePlayer","getPlayerState","removeEventListener","detachEvent","Date","videoPlayerWidth","videoPlayerHeight","setHeight","parentEl","prevElHeight","nextElHeight","newHeight","innerHeight","offset","top","Msgs","$mdMedia","related","queried","isQueried","isLoggedIn","disable","child","myComment","showCommentInput","showReplyInput","editCommentMode","postComment","deleteComment","loadReplies","showReplies","toggleCommentInput","toggleEditCommentMode","toggleReplyInput","comment","clearCommentinput","comments_count","parentComment","commentCount","z","pcQuery","Query","increment","repliesLoaded","editComment","targetComment","parentUrlId","parentOwnerId","showQuickReply","isPrivate","isOwnerOrAuthor","replies_count","nextAll","repliedTo","comment_id","oldReplies","editedBody","updateComment","editedAt","$element","$attr","focusOn","_focusVal","focus","blur","EMAIL_REGEXP","require","elm","ctrl","$validators","modelValue","$isEmpty","which","$apply","$eval","myEnter","$document","ngModel","FIREFOX","IEXPLORER","documentMode","fdatepicker","$setViewValue","linkify","zone","width","$rootElement","off","isNaN","String","substring","seconds","setSeconds","_str","_text","wrap","anch","innerHTML","fbApiAngular","call","arguments","angularWrap","fbPromise","FB","api","apply","cookie","xfbml","AppEvents","activateApp","io","eventName","emit","_linkifyAsType","github","normal","service","eID","startY","currentYPosition","stopY","elmYPosition","distance","speed","step","leapY","timer","setTimeout","pageYOffset","documentElement","getElementById","y","offsetTop","node","offsetParent","time","cancelWatched","filmId","ratings","authModalOpen","options","SignInModalCtrl","controllerAs","answer","$auth","$cookies","_userParams","password_confirmation","country_id","country","signup","userData","force","put","getToken","secure","_user","_password","defaults","common","Authorization","setToken","credentials","isModal","created_at","post","removeToken","parseJwt","base64Url","base64","atob","verified","lastCheckedVerification","isAfter","throttledVerificationCheck","$$state","check","checkedVerification","_init","vm","method","route","compressArray","original","compressed","slice","myCount","w","prototype","endsWith","searchString","subjectString","isFinite","lastIndex","join"],"mappings":"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","file":"all.js","sourcesContent":["function loadScript(url, callback) {\r\n\r\n    let script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n\r\n    script.onload = function () {\r\n        callback();\r\n    };\r\n    script.src = url;\r\n    document.getElementsByTagName('head')[0].appendChild(script);\r\n}\r\n\r\n/*if (window.chrome && window.chrome.cookies) {\r\n    loadScript('/pushwoosh-web-pushes-http-sdk.js?pw_application_code=73409-786EB', function () {\r\n    })\r\n} else {\r\n    loadScript('/pushwoosh-web-notifications.js', function () {\r\n    })\r\n}*/\r\n\r\n\r\n// jQuery.noConflict();\r\njQuery(document).foundation();\r\njQuery(document).ready(function (jQuery) {\r\n    'use strict';\r\n    //back to top\r\n    let backtotop = '#back-to-top';\r\n    if (jQuery(backtotop).length) {\r\n        let scrollTrigger: number = 100, // px\r\n            backToTop = function () {\r\n                let scrollTop = jQuery(window).scrollTop();\r\n                if (scrollTop > scrollTrigger) {\r\n                    jQuery(backtotop).addClass('show');\r\n                } else {\r\n                    jQuery(backtotop).removeClass('show');\r\n                }\r\n            };\r\n        backToTop();\r\n        jQuery(window).on('scroll', function () {\r\n            backToTop();\r\n        });\r\n        jQuery('#back-to-top').on('click', function (e) {\r\n            e.preventDefault();\r\n            jQuery('html,body').animate({\r\n                scrollTop: 0\r\n            }, 700);\r\n        });\r\n    }\r\n    \r\n    //register form\r\n    jQuery('div.social-login').mouseenter(function () {\r\n        jQuery('i.arrow-left').addClass('active');\r\n    }).mouseleave(function () {\r\n        jQuery('i.arrow-left').removeClass('active');\r\n    });\r\n    jQuery('div.register-form').mouseenter(function () {\r\n        jQuery('i.arrow-right').addClass('active');\r\n    }).mouseleave(function () {\r\n        jQuery('i.arrow-right').removeClass('active');\r\n    });\r\n\r\n    //vertical thumb slider\r\n    let thumb = jQuery('.thumb-slider .thumbs').find('.ver-thumbnail');\r\n    jQuery(thumb).on('click', function () {\r\n        let id = jQuery(this).attr('id');\r\n        //alert(id);\r\n        jQuery('.image').eq(0).show();\r\n        jQuery('.image').hide();\r\n        jQuery('.image').hide();\r\n        jQuery('.' + id).fadeIn();\r\n    });\r\n    let $par = jQuery('.thumb-slider .thumbs .thumbnails').scrollTop(0);\r\n    jQuery('.thumb-slider .thumbs a').click(function (e) {\r\n        e.preventDefault();                      // Prevent defautl Anchors behavior\r\n        let n = jQuery(this).hasClass('down') ? '+=200' : '-=200'; // Direction\r\n        $par.animate({scrollTop: n});\r\n    });\r\n});\r\n(function () {\r\n    'use strict';\r\n    angular.module('underscore', [])\r\n        .factory('_', function () {\r\n                return window.___; // assumes underscore has already been loaded on the page\r\n        });\r\n\r\n    angular\r\n        .module('IndieWise', [\r\n            'templates',\r\n            'ngIntercom',\r\n            'ngMaterial',\r\n            'ngSanitize',\r\n            'ngCookies',\r\n            'mm.foundation',\r\n            'angucomplete-alt',\r\n            'ngMessages',\r\n            'ngResource',\r\n            'ngWebSocket',\r\n            'angular-cloudinary',\r\n            'underscore',\r\n            'angularMoment',\r\n            'videosharing-embed',\r\n            'angular-loading-bar',\r\n            'LocalForageModule',\r\n            'ui.router',\r\n            'angular-google-analytics',\r\n            'angular-iscroll',\r\n            'ui.scroll',\r\n            'ui.scroll.jqlite',\r\n            'ngFileUpload',\r\n            'satellizer',\r\n            'angular-filepicker',\r\n            'pascalprecht.translate',\r\n            '720kb.socialshare',\r\n            'ngAnimate-animate.css',\r\n            'vjs.video',\r\n\r\n            // Videogular\r\n            // 'com.2fdevs.videogular',\r\n            // 'com.2fdevs.videogular.plugins.controls',\r\n            // 'com.2fdevs.videogular.plugins.overlayplay',\r\n            // 'com.2fdevs.videogular.plugins.poster',\r\n            // 'com.2fdevs.videogular.plugins.buffering',\r\n            // 'info.vietnamcode.nampnq.videogular.plugins.youtube',\r\n            // 'videogular.plugins.texttrack',\r\n            // 'videogular.plugins.vimeo',\r\n            // 'th.co.softever.videogular.plugins.quality',\r\n\r\n\r\n            'IndieWise.controllers',\r\n            'IndieWise.services',\r\n            'IndieWise.directives',\r\n            'IndieWise.filters',\r\n            'IndieWise.utilities',\r\n\r\n            // Modularity\r\n            'IndieWise.home',\r\n            'IndieWise.browse',\r\n            'IndieWise.latest',\r\n            'IndieWise.winners',\r\n        ])\r\n        .constant('moment', window.momentTimeZone)\r\n        .constant('angularMomentConfig', { timezone: 'UTC' })\r\n        .constant('API', window.API || '/api/')\r\n        .constant('BASE', window.BASE || BASE + 'public/')\r\n        .constant('INTERCOM_APPID', 'ppp65byn')\r\n        .config(['$authProvider', function ($authProvider) {\r\n            $authProvider.loginUrl = '/api/login';\r\n            $authProvider.signupUrl = '/api/register';\r\n\r\n            $authProvider.facebook({\r\n                clientId: '150687055270744',\r\n                url: '/auth/facebook',\r\n                redirectUri: window.location.origin + '/auth/facebook'\r\n            });\r\n\r\n            $authProvider.google({\r\n                clientId: '322274582930-4m1dueb708gvdic28n12e5dhqq121a6b.apps.googleusercontent.com',\r\n                url: '/auth/google'\r\n            });\r\n\r\n            $authProvider.twitter({\r\n                clientId: 'nnSvvHd86gBpxPwJaLGvzM2Mm',\r\n                url: '/auth/twitter'\r\n            });\r\n        }])\r\n        .config(['$intercomProvider', 'INTERCOM_APPID', function($intercomProvider, INTERCOM_APPID) {\r\n            // Either include your app_id here or later on boot\r\n            $intercomProvider\r\n                .appID(INTERCOM_APPID);\r\n\r\n            // you can include the Intercom's script yourself or use the built in async loading feature\r\n            $intercomProvider\r\n                .asyncLoading(true)\r\n        }])\r\n        /*.config(['flowFactoryProvider', function (flowFactoryProvider) {\r\n            flowFactoryProvider.defaults = {\r\n                //target: 'utils/upload.php',\r\n                query: {\r\n                    upload_preset: 'r0kuyqef'\r\n                },\r\n                target: 'https://api.cloudinary.com/v1_1/indiewise/upload',\r\n                permanentErrors: [404, 500, 501],\r\n                maxChunkRetries: 1,\r\n                chunkRetryInterval: 5000,\r\n                simultaneousUploads: 1,\r\n                singleFile: true\r\n            };\r\n            /!*flowFactoryProvider.on('catchAll', function (event) {\r\n             console.log('catchAll', arguments);\r\n             })*!/\r\n        }])*/\r\n        .config(['filepickerProvider', function (filepickerProvider) {\r\n            filepickerProvider.setKey('APbjTx44SlSuCI6P58jwvz');\r\n        }])\r\n        .config(['cloudinaryProvider', function (cloudinaryProvider) {\r\n            cloudinaryProvider.config({\r\n                upload_endpoint: 'https://api.cloudinary.com/v1_1/', // default\r\n                cloud_name: 'indiewise', // required\r\n                upload_preset: 'r0kuyqef', // optional\r\n            });\r\n\r\n            /*cloudinaryProvider\r\n                .set('cloud_name', 'indiewise')\r\n                .set('upload_preset', 'r0kuyqef');*/\r\n        }])\r\n        .config(['$compileProvider', function ($compileProvider) {\r\n            // significant performance boost\r\n            $compileProvider.debugInfoEnabled(false);\r\n        }])\r\n        .config(['AnalyticsProvider', function (AnalyticsProvider) {\r\n            // Add configuration code as desired - see below\r\n            AnalyticsProvider\r\n                .setAccount('UA-27155404-17')\r\n                // Remove prefix on launch\r\n                // .trackPrefix('alpha')\r\n                ;\r\n        }])\r\n        .config(['$httpProvider', function ($httpProvider) {\r\n            $httpProvider.interceptors.push('authInterceptor');\r\n        }])\r\n        .factory('authInterceptor', ['$q', '$injector', '$location', 'API', function ($q, $injector, $location, API) {\r\n            function retryHttpRequest(config, deferred){\r\n                function successCallback(response){\r\n                    deferred.resolve(response);\r\n                }\r\n                function errorCallback(response){\r\n                    deferred.reject(response);\r\n                }\r\n                let $http: any = $injector.get('$http');\r\n                $http(config).then(successCallback, errorCallback);\r\n            }\r\n\r\n            return {\r\n                'request': function (config) {\r\n                    config.headers = config.headers || {};\r\n                    return config;\r\n                },\r\n                'response': function (response) {\r\n                    // only contains 'content-type' and 'cache-control'\r\n                    // console.log(response.headers());\r\n                    return response;\r\n                },\r\n                'responseError': function (response) {\r\n\r\n                    if (response.status === 401 || response.status === 403) {\r\n                        //$location.path('/sign-in');\r\n                    } else if (response.status == 500 && response.config.url.indexOf('http') === -1 && response.config.url.indexOf('/api') > -1) {\r\n                        let deferred: any = $q.defer();\r\n                        //retryHttpRequest(response.config, deferred);\r\n                        return deferred.promise;\r\n                    }\r\n\r\n                    return response;\r\n                }\r\n            };\r\n        }])\r\n\r\n        .config(['$mdThemingProvider', '$mdIconProvider', 'BASE', function ($mdThemingProvider, $mdIconProvider, BASE) {\r\n            $mdThemingProvider.theme('default')\r\n                .primaryPalette('grey')\r\n                .accentPalette('indigo');\r\n\r\n            // Emoticons\r\n            $mdIconProvider\r\n                .icon('emotion', BASE + 'assets/svg/emotion.svg', 120)\r\n                .icon('angry', BASE + 'assets/svg/emoticons/angry.svg', 120)\r\n                .icon('annoyed', BASE + 'assets/svg/emoticons/annoyed.svg', 120)\r\n                .icon('big-smile', BASE + 'assets/svg/emoticons/big-smile.svg', 120)\r\n                .icon('bored', BASE + 'assets/svg/emoticons/bored.svg', 120)\r\n                .icon('confused', BASE + 'assets/svg/emoticons/confused.svg', 120)\r\n                .icon('crying', BASE + 'assets/svg/emoticons/crying.svg', 120)\r\n                .icon('disappointed', BASE + 'assets/svg/emoticons/disappointed.svg', 120)\r\n                .icon('emotional', BASE + 'assets/svg/emoticons/emotional.svg', 120)\r\n                .icon('grinning', BASE + 'assets/svg/emoticons/grinning.svg', 120)\r\n                .icon('happy', BASE + 'assets/svg/emoticons/happy.svg', 120)\r\n                .icon('hehe', BASE + 'assets/svg/emoticons/hehe.svg', 120)\r\n                .icon('hopeful', BASE + 'assets/svg/emoticons/hopeful.svg', 120)\r\n                .icon('interested', BASE + 'assets/svg/emoticons/interested.svg', 120)\r\n                .icon('joking', BASE + 'assets/svg/emoticons/joking.svg', 120)\r\n                .icon('kiss', BASE + 'assets/svg/emoticons/kiss.svg', 120)\r\n                .icon('love', BASE + 'assets/svg/emoticons/love.svg', 120)\r\n                .icon('mad', BASE + 'assets/svg/emoticons/mad.svg', 120)\r\n                .icon('meh', BASE + 'assets/svg/emoticons/meh.svg', 120)\r\n                .icon('mute', BASE + 'assets/svg/emoticons/mute.svg', 120)\r\n                .icon('nerdy', BASE + 'assets/svg/emoticons/nerdy.svg', 120)\r\n                .icon('neutral', BASE + 'assets/svg/emoticons/neutral.svg', 120)\r\n                .icon('ninja', BASE + 'assets/svg/emoticons/ninja.svg', 120)\r\n                .icon('nostalgic', BASE + 'assets/svg/emoticons/nostalgic.svg', 120)\r\n                .icon('oh-really', BASE + 'assets/svg/emoticons/oh-really.svg', 120)\r\n                .icon('sad', BASE + 'assets/svg/emoticons/sad.svg', 120)\r\n                .icon('sad-tear', BASE + 'assets/svg/emoticons/sad-tear.svg', 120)\r\n                .icon('sarcastic', BASE + 'assets/svg/emoticons/sarcastic.svg', 120)\r\n                .icon('sexy', BASE + 'assets/svg/emoticons/sexy.svg', 120)\r\n                .icon('shocked', BASE + 'assets/svg/emoticons/shocked.svg', 120)\r\n                .icon('silent', BASE + 'assets/svg/emoticons/silent.svg', 120)\r\n                .icon('silly', BASE + 'assets/svg/emoticons/silly.svg', 120)\r\n                .icon('smile', BASE + 'assets/svg/emoticons/smile.svg', 120)\r\n                .icon('sympathetic', BASE + 'assets/svg/emoticons/sympathetic.svg', 120)\r\n                .icon('wink', BASE + 'assets/svg/emoticons/wink.svg', 120)\r\n                .icon('woah', BASE + 'assets/svg/emoticons/woah.svg', 120)\r\n\r\n                // Other\r\n                .icon('matureSmall', BASE + 'assets/svg/OFLC_small_M.svg', 120)\r\n                .icon('matureSmall', BASE + 'assets/svg/OFLC_small_M.svg', 120)\r\n                .icon('trophy', BASE + 'assets/svg/trophy.svg', 120)\r\n                .icon('matureLarge', BASE + 'assets/svg/OFLC_large_M.svg', 120);\r\n        }])\r\n        .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', 'BASE', function ($stateProvider, $urlRouterProvider, $locationProvider, BASE) {\r\n\r\n            $urlRouterProvider.when('', '/home');\r\n            $urlRouterProvider.when('/', '/home');\r\n            $stateProvider\r\n                .state('home', {\r\n                    url: '/home',\r\n                    authenticate: false,\r\n                    templateUrl: 'home/view/index.html',\r\n                    controller: 'HomeCtrl as Home'\r\n                })\r\n                .state('browse', {\r\n                    url: '/browse?q&sort&types&genres',\r\n                    authenticate: false,\r\n                    templateUrl: 'browse/view/index.html',\r\n                    controller: 'BrowseCtrl as Browse'\r\n                })\r\n                .state('latest', {\r\n                    url: '/latest',\r\n                    authenticate: false,\r\n                    templateUrl: 'latest/view/index.html',\r\n                    controller: 'LatestCtrl as LC'\r\n                })\r\n                .state('winners', {\r\n                    url: '/winners',\r\n                    authenticate: false,\r\n                    templateUrl: 'winners/index.html',\r\n                    controller: 'WinnersCtrl as WC'\r\n                })\r\n                .state('video_critique', {\r\n                    url: '/{video_url_id}/critique/{url_id}',\r\n                    authenticate: false,\r\n                    templateUrl: 'common/critique.html',\r\n                    controller: 'VideoCritiqueCtrl as VCC',\r\n                    resolve: {\r\n                        Critique: ['$stateParams', 'DataService', function ($stateParams, DataService) {\r\n                            return DataService.item('critiques', $stateParams.url_id, 'project.owner').then(function (result) {\r\n                                return result;\r\n                            });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('video_critique-edit', {\r\n                    url: '/{video_url_id}/critique/{url_id}/edit',\r\n                    authenticate: true,\r\n                    templateUrl: 'common/critique-edit.html',\r\n                    controller: 'VideoCritiqueEditCtrl',\r\n                    resolve: {\r\n                        Critique: ['AuthService', '$stateParams', 'DataService', function (AuthService, $stateParams, DataService) {\r\n                            return DataService.item('critiques', $stateParams.url_id, 'project.owner').then(function (result) {\r\n                                return (AuthService.isAuthenticated() && result.data.data.user_id === AuthService.currentUser.id) ? result : 'Not Owner';\r\n                            });\r\n                        }]\r\n                    }\r\n                })\r\n                // Authenticated Pages\r\n                .state('user', {\r\n                    url: '/user/{url_id}',\r\n                    authenticate: true,\r\n                    abstract: true,\r\n                    templateUrl: 'auth/user.html',\r\n                    controller: 'UserCtrl as UserC',\r\n                    resolve: {\r\n                        User: ['$stateParams', 'DataService', function ($stateParams, DataService) {\r\n                            return DataService.item('users', $stateParams.url_id).then(function (result) {\r\n                                return result.data.data;\r\n                            });\r\n                        }],\r\n                        UserStats: ['User', 'DataService', function (User, DataService) {\r\n                            return DataService.item('users/countUserStats', User.id).then(function (response) {\r\n                                return response.data;\r\n                            });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('user.about', {\r\n                    url: '/about',\r\n                    templateUrl: 'auth/user-about.html',\r\n                    controller: 'UserAboutController as UserAboutCtrl'\r\n                })\r\n                .state('user.videos', {\r\n                    url: '/videos',\r\n                    templateUrl: 'auth/user-videos.html',\r\n                    controller: 'UserVideosController as UserVideosCtrl',\r\n                    resolve: {\r\n                        Videos: ['User', 'DataService', '$q', function (User, DataService, $q) {\r\n                            return DataService.collection('projects', {\r\n                                owner: User.id,\r\n                                sort: 'created_at',\r\n                                per_page: 50\r\n                            })\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('user.critiques', {\r\n                    url: '/critiques',\r\n                    templateUrl: 'auth/user-critiques.html',\r\n                    controller: 'UserCritiquesController as UserCritiquesCtrl',\r\n                    resolve: {\r\n                        Critiques: ['User', 'DataService', function (User, DataService) {\r\n                            return DataService.collection('critiques', {user: User.id, include: 'project'})\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }],\r\n                        Critiqued: ['User', 'DataService', function (User, DataService) {\r\n                            return DataService.collection('critiques', {notUser: User.id, include: 'project'})\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('user.reactions', {\r\n                    url: '/reactions',\r\n                    templateUrl: 'auth/user-reactions.html',\r\n                    controller: 'UserReactionsController as UserReactionsCtrl',\r\n                    resolve: {\r\n                        Reactions: ['User', 'DataService', function (User, DataService) {\r\n                            return DataService.collection('reactions', {user: User.id, include: 'user,project'})\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }],\r\n                        Reacted: ['User', 'DataService', function (User, DataService) {\r\n                            return DataService.collection('reactions', {notUser: User.id, include: 'user,project'})\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('user.awards', {\r\n                    url: '/awards',\r\n                    templateUrl: 'auth/user-awards.html',\r\n                    controller: 'UserAwardsController as UserAwardsCtrl',\r\n                    resolve: {\r\n                        Awards: ['User', 'DataService', function (User, DataService) {\r\n                            return DataService.collection('wins', {user: User.id}).then(function (result) {\r\n                                return result;\r\n                            });\r\n                        }],\r\n                        Nominations: ['User', 'DataService', function (User, DataService) {\r\n                            return DataService.collection('nominations', {\r\n                                user: User.id,\r\n                                include: 'user,project,award'\r\n                            })\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }],\r\n                        Nominated: ['User', 'DataService', function (User, DataService) {\r\n                            return DataService.collection('nominations', {\r\n                                notUser: User.id,\r\n                                include: 'user,project,award'\r\n                            })\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile', {\r\n                    url: '/profile',\r\n                    authenticate: true,\r\n                    abstract: true,\r\n                    templateUrl: 'auth/profile.html',\r\n                    controller: 'ProfileCtrl as Profile',\r\n                    resolve: {\r\n                        User: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.item('users', AuthService.currentUser.id, { include: 'genres' }).then(function (response) {\r\n                                return response.data.data;\r\n                            });\r\n                            /*return AuthService.getCurrentUser().then(function (response) {\r\n                                return response;\r\n                            });*/\r\n                        }],\r\n                        UserStats: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('users/countUserStats').then(function (response) {\r\n                                return response.data;\r\n                            });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile.about', {\r\n                    url: '/about',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/profile-about.html',\r\n                    controller: 'ProfileAboutController as ProfileAboutCtrl'\r\n                })\r\n                .state('profile.upload', {\r\n                    url: '/upload',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/profile-upload.html',\r\n                    controller: 'ProfileUploadController as UC',\r\n                    resolve: {\r\n                        Access: ['$rootScope', 'DataService', 'AuthService', '$q', function ($rootScope, DataService, AuthService, $q) {\r\n                            let deferred: any = $q.defer();\r\n                            if ($rootScope.isNotVerified()) {\r\n                                $rootScope.toastAction('Please verify your account so you can upload videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\r\n                                deferred.reject(false);\r\n                            } else {\r\n                                DataService.collection('projects/limit').then(function (response) {\r\n                                    if (response.data.status) {\r\n                                        deferred.resolve(true);\r\n                                    } else {\r\n                                        $rootScope.toastMessage('Your upload limit of 3 has been reached');\r\n                                        deferred.reject(false);\r\n                                    }\r\n                                });\r\n                            }\r\n                            return deferred.promise;\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile.videos', {\r\n                    url: '/videos',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/profile-videos.html',\r\n                    controller: 'ProfileVideosController as ProfileVideosCtrl',\r\n                    resolve: {\r\n                        Videos: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('projects', {\r\n                                owner: AuthService.currentUser.id,\r\n                                sort: 'created_at',\r\n                                per_page: 50\r\n                            })\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile.videos-edit', {\r\n                    url: '/videos/{url_id}/edit',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/profile-videos-edit.html',\r\n                    controller: 'ProfileVideoEditCtrl as VEC',\r\n                    resolve: {\r\n                        Project: ['AuthService', '$stateParams', 'DataService', function (AuthService, $stateParams, DataService) {\r\n                            return DataService.item('projects', $stateParams.url_id).then(function (result) {\r\n                                return result;\r\n                            });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile.critiques', {\r\n                    url: '/critiques',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/profile-critiques.html',\r\n                    controller: 'ProfileCritiquesController as ProfileCritiquesCtrl',\r\n                    resolve: {\r\n                        Critiques: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('critiques', {user: AuthService.currentUser.id})\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }],\r\n                        Critiqued: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('critiques', {notUser: AuthService.currentUser.id})\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile.reactions', {\r\n                    url: '/reactions',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/profile-reactions.html',\r\n                    controller: 'ProfileReactionsController as ProfileReactionsCtrl',\r\n                    resolve: {\r\n                        Reactions: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('reactions', {\r\n                                user: AuthService.currentUser.id,\r\n                                include: 'user,project'\r\n                            })\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }],\r\n                        Reacted: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('reactions', {\r\n                                notUser: AuthService.currentUser.id,\r\n                                include: 'user,project'\r\n                            })\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile.awards', {\r\n                    url: '/awards',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/profile-awards.html',\r\n                    controller: 'ProfileAwardsController as ProfileAwardsCtrl',\r\n                    resolve: {\r\n                        Awards: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('wins', {user: AuthService.currentUser.id}).then(function (result) {\r\n                                return result;\r\n                            });\r\n                        }],\r\n                        Nominations: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('nominations', {\r\n                                user: AuthService.currentUser.id,\r\n                                include: 'user,project,award'\r\n                            })\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }],\r\n                        Nominated: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('nominations', {\r\n                                notUser: AuthService.currentUser.id,\r\n                                include: 'user,project,award'\r\n                            })\r\n                                .then(function (result) {\r\n                                    return result;\r\n                                });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile.playlists', {\r\n                    url: '/playlists',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/profile-playlists.html',\r\n                    controller: 'ProfilePlaylistsController as ProfilePlaylistsCtrl',\r\n                    resolve: {\r\n                        Playlists: ['AuthService', 'DataService', function (AuthService, DataService) {\r\n                            return DataService.collection('playlists').then(function (result) {\r\n                                return result;\r\n                            });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('profile.settings', {\r\n                    url: '/settings',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/profile-settings.html',\r\n                    controller: 'ProfileSettingsController as PSC',\r\n                    resolve: {\r\n                        Genres: ['AuthService', 'DataService', '$q', function (AuthService, DataService, $q) {\r\n                            return DataService.collection('genres', [],\r\n                                [{fieldName: 'user', operator: 'in', value: AuthService.currentUser.id}],\r\n                                20, false, false, 1).then(function (result) {\r\n                                return result;\r\n                            });\r\n                        }],\r\n                        UserTypes: ['AuthService', 'DataService', '$q', function (AuthService, DataService, $q) {\r\n                            return DataService.collection('types', [],\r\n                                [{fieldName: 'user', operator: 'in', value: AuthService.currentUser.id}],\r\n                                20, false, false, 1).then(function (result) {\r\n                                return result;\r\n                            });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('messages', {\r\n                    url: '/messages',\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/messages.html',\r\n                    controller: 'MessagesCtrl as Msgs',\r\n                    resolve: {\r\n                        Conversations: ['AuthService', 'DataService', '$q', function (AuthService, DataService, $q) {\r\n                            return DataService.collection('messages').then(function (result) {\r\n                                return result;\r\n                            });\r\n                        }]\r\n                    }\r\n                })\r\n                .state('messages.message', {\r\n                    authenticate: true,\r\n                    templateUrl: 'auth/messages.html',\r\n                    controller: 'MessagesCtrl as Msgs'\r\n                })\r\n                /*.state('notifications', {\r\n                 url: '/notifications',\r\n                 authenticate: true,\r\n                 templateUrl: 'auth/notifications.html',\r\n                 controller: 'NotificationsCtrl as NC'\r\n                 })*/\r\n\r\n                // Auth Pages\r\n                .state('register', {\r\n                    url: '/register',\r\n                    authenticate: false,\r\n                    templateUrl: 'auth/register.html',\r\n                    controller: 'RegisterCtrl as RC'\r\n                })\r\n                .state('forum_register', {\r\n                    url: '/community/register?redirect',\r\n                    authenticate: false,\r\n                    templateUrl: 'auth/register.html',\r\n                    controller: 'RegisterCtrl as RC'\r\n                })\r\n                .state('sign_in', {\r\n                    url: '/sign-in?redirect',\r\n                    authenticate: false,\r\n                    templateUrl: 'auth/sign-in.html',\r\n                    controller: 'SignInCtrl as SIC'\r\n                })\r\n                .state('forum_sign_in', {\r\n                    url: '/community/sign-in?redirect',\r\n                    authenticate: false,\r\n                    templateUrl: 'auth/sign-in.html',\r\n                    controller: 'SignInCtrl as SIC'\r\n                })\r\n                .state('reset_password', {\r\n                    url: '/reset-password?email&token',\r\n                    authenticate: false,\r\n                    templateUrl: 'auth/reset-password.html',\r\n                    controller: 'ForgotPasswordCtrl as FPC'\r\n                })\r\n\r\n                // Static Pages\r\n                .state('about', {\r\n                    url: '/about',\r\n                    authenticate: false,\r\n                    templateUrl: 'static/about.html'\r\n                })\r\n                .state('faq', {\r\n                    url: '/faq',\r\n                    authenticate: false,\r\n                    templateUrl: 'static/faq.html'\r\n                })\r\n                .state('contact', {\r\n                    url: '/contact?email',\r\n                    authenticate: false,\r\n                    templateUrl: 'static/contact.html',\r\n                    controller: 'ContactPageCtrl as CC'\r\n                })\r\n                .state('tos', {\r\n                    url: '/terms-of-service',\r\n                    authenticate: false,\r\n                    templateUrl: 'static/tos.html'\r\n                })\r\n                .state('advertise', {\r\n                    url: '/advertise',\r\n                    authenticate: false,\r\n                    templateUrl: 'static/advertise.html'\r\n                })\r\n                .state('privacy', {\r\n                    url: '/privacy-policy',\r\n                    authenticate: false,\r\n                    templateUrl: 'static/privacy.html'\r\n                })\r\n                .state('404', {\r\n                    url: '/404',\r\n                    authenticate: false,\r\n                    templateUrl: 'static/404.html'\r\n                })\r\n\r\n                // Video Pages\r\n                .state('video', {\r\n                    url: '/{url_id:[0-9a-zA-Z]{10,13}}',\r\n                    authenticate: false,\r\n                    templateUrl: 'common/video.html',\r\n                    controller: 'VideoCtrl as VC',\r\n                    resolve: {\r\n                        Project: ['$stateParams', 'DataService', '$q', function ($stateParams, DataService, $q) {\r\n                            let deferred: any = $q.defer();\r\n                            DataService.item('projects', $stateParams.url_id, '')\r\n                                .then(function (result) {\r\n                                    deferred.resolve(result.data.data);\r\n                                })\r\n                                .catch(function (response) {\r\n                                    deferred.reject(response);\r\n                                });\r\n\r\n                            return deferred.promise;\r\n                        }]\r\n                    }\r\n                })\r\n            ;\r\n\r\n            // $urlRouterProvider.otherwise('/404');\r\n            $locationProvider.html5Mode({\r\n                enabled: true,\r\n                requireBase: false,\r\n                rewriteLinks: false\r\n            });\r\n\r\n        }])\r\n        .config(['$transitionsProvider', function($transitionsProvider) {\r\n            $transitionsProvider.onError({}, function(transition) {\r\n                // debugger;\r\n                transition.promise.catch(function(error) {\r\n                    // debugger;\r\n                    console.error(error);\r\n                });\r\n            });\r\n        }])\r\n        .constant('StreamConfig', {\r\n            streamApiKey: '97wfnrargt9f',\r\n            streamApiSecret: '4t8dpp9bsap2svjhvu2n4x3h3bvwyyb3kgvg7san3bab2esu6vmnquffq2u95z82',\r\n            streamApp: '6408'\r\n        })\r\n        .run(['$rootScope', '$state', '$stateParams', 'AuthService', 'UtilsService', 'DataService', '$http', '$timeout', '$transitions', 'StreamConfig', 'anchorSmoothScroll', 'amMoment', '$intercom', 'FacebookAngularPatch', 'socket',\r\n            function ($rootScope, $state, $stateParams, AuthService, UtilsService, DataService, $http, $timeout, $transitions, StreamConfig, anchorSmoothScroll, amMoment, $intercom, FacebookAngularPatch, socket) {\r\n                attachFastClick(document.body);\r\n                $rootScope.AppData = {\r\n                    User: AuthService.currentUser,\r\n                    Notifications: {\r\n                        loaded: 'indeterminate'\r\n                    },\r\n                    NotificationsFeed: {\r\n                        loaded: 'indeterminate'\r\n                    },\r\n                    MessageNotifications: {\r\n                        loaded: 'indeterminate'\r\n                    },\r\n                    searchText: ''\r\n                };\r\n                $rootScope.$state = window.thisState = $state;\r\n                $rootScope.metadata = {\r\n                    title: '',\r\n                    description: '',\r\n                    image: '',\r\n                    url: ''\r\n                };\r\n                $rootScope.$stateParams = $stateParams;\r\n                $rootScope.isViewLoading = false;\r\n                $rootScope.today = moment().toDate();\r\n\r\n                $rootScope.isAuthenticated = function () {\r\n                    return AuthService.isAuthenticated();\r\n                };\r\n\r\n                $rootScope.isVerified = function () {\r\n                    return AuthService.isVerified();\r\n                };\r\n\r\n                $rootScope.isNotVerified = function () {\r\n                    let test: boolean = $rootScope.isVerified();\r\n                    return !test;\r\n                    // return AuthService.isNotVerified();\r\n                };\r\n\r\n                $rootScope.justVerified = function () {\r\n                    let test: boolean = window.location.search.indexOf('verification_successful') !== -1;\r\n                    if(test) {\r\n                        $rootScope.toastMessage('Account Verification Successful!');\r\n                    }\r\n                    return test;\r\n                };\r\n\r\n                $rootScope.listenNotifications = function (username) {\r\n                    $rootScope.refreshNotifications(username);\r\n                };\r\n\r\n                $rootScope.refreshNotifications = function (id) {\r\n                    $rootScope.AppData.Notifications.loaded = 'indeterminate';\r\n                    DataService.collection('getUserNotifications', {\r\n                        username: id\r\n                    }).then(function (res) {\r\n                        console.log(res.data);\r\n                        $rootScope.AppData.Notifications = {\r\n                            loaded: '',\r\n                            list: res.data,\r\n                            unseen: _.where(res.data, { seen: false }).length,\r\n                            unread: 0\r\n                        };\r\n                        console.log($rootScope.AppData.Notifications);\r\n                    });\r\n                };\r\n\r\n                $rootScope.StreamClient = stream.connect(StreamConfig.streamApiKey, null, StreamConfig.streamApp, {location: 'us-east'});\r\n                $rootScope.getNewToken = function (type, id) {\r\n                    return $http.get('/api/notifications/token?type=' + type).then(function (res) {\r\n                        return res.data.token;\r\n                    });\r\n                };\r\n\r\n                $rootScope.getMessagesFeed = function (feed) {\r\n                    feed.get({limit: 10}, function (error, response, body) {\r\n                        console.log('Messages Notifications: ', body);\r\n                        try {\r\n                            //let data = UtilsService.enrichRawNotifications(body.results);\r\n                            //console.log(data);\r\n                            $rootScope.AppData.MessageNotifications = {\r\n                                loaded: '',\r\n                                list: body.results,\r\n                                unseen: body.unseen,\r\n                                unread: body.unread\r\n                            };\r\n                            console.log($rootScope.AppData.MessageNotifications);\r\n                        } catch (e) {\r\n                            console.log(e);\r\n                        }\r\n                    });\r\n                };\r\n\r\n                $rootScope.subscribeUserFeeds = function () {\r\n                    $rootScope.getNewToken('notification', $rootScope.AppData.User.id).then(function (token) {\r\n                        let feed: any = $rootScope.StreamClient.feed('notification', $rootScope.AppData.User.id, token);\r\n                        feed.subscribe(function (obj) {\r\n                            console.log('Notification: ', obj);\r\n                            $rootScope.getNotificationsFeed(feed);\r\n                        }).then(function () {\r\n                            $rootScope.getNotificationsFeed(feed);\r\n                        });\r\n                    });\r\n                    $rootScope.getNewToken('message', $rootScope.AppData.User.id).then(function (token) {\r\n                        let feed: any = $rootScope.StreamClient.feed('message', $rootScope.AppData.User.id, token);\r\n                        feed.subscribe(function (obj) {\r\n                            console.log('Messages: ', obj);\r\n                            $rootScope.getMessagesFeed(feed);\r\n                        }).then(function () {\r\n                            $rootScope.getMessagesFeed(feed);\r\n                        });\r\n                    });\r\n                };\r\n\r\n                $rootScope.getNotificationsFeed = function (feed) {\r\n                    $http.get('/api/notifications/feed').then(function (res) {\r\n                        console.log('Notification: ', res.data.activities);\r\n                        $rootScope.AppData.Notifications = {\r\n                            loaded: '',\r\n                            list: res.data.activities,\r\n                            unseen: res.data.unseen,\r\n                            unread: res.data.unread\r\n                        };\r\n                    });\r\n                    /*feed.get({limit: 10}, function (error, response, body) {\r\n                        console.log('Notifications: ', body);\r\n                        try {\r\n                            let data = UtilsService.enrichRawNotifications(body.results);\r\n                            console.log(data);\r\n                            $rootScope.AppData.RawNotifications = {\r\n                                loaded: '',\r\n                                list: data.data,\r\n                                unseen: body.unseen,\r\n                                unread: body.unread\r\n                            };\r\n                        } catch (e) {\r\n                            console.log(e);\r\n                        }\r\n                    });*/\r\n                };\r\n\r\n                $rootScope.getNewMessages = function () {\r\n                    /*DataService.collection('messages/new').then(function (response) {\r\n                        $rootScope.AppData.MessageNotifications.loaded = true;\r\n                        $rootScope.AppData.MessageNotifications.unread = response.data.length;\r\n                    });*/\r\n                };\r\n\r\n                // Register listeners to $intercom using '.$on()' rather than '.on()' to trigger a safe $apply on $rootScope\r\n                $intercom.$on('show', function() {\r\n                    $rootScope.intercomShowing = true; // currently Intercom onShow callback isn't working\r\n                });\r\n                $intercom.$on('hide', function() {\r\n                    $rootScope.intercomShowing = false;\r\n                });\r\n\r\n                let endWatch: any = $rootScope.$watch('AppData.User', function (newValue, oldValue) {\r\n                    if (newValue && angular.isString(newValue.id)) {\r\n                        console.log('User Logged In');\r\n\r\n                        // Intercom\r\n                        newValue.name = newValue.fullName;\r\n                        $intercom.boot(newValue);\r\n                        // $intercom.show();\r\n\r\n                        // Push Notifications\r\n                        let OneSignal: any = window.OneSignal || [];\r\n                        OneSignal.push([\"init\", {\r\n                            appId: \"9972c4b2-7bd1-47c0-a2f8-213b8c767cd8\",\r\n                            safari_web_id: 'web.onesignal.auto.3f58661c-f8ad-4946-a9b6-84125eec4421',\r\n                            autoRegister: true,\r\n                            notifyButton: {\r\n                                enable: false /* Set to false to hide */\r\n                            }\r\n                        }]);\r\n\r\n                        if (!newValue.push_id) {\r\n                            OneSignal.getUserId().then(function(userId) {\r\n                                // console.log(\"OneSignal User ID:\", userId);\r\n                                AuthService.updateUser({id: newValue.id, push_id: userId});\r\n                                // DataService.update('users', newValue.id, { push_id: userId});\r\n                                // (Output) OneSignal User ID: 270a35cd-4dda-4b3f-b04e-41d7463a2316\r\n                            });\r\n                        }\r\n\r\n                        // initialize stream\r\n                        $rootScope.subscribeUserFeeds();\r\n                        //$rootScope.listenNotifications(newValue.username);\r\n\r\n                        $rootScope.getNewMessages();\r\n                        endWatch();\r\n                    }\r\n                });\r\n\r\n                // loading animation\r\n                $rootScope.setLoading = function () {\r\n                    $rootScope.isViewLoading = true;\r\n                };\r\n                $rootScope.unsetLoading = function () {\r\n                    $rootScope.isViewLoading = false;\r\n                };\r\n\r\n                // State transition hooks\r\n                $transitions.onBefore({}, function ($transition$) {\r\n                    $rootScope.setLoading();\r\n                });\r\n\r\n                $transitions.onStart({to: 'register', from: '*'}, function ($transition$) {\r\n                    return AuthService.isAuthenticated() ? $state.target('home') : true;\r\n                });\r\n                $transitions.onStart({to: 'sign_in', from: '*'}, function ($transition$) {\r\n                    return AuthService.isAuthenticated() ? $state.target('home') : true;\r\n                });\r\n                $transitions.onStart({to: 'reset_password', from: '*'}, function ($transition$) {\r\n                    return AuthService.isAuthenticated() ? $state.target('home') : true;\r\n                });\r\n                $transitions.onStart({\r\n                    to: function (state) {\r\n                        return !!state.authenticate;\r\n                    }\r\n                }, function ($transition$) {\r\n                    return AuthService.currentUser ? true : AuthService.getCurrentUser().then(function () {\r\n                        return true;\r\n                    }, function () {\r\n                        return $state.target('sign_in');\r\n                    });\r\n\r\n                });\r\n\r\n                $transitions.onSuccess({}, function () {\r\n                    $rootScope.unsetLoading();\r\n                    $timeout(function () {\r\n                        jQuery(document).foundation();\r\n                        // angular.element('body').scrollTop(0);\r\n                        anchorSmoothScroll.scrollTo('body');\r\n                    }, 100);\r\n                    // Analytics.trackPage($location.path());\r\n                });\r\n\r\n                $transitions.onError({}, function ($transition$) {\r\n                    // debugger;\r\n                    console.log($state);\r\n                });\r\n\r\n                $state.defaultErrorHandler(function(err) {\r\n                    // debugger;\r\n                    // handle err\r\n                });\r\n\r\n                //search bar\r\n                jQuery('.search.end').on('click', function () {\r\n                    if (jQuery(this).children().hasClass('fa-search')) {\r\n                        jQuery(this).children().removeClass('fa-search');\r\n                        jQuery(this).children().addClass('fa-times');\r\n                        $rootScope.$broadcast('overVideoPlayer', false);\r\n\r\n                    } else {\r\n                        jQuery(this).children().removeClass('fa-times');\r\n                        jQuery(this).children().addClass('fa-search');\r\n                        $rootScope.$broadcast('overVideoPlayer', true);\r\n                    }\r\n                    jQuery(this).toggleClass('search-active');\r\n                    jQuery('#search-bar').slideToggle();\r\n\r\n                });\r\n\r\n            }\r\n        ])\r\n        .config(['$localForageProvider', function ($localForageProvider) {\r\n            $localForageProvider.config({\r\n                //driver: 'localStorageWrapper', // if you want to force a driver\r\n                name: 'iw', // name of the database and prefix for your data, it is 'lf' by default\r\n                version: 1.0, // version of the database, you shouldn't have to use this\r\n                storeName: 'keyvaluepairs', // name of the table\r\n                description: 'some description'\r\n            });\r\n        }])\r\n        .config(['$sceDelegateProvider', function ($sceDelegateProvider) {\r\n            $sceDelegateProvider.resourceUrlWhitelist([\r\n                'self',\r\n                'https://getindiewise.com/**',\r\n                'https://www.getindiewise.com/**',\r\n                new RegExp('^(http[s]?):\\/\\/(w{3}.)?youtube\\.com/.+$')\r\n            ]);\r\n        }]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    function mysql_real_escape_string(str) {\r\n        return str.replace(/[\\0\\x08\\x09\\x1a\\n\\r\"'\\\\\\%]/g, function (char) {\r\n            switch (char) {\r\n                case \"\\0\":\r\n                    return \"\\\\0\";\r\n                case \"\\x08\":\r\n                    return \"\\\\b\";\r\n                case \"\\x09\":\r\n                    return \"\\\\t\";\r\n                case \"\\x1a\":\r\n                    return \"\\\\z\";\r\n                case \"\\n\":\r\n                    return \"\\\\n\";\r\n                case \"\\r\":\r\n                    return \"\\\\r\";\r\n                case \"\\\"\":\r\n                case \"'\":\r\n                case \"\\\\\":\r\n                case \"%\":\r\n                    return \"\\\\\" + char; // prepends a backslash to backslash, percent,\r\n                                        // and double/single quotes\r\n            }\r\n        });\r\n    }\r\n\r\n    angular.module('IndieWise.controllers', [])\r\n    // Auth Controllers\r\n        .controller('SignInCtrl', SignInCtrl)\r\n        .controller('ForgotPasswordCtrl', ForgotPasswordCtrl)\r\n        .controller('RegisterCtrl', RegisterCtrl)\r\n\r\n        // Profile Controllers\r\n        .controller('ProfileCtrl', ProfileCtrl)\r\n        .controller('ProfileAboutController', UserAboutController)\r\n        .controller('ProfilePlaylistsController', ProfilePlaylistsController)\r\n        .controller('ProfileVideosController', UserVideosController)\r\n        .controller('ProfileVideoEditCtrl', ProfileVideoEditCtrl)\r\n        .controller('ProfileCritiquesController', UserCritiquesController)\r\n        .controller('ProfileReactionsController', UserReactionsController)\r\n        .controller('ProfileAwardsController', UserAwardsController)\r\n        .controller('ProfileSettingsController', ProfileSettingsController)\r\n        .controller('ProfileUploadController', ProfileUploadController)\r\n\r\n        // User Controllers\r\n        .controller('UserCtrl', UserCtrl)\r\n        .controller('UserAboutController', UserAboutController)\r\n        .controller('UserVideosController', UserVideosController)\r\n        .controller('UserCritiquesController', UserCritiquesController)\r\n        .controller('UserReactionsController', UserReactionsController)\r\n        .controller('UserAwardsController', UserAwardsController)\r\n        // .controller('EditProfileCtrl', EditProfileCtrl)\r\n        .controller('MessagesCtrl', MessagesCtrl)\r\n        .controller('NotificationsCtrl', NotificationsCtrl)\r\n\r\n        // Other App Controllers\r\n        .controller('BodyCtrl', BodyCtrl)\r\n        // .controller('HomeCtrl', HomeCtrl)\r\n        // .controller('BrowseCtrl', BrowseCtrl)\r\n        // .controller('LatestCtrl', LatestCtrl)\r\n        // .controller('AdvancedResultsCtrl', AdvancedResultsCtrl)\r\n        // .controller('ResultsCtrl', ResultsCtrl)\r\n        .controller('VideoCtrl', VideoCtrl)\r\n        .controller('VideoCritiqueCtrl', VideoCritiqueCtrl)\r\n        .controller('VideoCritiqueEditCtrl', VideoCritiqueEditCtrl)\r\n        .controller('ContactPageCtrl', ContactPageCtrl)\r\n\r\n    ;\r\n\r\n    RegisterCtrl.$inject = ['$rootScope', '$timeout', '$q', '$state', 'AuthService', 'DataService', 'anchorSmoothScroll', '_'];\r\n    function RegisterCtrl($rootScope, $timeout, $q, $state, AuthService, DataService, anchorSmoothScroll, _) {\r\n        $rootScope.metadata.title = 'Register';\r\n        var self = this;\r\n        self.creating = false;\r\n        self.accountCreated = false;\r\n        self.genresArr = [];\r\n        self.typesArr = [];\r\n        self.user = {\r\n            email: '',\r\n            password: '',\r\n            passwordCheck: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            gender: '',\r\n            // genres: [],\r\n            // types: []\r\n            //selected_genres: ''\r\n        };\r\n\r\n        self.dobDay = '';\r\n        self.dobMonth = '';\r\n        self.dobYear = '';\r\n        self.authErrors = null;\r\n        self.errors = {\r\n            email: false,\r\n            gender: false,\r\n            genres: false,\r\n            types: false\r\n        };\r\n\r\n        self.thisYear = moment().year();\r\n        self.yearsList = [];\r\n        for (var i = self.thisYear; i > (self.thisYear - 100); i--) {\r\n            self.yearsList.push(i);\r\n        }\r\n\r\n        /*$rootScope.generateGenres().then(function (res) {\r\n         $rootScope.genresList = self.genresList = res;\r\n         });\r\n         $rootScope.generateTypes().then(function (res) {\r\n         $rootScope.typesList = self.typesList = res;\r\n         });*/\r\n        $rootScope.generateCountries().then(function (res) {\r\n            $rootScope.countryList = self.countryList = res;\r\n        });\r\n\r\n        self.checkEmailUse = function () {\r\n            if (angular.isString(self.user.email) && self.user.email.length) {\r\n                DataService.collection('emailCheck', {email: mysql_real_escape_string(self.user.email)}).then(function (res) {\r\n                    self.errors.email = res.data && res.data.verify === true ? 1 : 0;\r\n                });\r\n            } else self.errors.email = false;\r\n        };\r\n\r\n        self.doRegister = function () {\r\n            if (!self.creating) {\r\n                self.creating = true;\r\n                self.errors.gender = !self.user.gender.length;\r\n\r\n                if (self.errors.gender) {\r\n                    anchorSmoothScroll.scrollTo('errors');\r\n                    return false;\r\n                }\r\n\r\n                self.user.dob = moment().set({\r\n                    'year': self.dobYear,\r\n                    'month': parseInt(self.dobMonth) - 1,\r\n                    'date': self.dobDay\r\n                }).startOf('day').format('YYYY-MM-DD HH:mm:ss');\r\n                AuthService.createUser(self.user).then(function (res) {\r\n                    if (!res.status) {\r\n                        self.authErrors = res.errors;\r\n                        $rootScope.toastMessage('There is an error, please check your form');\r\n                        // console.log('Failed', res);\r\n                    } else {\r\n                        // console.log('Success', res);\r\n                        //window.location.reload();\r\n                        $rootScope.toastMessage('Account created!');\r\n                    }\r\n                    // window.location.reload();\r\n                    self.creating = false;\r\n                });\r\n            } else {\r\n                $rootScope.toastMessage('Please wait...');\r\n            }\r\n        };\r\n\r\n        self.authenticate = function (provider) {\r\n            self.error = null;\r\n            AuthService.socialLogin(provider, true).then(function (a) {\r\n                if (a) {\r\n                    $state.go('profile.about', {reload: true});\r\n                    // console.log(a);\r\n                }\r\n            });\r\n        };\r\n\r\n        $timeout(function () {\r\n            jQuery(document).foundation();\r\n            $timeout(function () {\r\n                jQuery(document).foundation();\r\n            }, 500);\r\n        }, 500);\r\n    }\r\n\r\n    SignInCtrl.$inject = ['$rootScope', '$timeout', '$q', '$state', 'AuthService', '$window', '$modal', 'cfpLoadingBar'];\r\n    function SignInCtrl($rootScope, $timeout, $q, $state, AuthService, $window, $modal, cfpLoadingBar) {\r\n        $rootScope.metadata.title = 'Sign In';\r\n        var self = this;\r\n        self.authErrors = null;\r\n        self.user = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        self.doLogin = function (redirect) {\r\n            redirect = redirect || true;\r\n            self.error = false;\r\n            AuthService.login(self.user.email, self.user.password).then(function (res) {\r\n                if (res.status === false) {\r\n                    self.authErrors = res.errors;\r\n                    return false;\r\n                } else {\r\n                    if (redirect && angular.isDefined(res)) {\r\n                        if($rootScope.$stateParams.redirect) {\r\n                            return $window.location.href = $rootScope.$stateParams.redirect;\r\n                        }\r\n                        $state.go('home');\r\n                    }\r\n                }\r\n                cfpLoadingBar.complete();\r\n            }, function (res) {\r\n                self.error = res;\r\n                // console.log('Failed', res);\r\n            });\r\n        };\r\n\r\n        self.authenticate = function (provider) {\r\n            self.error = null;\r\n            AuthService.socialLogin(provider, false).then(function (res) {\r\n                if (res && res.hasOwnProperty('status') && res.status === false) {\r\n                    self.authErrors = res.errors;\r\n                    $rootScope.toastMessage('There is an error, please check your form');\r\n                    // console.log('Failed', res);\r\n                } else {\r\n                    $rootScope.toastMessage('There is an error, please try again');\r\n                }\r\n            });\r\n        };\r\n\r\n        $timeout(function () {\r\n            jQuery(document).foundation();\r\n            $timeout(function () {\r\n                jQuery(document).foundation();\r\n            }, 500);\r\n        }, 500);\r\n    }\r\n\r\n    ForgotPasswordCtrl.$inject = ['$rootScope', '$state', 'AuthService'];\r\n    function ForgotPasswordCtrl($rootScope, $state, AuthService) {\r\n        $rootScope.metadata.title = 'Password Recovery';\r\n\r\n        var self = this;\r\n        self.email = '';\r\n        self.reseting = {\r\n            newPassword: null,\r\n            newPasswordCheck: null\r\n        };\r\n        self.hasToken = $rootScope.$stateParams.token || false;\r\n\r\n        self.doPasswordResetRequest = function () {\r\n            AuthService.requestPasswordReset(self.email).then(function (res) {\r\n                // console.log(res);\r\n                $rootScope.toastMessage('Check your inbox for our email! Should be there soon.');\r\n                $state.go('sign_in');\r\n            }, function (error) {\r\n                $rootScope.toastMessage('Error: ' + error.message);\r\n            });\r\n        };\r\n\r\n        self.confirmReset = function () {\r\n            if (self.reseting.newPassword === self.reseting.newPasswordCheck && angular.isString(self.hasToken)) {\r\n                AuthService.passwordReset($rootScope.$stateParams.email, self.reseting.newPassword, self.reseting.newPasswordCheck, self.hasToken)\r\n                    .then(function (res) {\r\n\r\n                    })\r\n            } else return false;\r\n        };\r\n\r\n        if (self.hasToken) {\r\n\r\n        }\r\n    }\r\n\r\n    BodyCtrl.$inject = ['$rootScope', '$localForage', '$q', '$state', 'AuthService', '$mdToast', 'UserActions', '$sce', 'DataService', '_', '$interval', '$mdSidenav'];\r\n    function BodyCtrl($rootScope, $localForage, $q, $state, AuthService, $mdToast, UserActions, $sce, DataService, _, $interval, $mdSidenav) {\r\n        var self = this;\r\n\r\n        self.selected = null;\r\n        $rootScope.AppData.searchText = decodeURIComponent($rootScope.$stateParams.q || '');\r\n        self.selectedItem = '';\r\n\r\n        self.notificationsTemplate = $sce.trustAsResourceUrl('src/directives/notification.html');\r\n        self.newsletterRegister = newsletterRegister;\r\n\r\n        //if cache is too old, empty it\r\n        $localForage.getItem('timestamp', true).then(function (timestamp) {\r\n            // if older than 1 week, clear it\r\n            if (moment(timestamp).add(1, 'w').isBefore()) {\r\n                $localForage.clear();\r\n            }\r\n        }, function (error) {\r\n            $localForage.clear();\r\n        });\r\n\r\n        // Recent Videos Footer Section\r\n        DataService.collection('projects', {per_page: 3, sort: 'created_at'}).then(function (result) {\r\n            _.each(result.data.data, function (i) {\r\n                // i.created_at = $filter('amUTC')(i.created_at);\r\n            });\r\n            self.footerRecentVideos = result.data;\r\n        });\r\n\r\n        self.startSearch = function (text) {\r\n            if (text) {\r\n                self.toPage('browse', {q: text});\r\n            }\r\n        };\r\n\r\n        var isIOS = function() {\r\n            return !!(navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/iPad/i));\r\n        };\r\n        var isAndroid = function() {\r\n            return !!navigator.userAgent.match(/Android/i);\r\n        };\r\n\r\n        $rootScope.isMobile = self.isMobile = function () {\r\n            return isIOS() || isAndroid() || Foundation.MediaQuery.current === 'small';\r\n        };\r\n\r\n        $rootScope.requestVerificationEmail = function () {\r\n            debugger;\r\n            AuthService.requestVerification().then(function () {\r\n                self.verificationEmailSentMessage = true;\r\n            });\r\n        };\r\n\r\n        $rootScope.generateGenres = function () {\r\n            var deferred = $q.defer();\r\n            // $localForage.removeItem('genres');\r\n            $localForage.getItem('genres', true).then(function (data) {\r\n                $rootScope.genresList = data;\r\n                deferred.resolve(data);\r\n            }, function (error) {\r\n                DataService.collection('genres').then(function (result) {\r\n                    $rootScope.genresList = result.data.Genres;\r\n                    $localForage.setItem('genres', result.data.Genres);\r\n                    $localForage.setItem('timestamp', moment().toISOString());\r\n                    deferred.resolve(result.data.Genres);\r\n                });\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        $rootScope.generateTypes = function () {\r\n            var deferred = $q.defer();\r\n            // $localForage.removeItem('types');\r\n            $localForage.getItem('types', true).then(function (data) {\r\n                $rootScope.typesList = data;\r\n                deferred.resolve(data);\r\n            }, function (error) {\r\n                DataService.collection('types').then(function (result) {\r\n                    $rootScope.typesList = result.data.Types;\r\n                    $localForage.setItem('types', result.data.Types);\r\n                    $localForage.setItem('timestamp', moment().toISOString());\r\n                    deferred.resolve(result.data.Types);\r\n                });\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        $rootScope.generateCountries = function () {\r\n            var deferred = $q.defer();\r\n            // $localForage.removeItem('countries');\r\n            $localForage.getItem('countries', true).then(function (data) {\r\n                $rootScope.countryList = data;\r\n                deferred.resolve(data);\r\n            }, function (error) {\r\n                DataService.collection('countries').then(function (result) {\r\n                    $rootScope.countryList = result.data.Countries;\r\n                    $localForage.setItem('countries', result.data.Countries);\r\n                    $localForage.setItem('timestamp', moment().toISOString());\r\n                    deferred.resolve(result.data.Countries);\r\n                });\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        $rootScope.generateLanguages = function () {\r\n            var deferred = $q.defer();\r\n            // $localForage.removeItem('languages');\r\n            $localForage.getItem('languages', true).then(function (data) {\r\n                $rootScope.languageList = data;\r\n                deferred.resolve(data);\r\n            }, function (error) {\r\n                DataService.collection('languages').then(function (result) {\r\n                    $rootScope.languageList = result.data.Languages;\r\n                    $localForage.setItem('languages', result.data.Languages);\r\n                    $localForage.setItem('timestamp', moment().toISOString());\r\n                    deferred.resolve(result.data.Languages);\r\n                });\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        $rootScope.generateReactions = function () {\r\n            return [\r\n                {name: 'Happy', emotion: 'happy', icon: 'happy'},\r\n                {name: 'Sad', emotion: 'sad', icon: 'sad'},\r\n                {name: 'Offended', emotion: 'offended', icon: 'annoyed'},\r\n                {name: 'Amused', emotion: 'amused', icon: 'grinning'},\r\n                {name: 'Mad', emotion: 'mad', icon: 'mad'},\r\n                {name: 'Furious', emotion: 'furious', icon: 'angry'},\r\n                {name: 'Awesome', emotion: 'awesome', icon: 'woah'},\r\n                {name: 'Terrified', emotion: 'terrified', icon: 'shocked'},\r\n                {name: 'Confused', emotion: 'confused', icon: 'confused'},\r\n                {name: 'In-Love', emotion: 'in-love', icon: 'love'},\r\n                {name: 'Amazed', emotion: 'amazed', icon: 'woah'},\r\n                {name: 'Motivated', emotion: 'motivated', icon: 'interested'},\r\n                {name: 'Inspired', emotion: 'inspired', icon: 'interested'},\r\n                {name: 'Bored', emotion: 'bored', icon: 'bored'},\r\n                {name: 'Sleepy', emotion: 'sleepy', icon: 'bored'},\r\n                //  {name: 'Determined', emotion: 'determined', icon: 'interested'},\r\n                {name: 'Emotional', emotion: 'emotional', icon: 'emotional'},\r\n                {name: 'Excited', emotion: 'excited', icon: 'big-smile'},\r\n                {name: 'Nostalgic', emotion: 'nostalgic', icon: 'nostalgic'},\r\n                {name: 'Annoyed', emotion: 'annoyed', icon: 'annoyed'},\r\n                {name: 'Sorry', emotion: 'sorry', icon: 'sad-tear'},\r\n                {name: 'Ashamed', emotion: 'ashamed', icon: 'sad-tear'},\r\n                {name: 'Meh', emotion: 'meh', icon: 'meh'},\r\n                {name: 'Special', emotion: 'special', icon: 'wink'},\r\n                {name: 'Sick', emotion: 'sick', icon: 'mute'},\r\n                {name: 'Great', emotion: 'great', icon: 'grinning'},\r\n                // {name: 'Down', emotion: 'down', icon: 'sad'},\r\n                // {name: 'Better', emotion: 'better', icon: 'interested'},\r\n                {name: 'Guilty', emotion: 'guilty', icon: 'sympathetic'},\r\n                {name: 'Hopeful', emotion: 'hopeful', icon: 'hopeful'},\r\n                {name: 'Hopeless', emotion: 'hopeless', icon: 'sad'},\r\n                {name: 'Secure', emotion: 'secure', icon: 'nerdy'},\r\n                {name: 'Blessed', emotion: 'blessed', icon: 'grinning'},\r\n                {name: 'Interested', emotion: 'interested', icon: 'interested'},\r\n                {name: 'Comfortable', emotion: 'comfortable', icon: 'hehe'},\r\n                {name: 'Disturbed', emotion: 'disturbed', icon: 'confused'},\r\n                {name: 'Stupid', emotion: 'stupid', icon: 'confused'},\r\n                {name: 'Sexy', emotion: 'sexy', icon: 'sexy'},\r\n                {name: 'Relaxed', emotion: 'relaxed', icon: 'happy'},\r\n\r\n                {name: 'Empowered', emotion: 'empowered', icon: 'happy'},\r\n                {name: 'Cool', emotion: 'cool', icon: 'happy'},\r\n                {name: 'Pumped', emotion: 'pumped', icon: 'happy'},\r\n                {name: 'Turned On', emotion: 'turned on', icon: 'happy'},\r\n                {name: 'Proud', emotion: 'Proud', icon: 'happy'},\r\n                {name: 'Disgusted', emotion: 'disgusted', icon: 'annoyed'},\r\n                {name: 'Sympathetic', emotion: 'sympathetic', icon: 'happy'},\r\n                {name: 'Overwhelmed', emotion: 'overwhelmed', icon: 'happy'},\r\n                {name: 'Passionate', emotion: 'passionate', icon: 'happy'},\r\n                {name: 'Thrilled', emotion: 'thrilled', icon: 'happy'},\r\n                {name: 'Loved', emotion: 'loved', icon: 'happy'},\r\n                {name: 'Thankful', emotion: 'thankful', icon: 'happy'},\r\n                {name: 'Appreciated', emotion: 'appreciated', icon: 'happy'},\r\n                {name: 'Romantic', emotion: 'romantic', icon: 'love'},\r\n                {name: 'Chill', emotion: 'chill', icon: 'happy'},\r\n                {name: 'Pissed Off', emotion: 'pissed off', icon: 'annoyed'},\r\n                {name: 'Accomplished', emotion: 'accomplished', icon: 'happy'},\r\n                {name: 'Honored', emotion: 'honored', icon: 'happy'},\r\n                {name: 'Young', emotion: 'young', icon: 'happy'},\r\n                {name: 'Wild', emotion: 'wild', icon: 'happy'},\r\n                {name: 'Old', emotion: 'old', icon: 'happy'},\r\n                {name: 'Free', emotion: 'free', icon: 'happy'},\r\n                {name: 'Epic', emotion: 'epic', icon: 'happy'},\r\n                // {name: 'Engaged', emotion: 'engaged', icon: 'happy'},\r\n                {name: 'Fired Up', emotion: 'fired up', icon: 'happy'},\r\n                {name: 'Detached', emotion: 'detached', icon: 'happy'},\r\n                {name: 'Disconnected', emotion: 'disconnected', icon: 'confused'},\r\n                {name: 'Connected', emotion: 'connected', icon: 'happy'},\r\n                // {name: 'Distant', emotion: 'distant', icon: 'happy'},\r\n                {name: 'Beautiful', emotion: 'beautiful', icon: 'happy'},\r\n\r\n                {name: 'Confident', emotion: 'confident', icon: 'happy'},\r\n                {name: 'Positive', emotion: 'positive', icon: 'happy'},\r\n                {name: 'Negative', emotion: 'negative', icon: 'annoyed'},\r\n                {name: 'Heartbroken', emotion: 'heartbroken', icon: 'emotional'},\r\n                {name: 'Silly', emotion: 'silly', icon: 'hehe'},\r\n                {name: 'Disappointed', emotion: 'disappointed', icon: 'sad'},\r\n                {name: 'Stressed', emotion: 'stressed', icon: 'annoyed'},\r\n                {name: 'Fantastic', emotion: 'fantastic', icon: 'big-smile'},\r\n                {name: 'Hungry', emotion: 'hungry', icon: 'annoyed'},\r\n                {name: 'Shocked', emotion: 'shocked', icon: 'shocked'},\r\n                {name: 'Frustrated', emotion: 'frustrated', icon: 'annoyed'},\r\n                {name: 'Engrossed', emotion: 'engrossed', icon: 'interested'},\r\n                {name: 'Peaceful', emotion: 'peaceful', icon: 'happy'},\r\n                {name: 'Surprised', emotion: 'surprised', icon: 'woah'},\r\n                {name: 'Satisfied', emotion: 'satisfied', icon: 'happy'},\r\n                {name: 'Incomplete', emotion: 'incomplete', icon: 'sad'},\r\n                {name: 'Complete', emotion: 'complete', icon: 'happy'},\r\n                {name: 'Entertained', emotion: 'entertained', icon: 'hehe'},\r\n                {name: 'Enlightened', emotion: 'enlightened', icon: 'interested'},\r\n                {name: 'Relieved', emotion: 'relieved', icon: 'happy'},\r\n                {name: 'Concerned', emotion: 'concerned', icon: 'sympathetic'},\r\n                {name: 'Strong', emotion: 'strong', icon: 'happy'},\r\n                {name: 'Optimistic', emotion: 'optimistic', icon: 'happy'},\r\n                {name: 'Discouraged', emotion: 'discouraged', icon: 'happy'},\r\n                {name: 'Lucky', emotion: 'lucky', icon: 'happy'},\r\n                {name: 'Scared', emotion: 'scared', icon: 'happy'},\r\n                {name: 'Brave', emotion: 'brave', icon: 'happy'},\r\n                {name: 'Naughty', emotion: 'naughty', icon: 'sexy'},\r\n                {name: 'Alert', emotion: 'alert', icon: 'happy'},\r\n                {name: 'Alive', emotion: 'alive', icon: 'happy'},\r\n                {name: 'Perfect', emotion: 'perfect', icon: 'happy'},\r\n                {name: 'Nervous', emotion: 'nervous', icon: 'happy'},\r\n                {name: 'Tense', emotion: 'tense', icon: 'annoyed'},\r\n                // {name: 'Eager', emotion: 'eager', icon: 'happy'},\r\n                {name: 'Impatient', emotion: 'impatient', icon: 'annoyed'},\r\n                {name: 'Philosophical', emotion: 'philosophical', icon: 'interested'},\r\n                {name: 'Empty', emotion: 'empty', icon: 'happy'},\r\n                {name: 'Informed', emotion: 'informed', icon: 'nerdy'},\r\n                {name: 'Playful', emotion: 'playful', icon: 'happy'},\r\n                {name: 'Wise', emotion: 'wise', icon: 'nerdy'},\r\n                {name: 'Refreshed', emotion: 'refreshed', icon: 'happy'},\r\n                // {name: 'Fortunate', emotion: 'fortunate', icon: 'happy'},\r\n                {name: 'Wanted', emotion: 'wanted', icon: 'annoyed'},\r\n                {name: 'Thirsty', emotion: 'thirsty', icon: 'happy'},\r\n                {name: 'Desperate', emotion: 'desperate', icon: 'happy'}\r\n            ];\r\n        };\r\n\r\n        $rootScope.generateGenres();\r\n        $rootScope.generateTypes();\r\n\r\n        $rootScope.toastMessage = function (msg) {\r\n            var toast = $mdToast.simple()\r\n                .textContent(msg)\r\n                .position('bottom right')\r\n                .parent(jQuery('#alerts'));\r\n            $mdToast.show(toast);\r\n        };\r\n\r\n        $rootScope.toastAction = function (msg, action, cb) {\r\n            var toast = $mdToast.simple()\r\n                .textContent(msg)\r\n                .action(action)\r\n                .hideDelay(0)\r\n                .highlightAction(false)\r\n                .position('bottom right')\r\n                .parent(jQuery('#alerts'));\r\n            $mdToast.show(toast).then(function (response) {\r\n                if (response == 'ok') {\r\n                    cb();\r\n                }\r\n            });\r\n        };\r\n\r\n        self.toggleSideNav = toggleSideNav;\r\n        self.closeSideNav = closeSideNav;\r\n\r\n        function toggleSideNav(navID) {\r\n            $mdSidenav(navID)\r\n                .toggle()\r\n                .then(function () {\r\n                    $rootScope.$broadcast('overVideoPlayer', false);\r\n                });\r\n        }\r\n\r\n        function closeSideNav(navID) {\r\n            $mdSidenav(navID)\r\n                .close()\r\n                .then(function () {\r\n                    $rootScope.$broadcast('overVideoPlayer', true);\r\n                });\r\n        }\r\n\r\n        self.toPage = function (state, args) {\r\n            $state.go(state, args);\r\n        };\r\n\r\n        self.notiURL = function (n) {\r\n            if (!n.is_read) {\r\n                self.markAsRead(n);\r\n            }\r\n            self.toPage(n.main_url.state, n.main_url.args);\r\n            jQuery('#NotificationsArea').foundation('close');\r\n        };\r\n\r\n        self.markAllAsSeen = function () {\r\n            var unseenList = _.where($rootScope.AppData.Notifications.list, {seen: false});\r\n            var i = 0;\r\n\r\n            _.each($rootScope.AppData.Notifications.list, function (a) {\r\n                if (!a.seen) {\r\n                    a.seen = true;\r\n                }\r\n            });\r\n\r\n            $rootScope.getNewToken('notification', $rootScope.AppData.User.id).then(function (token) {\r\n                var feed = $rootScope.StreamClient.feed('notification', $rootScope.AppData.User.id, token);\r\n                feed.get({limit: 20, mark_seen: true}, function (a) {\r\n                    _.each($rootScope.AppData.Notifications.list, function (n) {\r\n                        n.is_seen = true;\r\n                    });\r\n                    $rootScope.AppData.Notifications.unseen = 0;\r\n                })\r\n            });\r\n        };\r\n\r\n        self.markAllAsRead = function () {\r\n            $rootScope.getNewToken('notification', $rootScope.AppData.User.id).then(function (token) {\r\n                var feed = $rootScope.StreamClient.feed('notification', $rootScope.AppData.User.id, token);\r\n                feed.get({limit: 20, mark_read: true}, function (a) {\r\n                    _.each($rootScope.AppData.Notifications.list, function (n) {\r\n                        n.is_read = true;\r\n                    });\r\n                    $rootScope.AppData.Notifications.unread = 0;\r\n                })\r\n            });\r\n        };\r\n\r\n        self.markAsRead = function (obj) {\r\n            if (!obj.is_seen) {\r\n                $rootScope.getNewToken('notification', $rootScope.AppData.User.id).then(function (token) {\r\n                    var feed = $rootScope.StreamClient.feed('notification', $rootScope.AppData.User.id, token);\r\n                    feed.get({limit:25, mark_read: [obj.id], mark_seen: [obj.id]})\r\n                        .then(function(data) { /* on success */ })\r\n                        .catch(function(reason) { /* on failure */ });\r\n                    if ($rootScope.AppData.Notifications.unseen > 0) {\r\n                        $rootScope.AppData.Notifications.unseen--;\r\n                    }\r\n                    obj.is_seen = true;\r\n                });\r\n            }\r\n            return obj;\r\n        };\r\n\r\n        self.doSignOut = function () {\r\n            AuthService.logout().then(function (res) {\r\n                window.location.reload();\r\n            })\r\n        };\r\n\r\n        self.openNotificationsMenu = function () {\r\n            jQuery('#NotificationsArea').foundation('toggle');\r\n            self.markAllAsSeen();\r\n        };\r\n\r\n        self.toSignInRedirect = function () {\r\n            return window.location = window.location.origin + '/sign-in?redirect=' + window.location.pathname;\r\n        };\r\n\r\n        $rootScope.toFavorites = self.toFavorites = toFavorites;\r\n        $rootScope.toWatchLater = self.toWatchLater = toWatchLater;\r\n        $rootScope.checkContains = self.checkContains = checkContains;\r\n        $rootScope.isSame = self.isSame = isSame;\r\n\r\n        function toFavorites(obj) {\r\n            return UserActions.favorite(obj);\r\n        }\r\n\r\n        function toWatchLater(obj) {\r\n            return UserActions.watchLater(obj);\r\n        }\r\n\r\n        function checkContains(obj, search) {\r\n            return _.contains(obj, search);\r\n        }\r\n\r\n        function isSame(a, b) {\r\n            return moment(a).isSame(b, 'hour');\r\n        }\r\n\r\n        function newsletterRegister(notifyMe) {\r\n            DataService.notifyMe(notifyMe)\r\n                .then(function (res) {\r\n                    if (res.data.status == 'success') {\r\n                        $rootScope.toastMessage('Thanks for joining our newsletter!');\r\n                        return self.notifyMe = {};\r\n                    }\r\n                }, function (err) {\r\n                    // console.log(err);\r\n                });\r\n        }\r\n    }\r\n\r\n    VideoCtrl.$inject = ['$rootScope', '$scope', 'Project', '$modal', 'UserActions', 'DataService', '$state', 'Analytics', '$window', '$timeout', '_'];\r\n    function VideoCtrl($rootScope, $scope, Project, $modal, UserActions, DataService, $state, Analytics, $window, $timeout, _) {\r\n        var self = this;\r\n        self.loaded = false;\r\n        self.displayShare = false;\r\n        self.toggleReactionsList = false;\r\n        self.emotions = $rootScope.generateReactions();\r\n        self.critiqueAverage = 0;\r\n        self.critiquesPage = 1;\r\n        self.nominationsPage = 1;\r\n        self.activeTab = 'critiques';\r\n        self.isFaved = false;\r\n        self.isSaved = false;\r\n        self.playerResponsiveMode = $window.localStorage.playerResponsiveMode ? JSON.parse($window.localStorage.playerResponsiveMode) : _.contains(['small', 'medium', 'large'], Foundation.MediaQuery.current);\r\n        self.tagsArray = [];\r\n        self.lightsOff = false;\r\n\r\n        self.film = Project;\r\n        function init(result) {\r\n            $rootScope.currentTitle = result.name;\r\n\r\n            self.loaded = true;\r\n\r\n            $rootScope.metadata = {\r\n                title: result.name,\r\n                description: angular.isString(result.description) ? result.description.substr(0, 150) : '',\r\n                image: result.thumbnail_url,\r\n                url: window.location.href\r\n            };\r\n\r\n            self.qReactions();\r\n\r\n            self.qCritiques();\r\n\r\n            self.qNominations();\r\n\r\n            self.qWins();\r\n\r\n            self.checkUserActions();\r\n\r\n            $rootScope.initWatch = function () {\r\n                Analytics.trackEvent('video', 'play', self.film.name);\r\n                UserActions.markAsWatched(self.film)\r\n            };\r\n            //self.activeWatch = UserActions.markAsWatched(self.film);\r\n\r\n            $scope.$on('$destroy', function () {\r\n                $rootScope.initWatch = undefined;\r\n            });\r\n\r\n            $scope.$on('overVideoPlayer', function (state) {\r\n                zIndexPlayer(state);\r\n            });\r\n            //UserActions.cancelWatched(self.activeWatch);\r\n\r\n            self.test = function () {\r\n                // console.log('Clicked');\r\n            };\r\n\r\n            //Populate tags array\r\n            if (angular.isString(self.film.tags) && self.film.tags.length) {\r\n                if (self.film.tags.indexOf(',') > -1) {\r\n                    self.tagsArray = self.film.tags.split(',');\r\n                }\r\n            }\r\n\r\n            // Get related video\r\n            DataService.collection('projects', {\r\n                notVideo: self.film.id,\r\n                notOwner: $rootScope.AppData.User ? $rootScope.AppData.User.id : undefined,\r\n                per_page: 1,\r\n                random: true,\r\n            })\r\n                .then(function (res) {\r\n                    if (res) {\r\n                        self.relatedvideo = res.data.data[0];\r\n                    }\r\n                });\r\n\r\n            // Register Listener\r\n            // console.log('Listener registered!');\r\n            //Backand.on('video_updated_' + self.film.url_id, function (data) {\r\n            //// console.log(self.film);\r\n            // console.log('Listener Triggered!');\r\n            // console.log(data);\r\n            //self.updateVideoObj();\r\n            /*_.each(data, function (a) {\r\n             self.film[a.Key] = a.value;\r\n             })*/\r\n            //});\r\n        }\r\n\r\n        // Listen for events from the videoplayer\r\n        $scope.$on('VideoPlayer:sourceChanged', function (event, video) {\r\n            self.film = video;\r\n            init(video);\r\n\r\n            // Update browser history\r\n            /*$state.transitionTo('video', {url_id: video.url_id}, {\r\n                location: true,\r\n                inherit: true,\r\n                // relative: $state.$current,\r\n                notify: false\r\n            });*/\r\n\r\n            $state.go('video', {url_id: video.url_id}, {notify: false, location: \"replace\"})\r\n        });\r\n\r\n        if (!$rootScope.isAuthenticated()) {\r\n            var endWatch = $rootScope.$watch('AppData.User', function (newValue, oldValue) {\r\n                if (newValue && angular.isString(newValue.id)) {\r\n                    console.log('User Logged In');\r\n                    self.checkUserActions();\r\n                    endWatch();\r\n                }\r\n            });\r\n        }\r\n\r\n        self.checkUserActions = function () {\r\n            if ($rootScope.isAuthenticated()) {\r\n                UserActions.canReact(self.film.id).then(function (res) {\r\n                    self.canReact = res;\r\n                }, function (error) {\r\n                    self.canReact = error;\r\n                });\r\n\r\n                if (self.film.disableCritique || (self.film.owner_id === $rootScope.AppData.User.id)) {\r\n                    console.log('owner');\r\n                    self.canCritique = false;\r\n                } else {\r\n                    UserActions.canCritique(self.film.id).then(function (res) {\r\n                        self.canCritique = res;\r\n                    }, function (error) {\r\n                        self.canCritique = error;\r\n                    });\r\n                }\r\n\r\n                UserActions.canRate(self.film.id).then(function (res) {\r\n                    self.canRate = res;\r\n                }, function (error) {\r\n                    self.canRate = error;\r\n                });\r\n            } else {\r\n                self.canCritique = true;\r\n            }\r\n        };\r\n\r\n        /*self.qComments = function () {\r\n         // Fetch Comments\r\n         DataService.collection('comments', [{fieldName: 'created_at', order: 'desc'}],\r\n         [\r\n         {fieldName: 'project', operator: 'in', value: self.film.id},\r\n         {fieldName: 'parentComment', operator: 'in', value: ''}\r\n         ],\r\n         20, false, false, 1).then(function (result) {\r\n         self.comments = result.data;\r\n         // console.log('comments: \", result.data);\r\n         });\r\n         };*/\r\n\r\n        self.qReactions = function () {\r\n            // Fetch Reactions\r\n            DataService.collection('reactions', {project: self.film.id, sort: 'created_at', per_page: 500})\r\n                .then(function (result) {\r\n                    self.reactions = result.data;\r\n                    self.chartedReactions = _.countBy(self.reactions.data, function (r) {\r\n                        return _.contains(self.reactions.data, r) ? r.emotion : undefined;\r\n                    });\r\n                    self.reactionCountMax = _.max(self.chartedReactions, function (i) {\r\n                        return i;\r\n                    });\r\n\r\n                    var sortable = [];\r\n                    for (var r in self.chartedReactions)\r\n                        sortable.push([r, self.chartedReactions[r]])\r\n                    sortable.sort(function (a, b) {\r\n                        return b[1] - a[1]\r\n                    });\r\n\r\n                    self.chartedReactions = _.object(sortable);\r\n                });\r\n        };\r\n\r\n        self.qCritiques = function () {\r\n            // Fetch Critiques\r\n            DataService.collection('critiques', {include: 'comments', project: self.film.id, per_page: 200, page: self.critiquesPage})\r\n                .then(function (result) {\r\n                    self.critiques = result.data.data;\r\n                    self.calcIwAverage(self.critiques);\r\n                });\r\n        };\r\n\r\n        self.qNominations = function () {\r\n            DataService.collection('nominations', {include: 'user,award', project: self.film.id, sort: 'created_at', per_page: 200, page: self.nominationsPage})\r\n                .then(function (result) {\r\n                    self.nominations = result.data.data;\r\n                    //// console.log('Nomination: ', result.data);\r\n                });\r\n        };\r\n\r\n        self.qWins = function () {\r\n            DataService.collection('wins', {project: self.film.id, sort: 'created_at'}).then(function (result) {\r\n                self.wins = result.data.data;\r\n                // console.log('AwardWin: ', result.data);\r\n            });\r\n        };\r\n\r\n        self.calcIwAverage = function (critiques) {\r\n            var total = 0;\r\n            _.each(critiques, function (a) {\r\n                total += a.overall;\r\n            });\r\n            self.critiqueAverage = total / critiques.length;\r\n        };\r\n\r\n        self.getEmoticonByEmotion = function (emotion) {\r\n            var reactions = $rootScope.generateReactions();\r\n            return _.findWhere(reactions, {emotion: emotion});\r\n        };\r\n\r\n        self.showMessageDialog = function () {\r\n            UserActions.checkAuth().then(function (res) {\r\n                if (res) {\r\n                    var params = {\r\n                        templateUrl: 'common/contactUserDialog.html',\r\n                        resolve: {\r\n                            recipient: function () {\r\n                                return self.videoOwner.id;\r\n                            }\r\n                        },\r\n                        controller: ContactUserDialogController\r\n                    };\r\n                    var msgModal = $modal.open(params);\r\n                }\r\n            }, function (err) {\r\n                UserActions.loginModal();\r\n            });\r\n        };\r\n\r\n        self.rateThrottled = false;\r\n        self.rate = function (direction) {\r\n            if (!!self.rateThrottled) {\r\n                return false;\r\n            }\r\n\r\n            if (!$rootScope.isAuthenticated()) {\r\n                UserActions.loginModal();\r\n                return false;\r\n            }\r\n\r\n            if ($rootScope.isNotVerified()) {\r\n                $rootScope.toastAction('Please verify your account so you can rate videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\r\n                return false;\r\n            }\r\n\r\n            self.rateThrottled = true;\r\n            var actionVerb = 'like';\r\n            if (self.canRate === true) {\r\n                DataService.save('ratings', {\r\n                    author_id: $rootScope.AppData.User.id,\r\n                    project_id: self.film.id,\r\n                    up: direction === 'up',\r\n                    down: direction === 'down'\r\n                }).then(function (res) {\r\n                    // console.log(res);\r\n                    switch (direction) {\r\n                        case 'up':\r\n                            // Increment film up_ratings_count\r\n                            self.film.up_ratings_count++;\r\n                            break;\r\n                        case 'down':\r\n                            // Increment film down_ratings_count\r\n                            self.film.down_ratings_count++;\r\n                            actionVerb = 'unlike';\r\n                            break;\r\n                    }\r\n\r\n                    self.updateVideoObj();\r\n                    angular.extend(res.data, {projectOwner: self.film.owner_id});\r\n                    self.checkUserActions();\r\n                });\r\n\r\n            } else if (angular.isObject(self.canRate)) {\r\n                //up is false && down is false\r\n                if (!self.canRate.up && !self.canRate.down) {\r\n                    DataService.update('ratings', self.canRate.id, {\r\n                        up: direction === 'up',\r\n                        down: direction === 'down',\r\n                    })\r\n                        .then(function (res) {\r\n                            switch (direction) {\r\n                                case 'up':\r\n                                    // Increment film up_ratings_count\r\n                                    self.film.up_ratings_count++;\r\n                                    break;\r\n                                case 'down':\r\n                                    // Increment film down_ratings_count\r\n                                    self.film.down_ratings_count++;\r\n                                    actionVerb = 'unlike';\r\n                                    break;\r\n                            }\r\n                            angular.extend(self.canRate, {up: direction === 'up', down: direction === 'down'});\r\n                            //self.updateVideoObj();\r\n                            angular.extend(res.data, {projectOwner: self.film.owner_id});\r\n                            //self.checkUserActions();\r\n                        });\r\n\r\n                    // up is already true && direction is up\r\n                } else if (!!self.canRate.up && direction === 'up') {\r\n                    //DataService.delete('Rating', self.canRate.id)\r\n                    angular.extend(self.canRate, {up: false});\r\n                    DataService.update('ratings', self.canRate.id, {up: false, down: false})\r\n                        .then(function (res) {\r\n                            self.film.up_ratings_count--;\r\n                            //self.updateVideoObj();\r\n                            angular.extend(res.data, {projectOwner: self.film.owner_id});\r\n                            //self.checkUserActions();\r\n                        });\r\n\r\n                    // down is already true && direction is down\r\n                } else if (!!self.canRate.down && direction === 'down') {\r\n                    //DataService.delete('Rating', self.canRate.id)\r\n                    angular.extend(self.canRate, {down: false});\r\n                    DataService.update('ratings', self.canRate.id, {up: false, down: false})\r\n                        .then(function (res) {\r\n                            self.film.down_ratings_count--;\r\n                            //self.updateVideoObj();\r\n                            angular.extend(res.data, {projectOwner: self.film.owner_id});\r\n                            //self.checkUserActions();\r\n                        });\r\n\r\n                    // down is true && direction is up || up is true && direction is down -> reversal\r\n                } else if ((!!self.canRate.down && direction === 'up') || (!!self.canRate.up && direction === 'down')) {\r\n                    var up = false, down = false;\r\n                    switch (direction) {\r\n                        case 'up':\r\n                            up = true;\r\n                            self.film.up_ratings_count++;\r\n                            self.film.down_ratings_count--;\r\n                            angular.extend(self.canRate, {up: up, down: down});\r\n                            break;\r\n                        case 'down':\r\n                            down = true;\r\n                            self.film.up_ratings_count--;\r\n                            self.film.down_ratings_count++;\r\n                            angular.extend(self.canRate, {up: up, down: down});\r\n                            actionVerb = 'unlike';\r\n                            break;\r\n                    }\r\n                    DataService.update('ratings', self.canRate.id, {up: up, down: down}).then(function (res) {\r\n                        //self.updateVideoObj();\r\n                        //self.checkUserActions();\r\n                        angular.extend(res.data, {projectOwner: self.film.owner_id});\r\n                    });\r\n                }\r\n            }\r\n            $timeout(function () {\r\n                            self.rateThrottled = false;\r\n                        }, 1000);\r\n        };\r\n\r\n        self.react = function (emotion) {\r\n            if (angular.isDefined(emotion)) {\r\n                if (!$rootScope.isAuthenticated()) {\r\n                    UserActions.loginModal();\r\n                    return false;\r\n                }\r\n\r\n                if ($rootScope.isNotVerified()) {\r\n                    $rootScope.toastAction('Please verify your account and join the conversation! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\r\n                    return false;\r\n                }\r\n\r\n                var actionVerb = 'react';\r\n                if (self.canReact === true) {\r\n                    DataService.save('reactions', {\r\n                        user_id: $rootScope.AppData.User.id,\r\n                        project_id: self.film.id,\r\n                        emotion: emotion.emotion\r\n                    }).then(function (resA) {\r\n                        self.film.reactions_count++;\r\n                        // self.updateVideoObj();\r\n                        self.checkUserActions();\r\n                        self.qReactions();\r\n                    });\r\n                } else if (angular.isObject(self.canReact)) {\r\n                    if (self.canReact.emotion !== emotion.emotion) {\r\n                        DataService.update('reactions', self.canReact.id, {\r\n                            emotion: emotion.emotion\r\n                        }).then(function (resA) {\r\n                            self.canReact = resA.data;\r\n                            // self.updateVideoObj();\r\n                            self.checkUserActions();\r\n                            self.qReactions();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        self.canReactIcon = function () {\r\n            if (angular.isObject(self.canReact)) {\r\n                var emoticon = _.findWhere(self.emotions, {'emotion': self.canReact.emotion});\r\n                return angular.isObject(emoticon) ? emoticon.icon : false;\r\n            } else return false;\r\n        };\r\n\r\n        self.deleteCritique = function (c, ev) {\r\n            if (!$rootScope.isAuthenticated()) {\r\n                UserActions.loginModal();\r\n                return false;\r\n            }\r\n\r\n            if ($rootScope.isNotVerified()) {\r\n                $rootScope.toastAction('Please verify your account and join the conversation! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\r\n                return false;\r\n            }\r\n\r\n            var modalInstance = $modal.open({\r\n                templateUrl: 'common/confirmDialog.html',\r\n                controller: ['$scope', '$modalInstance', function ($scope, $modalInstance) {\r\n                    $scope.ok = function () {\r\n                        $modalInstance.close(true);\r\n                    };\r\n\r\n                    $scope.cancel = function () {\r\n                        $modalInstance.dismiss('cancel');\r\n                    };\r\n                }],\r\n                size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\r\n                keyboard: true\r\n            });\r\n            modalInstance.result.then(function () {\r\n                DataService.collection('nominations', [], [{\r\n                    critique: c.id\r\n                }]).then(function (noms) {\r\n                    var nom = noms.data.data[0];\r\n                    DataService.delete('Nominations', nom.id).then(function () {\r\n                        // Decrement film nominationCount\r\n                        self.film.nominationCount--;\r\n                    });\r\n\r\n                    DataService.delete('Critique', c.id).then(function () {\r\n                        $rootScope.toastMessage('Your critique was deleted.');\r\n                        // Decrement film critiques_count\r\n                        self.film.critiques_count--;\r\n                        self.updateVideoObj();\r\n                        self.checkUserActions();\r\n                        self.critiques = _.reject(self.critiques, function (a) {\r\n                            return a.id === c.id;\r\n                        });\r\n                    });\r\n                })\r\n            }, function () {\r\n                // console.info('Modal dismissed at: ' + new Date());\r\n            });\r\n        };\r\n\r\n        self.openCritiqueDialog = function ($event) {\r\n            if (self.canCritique !== true && self.canCritique !== false) {\r\n                return $state.go('video_critique', {video_url_id: self.film.url_id, url_id: self.canCritique.url_id});\r\n            }\r\n\r\n            CritiqueDialogController.$inject = ['$scope', '$modalInstance', 'critique', 'film', '$q', 'Analytics'];\r\n            function CritiqueDialogController($scope, $modalInstance, critique, film, $q, Analytics) {\r\n                zIndexPlayer();\r\n                $scope.critique = critique;\r\n                $scope.film = film;\r\n                $scope.ratingMax = 10;\r\n                $scope.makePrivateHelp = false;\r\n                $scope.processing = false;\r\n                $scope.canNominate = false;\r\n                $scope.errors = [];\r\n\r\n                if ($scope.film.type.id === '39704d3d-2941-11e6-b8db-86ac961c55b2') {\r\n                    DataService.collection('awards', { trailer:true }).then(function (result) {\r\n                        $scope.awardsList = result.data.Awards;\r\n                    });\r\n                } else {\r\n                    DataService.collection('awards').then(function (result) {\r\n                        $scope.awardsList = result.data.Awards;\r\n                    });\r\n                }\r\n\r\n                $scope.dialogModel = {\r\n                    award_id: null\r\n                };\r\n\r\n                $scope.nominated = {\r\n                    award_id: $scope.dialogModel.award_id,\r\n                    user_id: $rootScope.AppData.User.id,\r\n                    project_id: $scope.critique.project_id,\r\n                    critique_id: undefined\r\n                };\r\n\r\n                $scope.starArray = angular.copy([{\"num\": 0}, {\"num\": 1}, {\"num\": 2}, {\"num\": 3}, {\"num\": 4}, {\"num\": 5}, {\"num\": 6}, {\"num\": 7}, {\"num\": 8}, {\"num\": 9}, {\"num\": 10}].reverse());\r\n\r\n                $scope.calcOverall = function () {\r\n                    switch ($scope.critique.type){\r\n                        case 'script':\r\n                            $scope.critique.overall = ($scope.critique.originality + $scope.critique.pacing + $scope.critique.structure +\r\n                                $scope.critique.writing + $scope.critique.style + $scope.critique.theme + $scope.critique.dialogue +\r\n                                $scope.critique.characters + $scope.critique.presentation + $scope.critique.concept) / 10;\r\n                            break;\r\n                        case 'video':\r\n                        default:\r\n                            $scope.critique.overall = ($scope.critique.originality + $scope.critique.direction + $scope.critique.writing +\r\n                                $scope.critique.cinematography + $scope.critique.performances + $scope.critique.production +\r\n                                $scope.critique.pacing + $scope.critique.structure + $scope.critique.audio + $scope.critique.music) / 10;\r\n                            break;\r\n                    }\r\n                };\r\n\r\n                $scope.$watchCollection('critique', function () {\r\n                    $scope.calcOverall();\r\n                });\r\n\r\n                $scope.$watch('critique.overall', function (newValue) {\r\n                    $scope.canNominate = newValue >= 6;\r\n                });\r\n\r\n                $scope.validateCritique = function () {\r\n                    $scope.errors = [];\r\n\r\n                    var failA = true;\r\n                    var failB = true;\r\n                    $scope.critique.body.trim();\r\n                    failA = $scope.critique.body.length < 1;\r\n                    if (failA) {\r\n                        $scope.errors.push('Tell us why you gave this critique an overall rating of ' + $scope.critique.overall);\r\n                    }\r\n                    switch ($scope.critique.type){\r\n                        case 'script':\r\n                            failB = $scope.critique.originality < 1 || $scope.critique.pacing < 1 || $scope.critique.writing < 1 ||\r\n                                $scope.critique.structure < 1 || $scope.critique.style < 1 || $scope.critique.theme < 1 ||\r\n                                $scope.critique.dialogue < 1 || $scope.critique.characters < 1 || $scope.critique.presentation < 1 || $scope.critique.concept < 1;\r\n                            break;\r\n                        case 'video':\r\n                        default:\r\n                            failB = $scope.critique.originality < 1 || $scope.critique.direction < 1 || $scope.critique.writing < 1 ||\r\n                                $scope.critique.cinematography < 1 || $scope.critique.performances < 1 || $scope.critique.production < 1 ||\r\n                                $scope.critique.pacing < 1 || $scope.critique.structure < 1 || $scope.critique.audio < 1 || $scope.critique.music < 1;\r\n                            break;\r\n                    }\r\n\r\n                    if (failB) {\r\n                        $scope.errors.push('Be sure to put a minimum of 1-star in every category.')\r\n                    }\r\n\r\n                    if(!failA && !failB) {\r\n                        $scope.postCritique();\r\n                    }\r\n                };\r\n\r\n                $scope.closeDialog = function () {\r\n                    zIndexPlayer(true);\r\n                    $modalInstance.close(true);\r\n                };\r\n\r\n                $scope.cancel = function () {\r\n                    zIndexPlayer(true);\r\n                    $modalInstance.dismiss('cancel');\r\n                };\r\n\r\n                $scope.hoveringOver = function (value) {\r\n                    $scope.overStar = value;\r\n                    $scope.percent = 100 * (value / $scope.max);\r\n                };\r\n\r\n                $scope.postCritique = function () {\r\n                    if ($scope.processing) {\r\n                        return false;\r\n                    }\r\n\r\n                    $scope.processing = true;\r\n                    $scope.critique.url_id = moment().valueOf();\r\n                    DataService.save('critiques?include=user,award', $scope.critique).then(function (res) {\r\n                        var obj = res.data.data;\r\n\r\n                        self.critiques.push(obj);\r\n                        self.calcIwAverage(self.critiques);\r\n                        // Increment film critiques_count\r\n                        self.film.critiques_count++;\r\n\r\n                        // register Action\r\n                        Analytics.trackEvent('video', 'critique', self.film.name);\r\n\r\n                        // if an award has been selected, create a nomination\r\n                        if (!!$scope.dialogModel.award_id && angular.isString($scope.dialogModel.award_id)) {\r\n                            $scope.nominated.critique_id = obj.id;\r\n                            $scope.nominated.award_id = $scope.dialogModel.award_id;\r\n                            DataService.save('nominations', $scope.nominated).then(function (nom) {\r\n                                // Increment film commentCount\r\n                                self.film.nominationCount++;\r\n                                self.updateVideoObj();\r\n                                // register Action\r\n                                self.qNominations();\r\n                                nom.critique = obj;\r\n                                Analytics.trackEvent('video', 'nominate', self.film.name);\r\n                            }, function (error) {\r\n                                alert('Failed to create new nomination, with error code: ' + error.message);\r\n                            })\r\n                        } else {\r\n\r\n                        }\r\n\r\n                    }, function (error) {\r\n                        alert('Failed to create new critique, with error code: ' + error.message);\r\n                        $scope.processing = false;\r\n                    }).then(function () {\r\n                        self.qCritiques();\r\n                        self.checkUserActions();\r\n                        $scope.closeDialog();\r\n                    });\r\n                };\r\n            }\r\n\r\n            UserActions.canCritique(self.film.id).then(function (res) {\r\n                // is logged in\r\n                if (res) {\r\n\r\n                    if ($rootScope.isNotVerified()) {\r\n                        $rootScope.toastAction('Please verify your account and join the conversation! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\r\n                        return false;\r\n                    }\r\n\r\n                    if (self.film.owner_id === $rootScope.AppData.User.id) {\r\n                        $rootScope.toastMessage('You cannot critique your own content.');\r\n                        return false;\r\n                    }\r\n\r\n                    $modal.open({\r\n                        templateUrl: 'common/critiqueDialog.html',\r\n                        resolve: {\r\n                            critique: function () {\r\n                                return {\r\n                                    originality: 0,\r\n                                    direction: 0,\r\n                                    writing: 0,\r\n                                    cinematography: 0,\r\n                                    performances: 0,\r\n                                    production: 0,\r\n                                    pacing: 0,\r\n                                    structure: 0,\r\n                                    audio: 0,\r\n                                    music: 0,\r\n                                    overall: 0,\r\n                                    private: false,\r\n                                    user_id: $rootScope.AppData.User.id,\r\n                                    body: '',\r\n                                    project_id: self.film.id,\r\n                                    type: self.film.hosting_type === 'script' ? 'script' : 'video',\r\n                                    style: 0,\r\n                                    theme: 0,\r\n                                    dialogue: 0,\r\n                                    characters: 0,\r\n                                    presentation: 0,\r\n                                    concept: 0,\r\n                                };\r\n                            },\r\n                            film: function () {\r\n                                return self.film;\r\n                            }\r\n                        },\r\n                        controller: CritiqueDialogController,\r\n                        keyboard: true\r\n                    });\r\n                }\r\n            }, function (err) {\r\n                if (angular.isObject(err)) {\r\n                    return false;\r\n                } else UserActions.loginModal();\r\n            });\r\n        };\r\n\r\n        self.openShareDialog = function () {\r\n            $modal.open({\r\n                templateUrl: 'common/shareDialog.html',\r\n                resolve: {\r\n                    Video: function () {\r\n                        return self.film;\r\n                    }\r\n                },\r\n                size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\r\n                controller: ['$rootScope', '$scope', '$modalInstance', 'Video', function ($rootScope, $scope, $modalInstance, Video) {\r\n                    zIndexPlayer();\r\n                    $scope.video = Video;\r\n                    $scope.shareLink = window.location.origin + '/' + Video.url_id;\r\n                    $scope.cancel = function () {\r\n                        zIndexPlayer(true);\r\n                        $modalInstance.close();\r\n                    };\r\n                }]\r\n            })\r\n        };\r\n\r\n        self.openReactionDialog = function () {\r\n            UserActions.checkAuth(self.film.id).then(function (res) {\r\n                // is logged in\r\n                if (res) {\r\n\r\n                    if ($rootScope.isNotVerified()) {\r\n                        $rootScope.toastAction('Please verify your account and join the conversation! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\r\n                        return false;\r\n                    }\r\n\r\n                    var modalInstance = $modal.open({\r\n                        templateUrl: 'common/reactionDialog.html',\r\n                        resolve: {\r\n                            Video: function () {\r\n                                return self.film;\r\n                            },\r\n                            Reaction: function () {\r\n                                return self.canReact || null;\r\n                            },\r\n                            Emotions: function () {\r\n                                return self.emotions;\r\n                            }\r\n                        },\r\n                        size: Foundation.MediaQuery.atLeast('medium') ? 'tiny' : 'full',\r\n                        controller: ['$scope', '$modalInstance', 'Video', 'Reaction', 'Emotions', function ($scope, $modalInstance, Video, Reaction, Emotions) {\r\n                            zIndexPlayer();\r\n                            $scope.video = Video;\r\n                            $scope.emotions = Emotions;\r\n\r\n                            $scope.getEmoticonByEmotion = function (emotion) {\r\n                                return _.findWhere($scope.emotions, {emotion: emotion});\r\n                            };\r\n\r\n                            $scope.selectedEmotion = function (e) {\r\n                                zIndexPlayer(true);\r\n                                //$modalInstance.dismiss('cancel');\r\n                                $modalInstance.close(e);\r\n                            };\r\n\r\n                            $scope.cancel = function () {\r\n                                zIndexPlayer(true);\r\n                                $modalInstance.dismiss('cancel');\r\n                            };\r\n\r\n                            $scope.closeDialog = function () {\r\n                                zIndexPlayer(true);\r\n                                $modalInstance.dismiss('cancel');\r\n                            };\r\n\r\n                        }]\r\n                    });\r\n\r\n                    modalInstance.result.then(function (reaction) {\r\n                        self.react(reaction);\r\n                    }, function () {\r\n                        // console.info('Modal dismissed at: ' + new Date());\r\n                    }).then(function () {\r\n                        $timeout(function () {\r\n                            // console.log('remove is-reveal-open');\r\n                            jQuery('body').removeClass('is-reveal-open')\r\n                        }, 500);\r\n                    });\r\n                }\r\n            }, function (err) {\r\n                // console.log(err);\r\n                if (angular.isObject(err)) {\r\n                    return false;\r\n                } else UserActions.loginModal();\r\n            });\r\n        };\r\n\r\n        self.openAddToDialog = function () {\r\n            $modal.open({\r\n                templateUrl: 'common/shareDialog.html',\r\n                resolve: {\r\n                    Video: function () {\r\n                        return self.film;\r\n                    }\r\n                },\r\n                size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\r\n                controller: ['$scope', '$modalInstance', 'Video', function ($scope, $modalInstance, Video) {\r\n                    zIndexPlayer();\r\n                    $scope.video = Video;\r\n                    $scope.shareLink = window.location.origin + '/' + Video.url_id;\r\n                    $scope.cancel = function () {\r\n                        zIndexPlayer(true);\r\n                        $modalInstance.close();\r\n                    };\r\n                }]\r\n            })\r\n        };\r\n\r\n        self.toFavorites = function () {\r\n            return $rootScope.toFavorites(self.film);\r\n        };\r\n\r\n        self.toWatchLater = function () {\r\n            return $rootScope.toWatchLater(self.film);\r\n        };\r\n\r\n        self.toggleWidthMode = function () {\r\n            $window.localStorage.playerResponsiveMode = self.playerResponsiveMode = !self.playerResponsiveMode;\r\n            $timeout(function () {\r\n                $window.videoPlayer.resize();\r\n                //fail-safe\r\n                $timeout(function () {\r\n                    $window.videoPlayer.resize();\r\n                }, 500);\r\n            }, 100);\r\n        };\r\n\r\n        $scope.$on('$destroy', function (event) {\r\n            //$scope.commentSubscribe.cancel();\r\n        });\r\n\r\n        self.updateVideoObj = function () {\r\n            return DataService.item('projects', self.film.id)\r\n                .then(function (a) {\r\n                    console.log('Project Updated: ', a);\r\n                    self.film = a.data.data;\r\n                });\r\n        };\r\n\r\n        self.toggleLights = function () {\r\n            self.lightsOff = !self.lightsOff;\r\n            var overlay = jQuery('#overlay');\r\n            var body = jQuery('body');\r\n            overlay.fadeToggle(1000);\r\n            /* Choose desired delay */\r\n            if (!self.lightsOff) {\r\n                $timeout(function () {\r\n                    overlay.removeClass('highlight');\r\n                    body.removeClass('cinema-mode');\r\n                }, 1000);\r\n                /* Same delay */\r\n            } else {\r\n                overlay.addClass('highlight');\r\n                body.addClass('cinema-mode');\r\n            }\r\n        };\r\n\r\n        self.reportDialog = function () {\r\n            var modalInstance = $modal.open({\r\n                templateUrl: 'common/reportVideoDialog.html',\r\n                resolve: {\r\n                    Video: function () {\r\n                        return self.film;\r\n                    }\r\n                },\r\n                closeOnClick: false,\r\n                size: Foundation.MediaQuery.atLeast('medium') ? 'small' : 'full',\r\n                controller: ['$scope', '$modalInstance', 'DataService', 'Video', function ($scope, $modalInstance, DataService, Video) {\r\n                    zIndexPlayer();\r\n                    $scope.video = Video;\r\n                    $scope.report = {\r\n                        name: '',\r\n                        email: '',\r\n                        body: '',\r\n                        project_id: $scope.video.id,\r\n                        video: $scope.video.url_id\r\n                    };\r\n\r\n                    $scope.cancel = function () {\r\n                        zIndexPlayer(true);\r\n                        $modalInstance.dismiss('cancel');\r\n                    };\r\n\r\n                    $scope.closeDialog = function () {\r\n                        zIndexPlayer(true);\r\n                        $modalInstance.close($scope.report);\r\n                    };\r\n                }]\r\n            });\r\n\r\n            modalInstance.result.then(function (report) {\r\n                DataService.mail('report', report).then(function () {\r\n                    $rootScope.toastMessage('Your Report has been Sent');\r\n                });\r\n            }, function () {\r\n                // console.info('Modal dismissed at: ' + new Date());\r\n            }).then(function () {\r\n                $timeout(function () {\r\n                    // console.log('remove is-reveal-open');\r\n                    jQuery('body').removeClass('is-reveal-open')\r\n                }, 500);\r\n            });\r\n        };\r\n\r\n        function zIndexPlayer(remove) {\r\n            var vidDiv = jQuery('.flex-video');\r\n            !!remove ? vidDiv.css('z-index', '') : vidDiv.css('z-index', 0);\r\n        }\r\n\r\n        //Lets begin\r\n        init(self.film);\r\n    }\r\n\r\n    VideoCritiqueCtrl.$inject = ['$rootScope', '$scope', 'Critique', 'UserActions', 'DataService', '_'];\r\n    function VideoCritiqueCtrl($rootScope, $scope, Critique, UserActions, DataService, _) {\r\n        var self = this;\r\n        self.commentsPage = 1;\r\n\r\n        // Fetch Critique\r\n        var init = function (critique) {\r\n            self.critique = critique;\r\n            $scope.commentsParent = self.critique;\r\n\r\n            // Fetch Comments\r\n            DataService.collection('comments', {\r\n                critique: self.critique.id,\r\n                per_page: 10,\r\n                page: self.commentsPage,\r\n                replies: false\r\n            }).then(function (result) {\r\n                self.comments = result.data;\r\n            });\r\n\r\n        };\r\n        init(Critique.data.data);\r\n    }\r\n\r\n    VideoCritiqueEditCtrl.$inject = ['$rootScope', '$scope', 'DataService', '$state', 'Critique'];\r\n    function VideoCritiqueEditCtrl($rootScope, $scope, DataService, $state, Critique) {\r\n        $scope.critique = Critique.data.data;\r\n        $scope.ratingMax = 10;\r\n        $scope.makePrivateHelp = false;\r\n\r\n        $scope.editedCritique = angular.copy($scope.critique);\r\n\r\n        DataService.collection('awards')\r\n            .then(function (result) {\r\n                $scope.awardsList = result.data.awards;\r\n            });\r\n\r\n\r\n        $scope.update = function () {\r\n            $scope.editedCritique.edited_at = moment().toDate();\r\n            // $scope.editedCritique.private = !!$scope.editedCritique.private;\r\n            DataService.update('critiques', $scope.critique.id, $scope.editedCritique).then(function (res) {\r\n                    $rootScope.toastMessage('Critique Updated');\r\n                    /*if ($state.is('profile_critique-edit'))\r\n                     $state.go('profile_critiqueselfid: self.critique.id});*/\r\n                    if ($state.is('video_critique-edit'))\r\n                        $state.go('video_critique', {\r\n                            video_url_id: $rootScope.$stateParams.video_url_id, url_id: $scope.critique.url_id\r\n                        });\r\n                }, function (err) {\r\n                    // console.log(err);\r\n                    $rootScope.toastMessage('Something went wrong...')\r\n                }\r\n            )\r\n        };\r\n\r\n        $scope.starArray = angular.copy([{\"num\": 0}, {\"num\": 1}, {\"num\": 2}, {\"num\": 3}, {\"num\": 4}, {\"num\": 5}, {\"num\": 6}, {\"num\": 7}, {\"num\": 8}, {\"num\": 9}, {\"num\": 10}].reverse());\r\n\r\n        $scope.hoveringOver = function (value) {\r\n            $scope.overStar = value;\r\n            $scope.percent = 100 * (value / $scope.max);\r\n        };\r\n\r\n        $scope.calcOverall = function () {\r\n            switch ($scope.editedCritique.type){\r\n                case 'script':\r\n                    $scope.editedCritique.overall = ($scope.editedCritique.originality + $scope.editedCritique.pacing + $scope.editedCritique.structure +\r\n                        $scope.editedCritique.writing + $scope.editedCritique.style + $scope.editedCritique.theme + $scope.editedCritique.dialogue +\r\n                        $scope.editedCritique.characters + $scope.editedCritique.presentation + $scope.editedCritique.concept) / 10;\r\n                    break;\r\n                case 'video':\r\n                default:\r\n                    $scope.editedCritique.overall = ($scope.editedCritique.originality + $scope.editedCritique.direction + $scope.editedCritique.writing +\r\n                        $scope.editedCritique.cinematography + $scope.editedCritique.performances + $scope.editedCritique.production +\r\n                        $scope.editedCritique.pacing + $scope.editedCritique.structure + $scope.editedCritique.audio + $scope.editedCritique.music) / 10;\r\n                    break;\r\n            }        };\r\n\r\n        $scope.$watchCollection('editedCritique', function () {\r\n            $scope.calcOverall();\r\n        });\r\n    }\r\n\r\n    ProfileCtrl.$inject = ['$rootScope', 'filepickerService', 'User', 'UserStats', 'AuthService', 'Upload', '_'];\r\n    function ProfileCtrl($rootScope, filepickerService, User, UserStats, AuthService, Upload, _) {\r\n        $rootScope.metadata.title = 'Profile';\r\n        var self = this;\r\n        self.user = User;\r\n        self.userStats = UserStats;\r\n        // self.updateAvatar = _.throttle(updateAvatar, 1000);\r\n        // self.updateCoverPhoto = _.throttle(updateCoverPhoto, 1000);\r\n        self.pickAvatar = pickAvatar;\r\n        self.pickBanner = pickBanner;\r\n\r\n        self.getEmoticonByEmotion = function (emotion) {\r\n            var reactions = $rootScope.generateReactions();\r\n            return _.findWhere(reactions, {emotion: emotion});\r\n        };\r\n\r\n        self.generatePublicId = function (type) {\r\n            return self.user.url_id + '_' + type + '_' + moment().valueOf();\r\n        };\r\n\r\n        function pickBanner(){\r\n            filepickerService.pick(\r\n                {\r\n                    cropRatio: 32/7,\r\n                    mimetype: 'image/*',\r\n                    services: ['CONVERT', 'COMPUTER', 'FACEBOOK', 'GOOGLE_DRIVE', 'WEBCAM', 'INSTAGRAM'],\r\n                    conversions: ['crop', 'rotate', 'filter'],\r\n                    customSourcePath: self.user.url_id + '/banners/'\r\n                },\r\n                function (Blob){\r\n                    self.user.coverPhoto = Blob.url + '?cache=true';\r\n                    AuthService.updateUser(self.user).then(function (res) {\r\n                        $rootScope.toastMessage('Cover Photo Updated!');\r\n                    });                }\r\n            );\r\n        }\r\n        function pickAvatar(){\r\n            filepickerService.pick(\r\n                {\r\n                    cropRatio: 1/1,\r\n                    mimetype: 'image/*',\r\n                    services: ['CONVERT', 'COMPUTER', 'FACEBOOK', 'GOOGLE_DRIVE', 'WEBCAM', 'INSTAGRAM'],\r\n                    conversions: ['crop', 'rotate', 'filter'],\r\n                    customSourcePath: self.user.url_id + '/avatars/'\r\n                },\r\n                function (Blob){\r\n                    self.user.avatar = Blob.url + '?cache=true';\r\n                    AuthService.updateUser(self.user).then(function (res) {\r\n                        $rootScope.toastMessage('Avatar Updated!');\r\n                    });\r\n                }\r\n            );\r\n        }\r\n\r\n        /*function updateAvatar(file) {\r\n            Upload.upload({\r\n                url: 'https://api.cloudinary.com/v1_1/indiewise/upload',\r\n                params: {upload_preset: 'r0kuyqef'},\r\n                data: {file: file, public_id: self.generatePublicId('avatar')},\r\n                skipAuthorization: true  // `Authorization: Bearer <token>` will not be sent on this request.\r\n            }).then(function (resp) {\r\n                console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\r\n                self.user.avatar = resp.data.secure_url;\r\n                AuthService.updateUser(self.user).then(function (res) {\r\n                    $rootScope.toastMessage('Avatar Updated!');\r\n                });\r\n            }, function (resp) {\r\n                console.log('Error status: ' + resp.status);\r\n            }, function (evt) {\r\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n                console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\r\n            });\r\n        }*/\r\n\r\n        /*function updateCoverPhoto(file) {\r\n            Upload.upload({\r\n                url: 'https://api.cloudinary.com/v1_1/indiewise/upload',\r\n                params: {upload_preset: 'jmy7rdcs'},\r\n                data: {file: file, public_id: Profile.generatePublicId('cover')},\r\n                skipAuthorization: true  // `Authorization: Bearer <token>` will not be sent on this request.\r\n            }).then(function (resp) {\r\n                console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\r\n                self.user.coverPhoto = resp.data.secure_url;\r\n                AuthService.updateUser(self.user).then(function (res) {\r\n                    $rootScope.toastMessage('Cover Photo Updated!');\r\n                });\r\n            }, function (resp) {\r\n                console.log('Error status: ' + resp.status);\r\n            }, function (evt) {\r\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n                console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\r\n            });\r\n\r\n        }*/\r\n\r\n    }\r\n\r\n    ProfileUploadController.$inject = ['$rootScope', '$state', 'User', '$http', 'DataService', '$window', 'Upload', 'filepickerService', '_'];\r\n    function ProfileUploadController($rootScope, $state, User, $http, DataService, $window, Upload, filepickerService, _) {\r\n        var self = this;\r\n        self.user = User;\r\n        self.uploadType = 2;\r\n        self.newVideo = {\r\n            name: '',\r\n            description: '',\r\n            director: '',\r\n            writer: '',\r\n            producers: '',\r\n            keyCast: '',\r\n            language: '00000000-0000-6b6e-4371-305344643451',\r\n            completionDate: '',\r\n            filmingCountry: undefined,\r\n            originCountry: undefined,\r\n            owner: $rootScope.AppData.User.id,\r\n            genres: [],\r\n            type: undefined,\r\n            runTime: 0,\r\n            thumbnail_url: '',\r\n            hosting_type: 'youtube',\r\n            video_url: '',\r\n            tags: '',\r\n            unlist: false,\r\n            disableComments: false,\r\n            disableCritique: false,\r\n            nsfw: false,\r\n            copyrightOwner: false\r\n        };\r\n        self.genresArr = [];\r\n\r\n        self.runtime = {\r\n            hours: 0,\r\n            mins: 0,\r\n            secs: 0\r\n        };\r\n\r\n        self.maxDate = moment().toDate();\r\n\r\n        self.selectedGenre = null;\r\n\r\n        $rootScope.generateGenres().then(function (res) {\r\n            $rootScope.genresList = self.genresList = res;\r\n        });\r\n        $rootScope.generateTypes().then(function (res) {\r\n            $rootScope.typesList = self.typesList = res;\r\n        });\r\n        $rootScope.generateCountries().then(function (res) {\r\n            $rootScope.countryList = self.countryList = res;\r\n        });\r\n        $rootScope.generateLanguages().then(function (res) {\r\n            $rootScope.languageList = self.languageList = res;\r\n        });\r\n\r\n        self.runtimeToSeconds = function () {\r\n            self.newVideo.runTime = (self.runtime.hours * 3600) + (self.runtime.mins * 60) + self.runtime.secs;\r\n        };\r\n\r\n        self.getUserFilmPath = function () {\r\n            return self.newVideo.hosting_type === 'script' ? self.user.url_id + '/scripts/' : self.user.url_id + '/films/';\r\n        };\r\n\r\n        self.isURL = function (str) {\r\n            var urlRegex = '[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)';\r\n            var url = new RegExp(urlRegex, 'i');\r\n            return str.length < 2083 && url.test(str);\r\n        };\r\n\r\n        self.getThumbnailUrl = function (url) {\r\n            if (url != null && url != '') {\r\n                if (url.indexOf('youtu') != -1) {\r\n                    var video_id = url.indexOf('v=') != -1 ? url.split('v=')[1].split('&')[0] : url.split('be/')[1];\r\n                    self.newVideo.hosting_type = 'youtube';\r\n                    self.newVideo.hosting_id = video_id;\r\n                    return self.newVideo.thumbnail_url = 'https://img.youtube.com/vi/' + video_id + '/hqdefault.jpg';\r\n                } else if (url.indexOf('vimeo') != -1) {\r\n                    var video_id = url.split('.com/')[1];\r\n                    self.newVideo.hosting_type = 'vimeo';\r\n                    self.newVideo.hosting_id = video_id;\r\n                    $http.jsonp('https://api.vimeo.com/videos/' + video_id + '/pictures.json?callback=JSON_CALLBACK').then(function (res) {\r\n                        //$http.jsonp('http://www.vimeo.com/api/v2/video/' + video_id + '.json?callback=JSON_CALLBACK').then(function (res) {\r\n                        return self.newVideo.thumbnail_url = angular.isDefined(res.data[0].sizes[6])\r\n                            ? res.data[0].sizes[6] : angular.isDefined(res.data[0].sizes[5])\r\n                            ? res.data[0].sizes[5] : angular.isDefined(res.data[0].sizes[4])\r\n                            ? res.data[0].sizes[4] : res.data[0].sizes[3];\r\n                    });\r\n                } else if (url.indexOf('dailymotion') != -1) {\r\n                    var video_id = url.split('video/')[1].split('_')[0];\r\n                    self.newVideo.hosting_type = 'dailymotion';\r\n                    self.newVideo.hosting_id = video_id;\r\n                    $http.get('https://api.dailymotion.com/video/' + video_id + '?fields=thumbnail_large_url').then(function (res) {\r\n                        return self.newVideo.thumbnail_url = res.data.thumbnail_large_url;\r\n                    });\r\n                } else if (url.indexOf('youku') != -1) {\r\n                    self.newVideo.hosting_type = 'youku';\r\n                    self.newVideo.hosting_id = undefined;\r\n\r\n                } else if (url.indexOf('vine') != -1) {\r\n                    self.newVideo.hosting_type = 'vine';\r\n                    self.newVideo.hosting_id = undefined;\r\n                    $http.get('/utils/get-vine-data.php?url=' + url).then(function (res) {\r\n                        return self.newVideo.thumbnail_url = res.data;\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        self.validateNewVideoForm = function () {\r\n            var test = true;\r\n            var msg = 'Your project is missing:';\r\n            if (!self.newVideo.name.length) {\r\n                msg += 'Project Title, ';\r\n                $rootScope.toastMessage();\r\n                test = false;\r\n            }\r\n            if (self.uploadType == 2 && !self.newVideo.video_url.length) {\r\n                msg += 'Video URL, ';\r\n                test = false;\r\n            }\r\n            if (angular.isUndefined(self.genresArr) || (angular.isArray(self.genresArr) && !self.genresArr.length)) {\r\n                msg += 'Genres, ';\r\n                test = false;\r\n            }\r\n            if (angular.isUndefined(self.newVideo.type)) {\r\n                msg += 'Type, ';\r\n                test = false;\r\n            }\r\n            if (angular.isUndefined(self.newVideo.language)) {\r\n                msg += 'Language, ';\r\n                test = false;\r\n            }\r\n            if (self.newVideo.hosting_type !== 'script') {\r\n                if (self.newVideo.runTime == 0) {\r\n                    msg += 'Duration';\r\n                    test = false;\r\n                }\r\n            }\r\n            if (!test) {\r\n                $rootScope.toastMessage(msg);\r\n                alert(msg);\r\n            }\r\n            return test;\r\n        };\r\n\r\n        self.syncGenres = function (bool, item) {\r\n            if (bool) {\r\n                // add item\r\n                self.genresArr.push(item);\r\n            } else {\r\n                // remove item\r\n                for (var i = 0; i < self.genresArr.length; i++) {\r\n                    if (self.genresArr[i].id == item.id) {\r\n                        self.genresArr.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        self.isCheckedGenre = function (id) {\r\n            var match = false;\r\n            for (var i = 0; i < self.genresArr.length; i++) {\r\n                if (self.genresArr[i].id == id) {\r\n                    match = true;\r\n                }\r\n            }\r\n            return match;\r\n        };\r\n\r\n        self.getDefaultImage = function () {\r\n            return self.newVideo.hosting_type === 'script' ? 'https://cdn.filepicker.io/api/file/XFaspYLQTreMc63hx9ng' : 'https://getindiewise.com/assets/img/default_video_thumbnail.jpg'\r\n        };\r\n\r\n        self.submitNewVideo = function () {\r\n            if (!!self.validateNewVideoForm()) {\r\n                if (angular.isArray(self.genresArr) && self.genresArr.length) {\r\n                    self.newVideo.genres = _.pluck(self.genresArr, 'id');\r\n                }\r\n\r\n                var filmParams = {\r\n                    name: self.newVideo.name,\r\n                    description: self.newVideo.description,\r\n                    director: self.newVideo.director,\r\n                    writer: self.newVideo.writer,\r\n                    producers: self.newVideo.producers,\r\n                    keyCast: self.newVideo.keyCast,\r\n                    completionDate: moment({year: self.newVideo.completionDate}).startOf('year').format('YYYY-MM-DD HH:MM:SS'),\r\n                    owner_id: self.newVideo.owner,\r\n                    runTime: self.newVideo.runTime,\r\n                    video_url: self.newVideo.video_url,\r\n                    thumbnail_url: (self.newVideo.thumbnail_url === ''|| self.newVideo.thumbnail_url === null) ? self.getDefaultImage() : self.newVideo.thumbnail_url,\r\n                    hosting_type: self.newVideo.hosting_type,\r\n                    hosting_id: self.newVideo.hosting_id,\r\n                    tags: self.newVideo.tags,\r\n                    disableComments: self.newVideo.disableComments || false,\r\n                    disableCritique: self.newVideo.disableCritique || false,\r\n                    language_id: self.newVideo.language,\r\n                    filmingCountry_id: self.newVideo.filmingCountry,\r\n                    // originCountry: self.newVideo.originCountry,\r\n                    type_id: self.newVideo.type,\r\n                    unlist: self.newVideo.unlist,\r\n                    nsfw: self.newVideo.nsfw,\r\n                    copyrightOwner: self.newVideo.copyrightOwner,\r\n                    genres: self.newVideo.genres\r\n                };\r\n\r\n                DataService.save('projects', filmParams)\r\n                    .then(function (film) {\r\n                        console.log(film.data.data);\r\n                        $rootScope.toastMessage('Project Uploaded Successfully');\r\n                        // register Action\r\n                        $state.go('video', {url_id: film.data.data.url_id});\r\n                        //return film;\r\n                    }, function (err) {\r\n                        // console.log(err);\r\n                        alert('Failed to create new project, with error: ' + err.message);\r\n                    });\r\n\r\n            } else {\r\n                $rootScope.toastMessage('Please check the form!');\r\n            }\r\n        };\r\n\r\n\r\n        self.pickArtwork = function (){\r\n            filepickerService.pick(\r\n                {\r\n                    cropRatio: 4/3,\r\n                    mimetype: 'image/*',\r\n                    services: ['CONVERT', 'COMPUTER', 'FACEBOOK', 'GOOGLE_DRIVE', 'INSTAGRAM', 'URL'],\r\n                    conversions: ['crop', 'rotate', 'filter'],\r\n                    customSourcePath: self.user.url_id + '/films/'\r\n                },\r\n                function (Blob){\r\n                    self.newVideo.thumbnail_url = Blob.url + '?cache=true';\r\n                    $rootScope.$digest();\r\n                }\r\n            );\r\n        };\r\n\r\n\r\n        self.uploadArtwork = function (file) {\r\n            Upload.upload({\r\n                url: 'https://api.cloudinary.com/v1_1/indiewise/upload',\r\n                params: {upload_preset: 'dzachn6p'},\r\n                data: {file: file},\r\n                skipAuthorization: true  // `Authorization: Bearer <token>` will not be sent on this request.\r\n            }).then(function (resp) {\r\n                console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\r\n                self.newVideo.thumbnail_url = resp.data.secure_url;\r\n            }, function (resp) {\r\n                console.log('Error status: ' + resp.status);\r\n            }, function (evt) {\r\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n                console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\r\n            });\r\n        };\r\n\r\n\r\n        self.files = []; //JSON.parse($window.localStorage.getItem('files') || '[]');\r\n\r\n        self.pickFile = function () {\r\n\r\n            filepickerService.pick({\r\n                    mimetype: 'video/mp4',\r\n                    customSourcePath: self.user.url_id + self.newVideo.hosting_type === 'script' ? '/scripts/' : '/films/'\r\n                },\r\n                self.onSuccess\r\n            );\r\n        };\r\n\r\n        self.onSuccess = function (Blob) {\r\n            self.newVideo.hosting_type = self.newVideo.hosting_type === 'script' ? 'script' : 'HTML5';\r\n            self.newVideo.video_url = Blob.url + '?cache=true';\r\n            // self.files.push(Blob);\r\n            // $window.localStorage.setItem('files', JSON.stringify(self.files));\r\n        };\r\n    }\r\n\r\n    ProfileVideoEditCtrl.$inject = ['$rootScope', '$state', '$modal', 'UserActions', 'Project', 'DataService', 'anchorSmoothScroll', 'filepickerService', 'Upload', '_'];\r\n    function ProfileVideoEditCtrl($rootScope, $state, $modal, UserActions, Project, DataService, anchorSmoothScroll, filepickerService, Upload, _) {\r\n        var self = this;\r\n        self.project = Project.data.data;\r\n        self.uploadType = 2;\r\n        self.genresArr = self.project.genres;\r\n        self.saveComplete = false;\r\n        self.editedProject = angular.copy(self.project);\r\n        angular.extend(self.editedProject, {\r\n            type_id: self.project.type_id,\r\n            language_id: self.project.language_id,\r\n            filmingCountry_id: self.project.filmingCountry_id,\r\n            completionDate: moment(self.project.completionDate).year()\r\n        });\r\n        // console.log(self.editedProject);\r\n\r\n        if (self.project.runTime) {\r\n            var totalSeconds = self.project.runTime;\r\n            self.runtime = {};\r\n            self.runtime.hours = Math.floor(totalSeconds / 3600);\r\n            totalSeconds %= 3600;\r\n            self.runtime.mins = Math.floor(totalSeconds / 60);\r\n            self.runtime.secs = totalSeconds % 60;\r\n        }\r\n\r\n        if (angular.isString(self.project.video_url)) {\r\n            self.uploadType = 2;\r\n        }\r\n\r\n        $rootScope.generateGenres().then(function (res) {\r\n            $rootScope.genresList = self.genresList = res;\r\n        });\r\n        $rootScope.generateTypes().then(function (res) {\r\n            $rootScope.typesList = self.typesList = res;\r\n        });\r\n        $rootScope.generateCountries().then(function (res) {\r\n            $rootScope.countryList = self.countryList = res;\r\n        });\r\n        $rootScope.generateLanguages().then(function (res) {\r\n            $rootScope.languageList = self.languageList = res;\r\n        });\r\n\r\n        self.syncGenres = function (bool, item) {\r\n            if (bool) {\r\n                // add item\r\n                self.genresArr.push(item);\r\n                /*DataService.save('Genres', {project: self.editedProject.id, genre: item.id}, true, true)\r\n                 .then(function (res) {\r\n                 self.genresArr.push(res.data);\r\n                 });*/\r\n            } else {\r\n                // remove item\r\n                for (var i = 0; i < self.genresArr.length; i++) {\r\n                    if (self.genresArr[i].id == item.id) {\r\n                        DataService.delete('Genres', self.genresArr[i].id);\r\n                        self.genresArr.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        self.isCheckedGenre = function (id) {\r\n            var match = false;\r\n            for (var i = 0; i < self.genresArr.length; i++) {\r\n                if (self.genresArr[i].id == id) {\r\n                    match = true;\r\n                }\r\n            }\r\n            return match;\r\n        };\r\n\r\n        self.runtimeToSeconds = function () {\r\n            self.editedProject.runTime = self.project.runTime = (self.runtime.hours * 3600) + (self.runtime.mins * 60) + self.runtime.secs;\r\n        };\r\n\r\n        self.isURL = function (str) {\r\n            var urlRegex = '[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)';\r\n            var url = new RegExp(urlRegex, 'i');\r\n            return str.length < 2083 && url.test(str);\r\n        };\r\n\r\n        self.getDefaultImage = function () {\r\n            return self.editedProject.hosting_type === 'script' ? 'https://cdn.filepicker.io/api/file/XFaspYLQTreMc63hx9ng' : 'https://getindiewise.com/assets/img/default_video_thumbnail.jpg'\r\n        };\r\n\r\n        self.getThumbnailUrl = function (url) {\r\n            if (url != null && url != '') {\r\n                if (url.indexOf('youtu') != -1) {\r\n                    var video_id = url.split('v=')[1].split('&')[0];\r\n                    return self.editedProject.thumbnail_url = self.project.thumbnail_url = 'http://img.youtube.com/vi/' + video_id + '/mqdefault.jpg';\r\n                } else if (url.indexOf('vimeo') != -1) {\r\n                    var video_id = url.split('.com/')[1];\r\n                    $http.jsonp('http://www.vimeo.com/api/v2/video/' + video_id + '.json?callback=JSON_CALLBACK').then(function (res) {\r\n                        return self.editedProject.thumbnail_url = self.project.thumbnail_url = res.data[0].thumbnail_large;\r\n                    });\r\n                } else if (url.indexOf('dailymotion') != -1) {\r\n                    var video_id = url.split('video/')[1].split('_')[0];\r\n                    $http.get('https://api.dailymotion.com/video/' + video_id + '?fields=thumbnail_large_url').then(function (res) {\r\n                        return self.editedProject.thumbnail_url = self.project.thumbnail_url = res.data.thumbnail_large_url;\r\n                    });\r\n                } else if (url.indexOf('youku') != -1) {\r\n\r\n                } else if (url.indexOf('vine') != -1) {\r\n                    $http.get('api/utils/get-vine-data?url=' + url).then(function (res) {\r\n                        return self.editedProject.thumbnail_url = self.project.thumbnail_url = res.data;\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        self.pickArtwork = function (){\r\n            filepickerService.pick(\r\n                {\r\n                    cropRatio: 4/3,\r\n                    mimetype: 'image/*',\r\n                    services: ['CONVERT', 'COMPUTER', 'FACEBOOK', 'GOOGLE_DRIVE', 'INSTAGRAM', 'URL'],\r\n                    conversions: ['crop', 'rotate', 'filter'],\r\n                    customSourcePath: $rootScope.AppData.User.url_id + '/films/'\r\n                },\r\n                function (Blob){\r\n                    self.editedProject.thumbnail_url = Blob.url + '?cache=true';\r\n                    $rootScope.$digest();\r\n                }\r\n            );\r\n        };\r\n\r\n        self.uploadArtwork = function (file) {\r\n            Upload.upload({\r\n                url: 'https://api.cloudinary.com/v1_1/indiewise/upload',\r\n                params: {upload_preset: 'dzachn6p'},\r\n                data: {file: file},\r\n                skipAuthorization: true  // `Authorization: Bearer <token>` will not be sent on this request.\r\n            }).then(function (resp) {\r\n                console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\r\n                self.editedProject.thumbnail_url = resp.data.secure_url;\r\n                DataService.update('projects', self.editedProject.id, self.editedProject);\r\n            }, function (resp) {\r\n                console.log('Error status: ' + resp.status);\r\n            }, function (evt) {\r\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n                console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\r\n            });\r\n        };\r\n\r\n        self.updateProject = function () {\r\n            self.editedProject.genres = _.pluck(self.genresArr, 'id');\r\n            self.editedProject.completionDate = moment({year: self.editedProject.completionDate}).startOf('year').format('YYYY-MM-DD HH:mm:ss');\r\n            DataService.update('projects', self.editedProject.id, self.editedProject)\r\n                .then(function (res) {\r\n                    // console.log(res);\r\n                    self.saveComplete = true;\r\n                    // anchorSmoothScroll.scrollTo('success');\r\n                    $rootScope.toastMessage('Project Updated');\r\n                    $state.go('profile.videos');\r\n                });\r\n        };\r\n\r\n        /*self.deleteProject = function (ev) {\r\n         if ($rootScope.AppData.User && ($rootScope.AppData.User.id === self.project.owner.id)) {\r\n         var confirm = $modal.confirm()\r\n         .title('Would you like to delete your project?')\r\n         //.content('All of the banks have agreed to <span class=\"debt-be-gone\">forgive</span> you your debts.')\r\n         //.ariaLabel('Lucky day')\r\n         .targetEvent(ev)\r\n         .ok('Delete it!')\r\n         .cancel('Never mind');\r\n         $modal.show(confirm).then(function () {\r\n         //self.project.set('disableProject', true);\r\n         self.project.destroy({\r\n         success: function (myObject) {\r\n         // The object was deleted from the Parse Cloud.\r\n         $state.go('profile');\r\n         },\r\n         error: function (myObject, error) {\r\n         // The delete failed.\r\n         // error is a Parse.Error with an error code and message.\r\n         }\r\n         });\r\n         $state.go('profile');\r\n         }, function () {\r\n         //$scope.status = 'You decided to keep your debt.';\r\n         });\r\n         }\r\n         }*/\r\n\r\n    }\r\n\r\n    ProfilePlaylistsController.$inject = ['$rootScope', 'DataService', 'User', 'Playlists', 'UserActions', '_', '$interval', '$http'];\r\n    function ProfilePlaylistsController($rootScope, DataService, User, Playlists, UserActions, _, $interval, $http) {\r\n        var self = this;\r\n        self.user = User.data;\r\n        self.playlists = Playlists.data.playlists;\r\n        self.playlistItems = [];\r\n        var hasFave = _.findWhere(self.playlists, {name: 'Favorites', private: true});\r\n        self.selectedPlaylist = !!hasFave ? hasFave.id : self.playlists.length ? self.playlists[0].id : null;\r\n\r\n        self.loadPlaylistItems = function () {\r\n            DataService.collection('playlistItems', {playlist: self.selectedPlaylist, include: 'project.owner'})\r\n                .then(function (res) {\r\n                    // console.log(res);\r\n                    self.playlistItems = res.data.data;\r\n                })\r\n        };\r\n\r\n        self.removeItem = function (id) {\r\n            UserActions.checkAuth().then(function (res) {\r\n                if (res) {\r\n                    DataService.delete('PlaylistItem', id).then(function () {\r\n                        return self.playlists = _.reject(self.playlists, function (a) {\r\n                            return a.id === id;\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n        };\r\n\r\n        // autoload if preselect\r\n        if (angular.isString(self.selectedPlaylist)) {\r\n            self.loadPlaylistItems();\r\n        }\r\n    }\r\n\r\n    ProfileSettingsController.$inject = ['$rootScope', 'AuthService', 'User', 'Genres', 'UserTypes', 'DataService', 'anchorSmoothScroll', '_', '$window', '$intercom', '$mdDialog'];\r\n    function ProfileSettingsController($rootScope, AuthService, User, Genres, UserTypes, DataService, anchorSmoothScroll, _, $window, $intercom, $mdDialog) {\r\n        var self = this;\r\n        self.countries = [];\r\n        self.genresArr = [];\r\n        self.typesArr = [];\r\n        self.saveComplete = false;\r\n        self.updating = false;\r\n        User.dob = moment(User.dob).startOf('day').toDate();\r\n        User.settings = angular.isObject(User.settings) ? User.settings : JSON.parse(User.settings||'{}');\r\n        self.user = User;\r\n        self.genresArr = User.genres; //Genres.data.data;\r\n        self.typesArr = User.types;// UserTypes.data.data;\r\n        self.updateUser = _.throttle(updateUser, 1000);\r\n        var pwSetting = $window.localStorage.getItem('pwAllowPushNotifications');\r\n        self.notificationsActive = pwSetting !== 'undefined' && !!JSON.parse(pwSetting);\r\n        self.toggleNotifications = toggleNotifications;\r\n        self.requestVerificationEmail = requestVerificationEmail;\r\n        self.confirmTerminate = confirmTerminate;\r\n        self.verificationEmailSentMessage = false;\r\n\r\n        function toggleNotifications() {\r\n            $window.localStorage.setItem('pwAllowPushNotifications', self.notificationsActive);\r\n\r\n            if (!!self.notificationsActive) {\r\n                // subscribe device push notifications\r\n                if ($window.pwCanUseServiceWorkers() || angular.isDefined(window.safari)) {\r\n                    if ($window.chrome && $window.pushwoosh.isBrowserChrome()) {\r\n                        $window.pushwoosh.subscribeAtStart();\r\n                    } else {\r\n                        $window.pushwooshSubscribe();\r\n\r\n                        $window.pushwooshSetTags({\r\n                            id: self.user.id,\r\n                            urlId: self.user.url_id,\r\n                            username: self.user.email,\r\n                            firstName: self.user.firstName,\r\n                            lastName: self.user.lastName\r\n                        });\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!self.updating) {\r\n                var user = self.user;\r\n                self.updating = true;\r\n                user.genres = _.pluck(self.genresArr, 'id');\r\n                user.types = _.pluck(self.typesArr, 'id');\r\n                user.settings = JSON.stringify(user.settings);\r\n                AuthService.updateUser(user).then(function (res) {\r\n                    // console.log(res);\r\n                    res.data.data.dob = moment(res.data.data.dob).toDate();\r\n                    res.data.data.settings = JSON.parse(res.data.data.settings);\r\n                    AuthService.currentUser = self.user = res.data.data;\r\n                    res.data.data.name = res.data.data.fullName;\r\n                    $intercom.update(res.data.data);\r\n                    self.saveComplete = true;\r\n                    self.updating = false;\r\n                    anchorSmoothScroll.scrollTo('success');\r\n                    $rootScope.toastMessage('Profile Updated');\r\n                });\r\n            } else {\r\n                $rootScope.toastMessage('Please wait...');\r\n            }\r\n        }\r\n\r\n        function requestVerificationEmail() {\r\n            AuthService.requestVerification().then(function () {\r\n                self.verificationEmailSentMessage = true;\r\n            });\r\n        }\r\n\r\n        $rootScope.generateCountries().then(function (res) {\r\n            self.countries = res;\r\n        });\r\n\r\n        $rootScope.generateGenres().then(function (res) {\r\n            self.genresList = res;\r\n        });\r\n\r\n        $rootScope.generateTypes().then(function (res) {\r\n            self.typesList = res;\r\n        });\r\n\r\n        self.syncGenres = function (bool, item) {\r\n            if (bool) {\r\n                // add item\r\n                self.genresArr.push(item);\r\n            } else {\r\n                // remove item\r\n                for (var i = 0; i < self.genresArr.length; i++) {\r\n                    if (self.genresArr[i].id == item.id) {\r\n                        DataService.delete('Genres', self.genresArr[i].id);\r\n                        self.genresArr.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        self.isCheckedGenre = function (id) {\r\n            var match = false;\r\n            for (var i = 0; i < self.genresArr.length; i++) {\r\n                if (self.genresArr[i].id == id) {\r\n                    match = true;\r\n                }\r\n            }\r\n            return match;\r\n        };\r\n\r\n        self.syncTypes = function (bool, item) {\r\n            if (bool) {\r\n                // add item\r\n                self.typesArr.push(item);\r\n            } else {\r\n                // remove item\r\n                for (var i = 0; i < self.typesArr.length; i++) {\r\n                    if (self.typesArr[i].id == item.id) {\r\n                        DataService.delete('UserTypes', self.typesArr[i].id);\r\n                        self.typesArr.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        self.isCheckedType = function (id) {\r\n            var match = false;\r\n            for (var i = 0; i < self.typesArr.length; i++) {\r\n                if (self.typesArr[i].id == id) {\r\n                    match = true;\r\n                }\r\n            }\r\n            return match;\r\n        };\r\n        function confirmTerminate(ev) {\r\n            var confirm = $mdDialog.confirm()\r\n                .title('Terminate Account')\r\n                .textContent('Are you sure you want to terminate your account?')\r\n                .ariaLabel('Terminate Account')\r\n                .targetEvent(ev)\r\n                .ok('Yes')\r\n                .cancel('No');\r\n\r\n            $mdDialog.show(confirm).then(function() {\r\n                AuthService.deleteUser(self.user).then(function (res) {\r\n                    if(res.data.status) {\r\n                        AuthService.logout().then(function (res) {\r\n                            window.location.reload();\r\n                        });\r\n                    }\r\n                });\r\n            }, function() {\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    UserCtrl.$inject = ['$rootScope', 'DataService', 'User', 'UserStats', '$state', 'UserActions', '$modal', '_'];\r\n    function UserCtrl($rootScope, DataService, User, UserStats, $state, UserActions, $modal, _) {\r\n        var self = this;\r\n        self.user = User;\r\n        self.userStats = UserStats;\r\n        $rootScope.metadata.title = 'Profile: ' + self.user.firstName + ' ' + self.user.lastName;\r\n\r\n        self.showMessageDialog = function () {\r\n            ContactUserDialogController.$inject = ['$rootScope', '$scope', '$modalInstance', 'UserActions', 'DataService', 'recipient', '$timeout'];\r\n            function ContactUserDialogController($rootScope, $scope, $modalInstance, UserActions, DataService, recipient, $timeout) {\r\n\r\n\r\n                $scope.recipient = recipient;\r\n                $scope.model = {\r\n                    mySubject: $rootScope.AppData.User.fullName + ', ' + $scope.recipient.fullName,\r\n                    myMessage: null\r\n                };\r\n\r\n                $scope.postMessage = function () {\r\n                    UserActions.checkAuth().then(function (res) {\r\n                        if (res) {\r\n                            // create new conversation\r\n                            DataService.save('messages', {\r\n                                subject: $scope.model.mySubject,\r\n                                message: $scope.model.myMessage,\r\n                                recipients: new Array($scope.recipient.id)\r\n                            }).then(function (convo) {\r\n                                $scope.model.myMessage = null;\r\n                                $rootScope.toastMessage('Message sent!');\r\n                                // register Action\r\n                                //result.participants = $scope.recipient;\r\n                                $scope.closeDialog();\r\n\r\n                                // Creates Duplicate entry Error\r\n                                /*DataService.update('Conversation', convo.data.id, {\r\n                                 id: convo.data.id,\r\n                                 participants: [\r\n                                 {user: $rootScope.AppData.User.id},\r\n                                 {user: $scope.recipient.id}\r\n                                 ],\r\n                                 messages: [\r\n                                 {body: $scope.model.myMessage, from: $rootScope.AppData.User.id}\r\n                                 ]\r\n                                 }, true, true).then(function (convo) {\r\n\r\n                                 });*/\r\n                            });\r\n                        }\r\n                    }, function (err) {\r\n                        $rootScope.toastMessage('Message failed. Please log in!');\r\n                        //UserActions.loginModal();\r\n                    });\r\n                };\r\n\r\n                $scope.closeDialog = function () {\r\n                    $modalInstance.close(true);\r\n                };\r\n\r\n                $scope.cancel = function () {\r\n                    $modalInstance.dismiss('cancel');\r\n                };\r\n\r\n            }\r\n\r\n            UserActions.checkAuth().then(function (res) {\r\n                if (res) {\r\n                    $modal.open({\r\n                        templateUrl: 'common/contactUserDialog.html',\r\n                        resolve: {\r\n                            recipient: function () {\r\n                                return self.user;\r\n                            }\r\n                        },\r\n                        controller: ContactUserDialogController\r\n                    });\r\n                }\r\n            }, function (err) {\r\n                UserActions.loginModal();\r\n            });\r\n        };\r\n    }\r\n\r\n    UserAboutController.$inject = ['$rootScope', 'DataService', 'User', '$state', 'UserActions'];\r\n    function UserAboutController($rootScope, DataService, User, $state, UserActions) {\r\n        var self = this;\r\n        self.user = User;\r\n        // console.log(self.user);\r\n    }\r\n\r\n    UserVideosController.$inject = ['$rootScope', 'DataService', 'User', 'Videos', '$modal', 'UserActions', '_'];\r\n    function UserVideosController($rootScope, DataService, User, Videos, $modal, UserActions, _) {\r\n        var self = this;\r\n        self.user = User;\r\n        self.projects = Videos.data;\r\n\r\n        self.deleteProject = function (videoId) {\r\n            UserActions.checkAuth().then(function (res) {\r\n                if (res) {\r\n                    var modalInstance = $modal.open({\r\n                        templateUrl: 'common/confirmDialog.html',\r\n                        controller: ['$scope', '$modalInstance', function ($scope, $modalInstance) {\r\n                            $scope.ok = function () {\r\n                                $modalInstance.close(true);\r\n                            };\r\n\r\n                            $scope.cancel = function () {\r\n                                $modalInstance.dismiss('cancel');\r\n                            };\r\n                        }],\r\n                        size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\r\n                        keyboard: true\r\n                    });\r\n                    modalInstance.result.then(function () {\r\n                        DataService.delete('projects', videoId).then(function () {\r\n                            self.projects.data = _.reject(self.projects.data, function (a) {\r\n\r\n                                return a.id === videoId;\r\n                            });\r\n                        });\r\n                    }, function () {\r\n                        // console.info('Modal dismissed at: ' + new Date());\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    UserCritiquesController.$inject = ['$rootScope', 'User', 'Critiques', 'Critiqued'];\r\n    function UserCritiquesController($rootScope, User, Critiques, Critiqued) {\r\n        var self = this;\r\n        self.user = User;\r\n        self.critiques = Critiques.data.data;\r\n        self.critiqued = Critiqued.data.data;\r\n    }\r\n\r\n    UserReactionsController.$inject = ['$rootScope', 'User', 'Reactions', 'Reacted', '_'];\r\n    function UserReactionsController($rootScope, User, Reactions, Reacted, _) {\r\n        var self = this;\r\n        self.user = User;\r\n        self.reactions = Reactions.data.data;\r\n        self.reacted = Reacted.data.data;\r\n\r\n        self.getEmoticonByEmotion = function (emotion) {\r\n            var reactions = $rootScope.generateReactions();\r\n            return _.findWhere(reactions, {emotion: emotion});\r\n        };\r\n\r\n    }\r\n\r\n    UserAwardsController.$inject = ['$rootScope', 'DataService', 'User', 'Awards', 'Nominations', 'Nominated'];\r\n    function UserAwardsController($rootScope, DataService, User, Awards, Nominations, Nominated) {\r\n        var self = this;\r\n        self.user = User;\r\n        self.awards = Awards.data.data;\r\n        self.nominations = Nominations.data.data;\r\n        self.nominated = Nominated.data.data;\r\n    }\r\n\r\n    MessagesCtrl.$inject = ['$rootScope', '$scope', 'Conversations', 'DataService', '$window', '$modal', 'UserActions', '$timeout', '$q', '_'];\r\n    function MessagesCtrl($rootScope, $scope, Conversations, DataService, $window, $modal, UserActions, $filter, $q, _) {\r\n        $rootScope.metadata.title = 'Messages';\r\n        var self = this;\r\n        self.selectedConvo = null;\r\n        self.newConvo = null;\r\n        self.conversations = Conversations.data.conversations;\r\n        self.newMode = false;\r\n        self.newConversation = newConversation;\r\n        self.fetchConvos = fetchConvos;\r\n        self.querySearch = querySearch;\r\n        self.leaveConvo = leaveConvo;\r\n        self.doSendOnEnter = doSendOnEnter;\r\n        self.postReply = postReply;\r\n        self.selectConvo = selectConvo;\r\n        self.getParticipantById = getParticipantById;\r\n        self.myReply = null;\r\n        self.sendOnEnter = $window.localStorage.sendOnEnter ? JSON.parse($window.localStorage.sendOnEnter) : true;\r\n        self.inboxConvos = {};\r\n        self.convoMessages = {};\r\n        self.selectedConvoLoaded = false;\r\n        self.viewportHeight = { height: 500 + 'px' };\r\n\r\n        function selectConvo(convo) {\r\n            self.newMode = false;\r\n            self.selectedConvoLoaded = false;\r\n            self.selectedConvo = convo;\r\n            self.currentParticipants = convo.participants;\r\n            DataService.item('messages', convo.id).then(function (msgs) {\r\n                // console.log('Messages: ', msgs.data);\r\n                self.messages = msgs.data.conversation.messages;\r\n\r\n                self.convoMessages = {\r\n                    first: 1,\r\n                    data: [],\r\n                    meta: {\r\n                        pagination: {\r\n                            current_page: 1\r\n                        }\r\n                    },\r\n                    get: function (index, count, success) {\r\n                        console.log('index = ' + index + '; count = ' + count);\r\n                        var start = index;\r\n                        var end = Math.min(index + count - 1, this.first);\r\n                        if (this.meta.pagination.total_pages >= this.meta.pagination.current_page) {\r\n                            this.meta.pagination.current_page++;\r\n                        }\r\n                        DataService.collection('messages/' + self.selectedConvo.id + '/messages', {per_page: count, page: this.meta.pagination.current_page})\r\n                            .then(function(response) {\r\n                                self.convoMessages.data = _.union(self.convoMessages.data, response.data.data);\r\n                                angular.extend(self.convoMessages.meta, response.data.meta);\r\n                            })\r\n                            .then(function() {\r\n                                console.log(self.convoMessages);\r\n                                // reverse logic\r\n                                var result = [];\r\n                                if (start <= end) {\r\n                                    for (var i = start; i <= end; i++) {\r\n                                        var serverDataIndex = /*(self.convoMessages.meta.pagination.current_page > 1) ? 0 :*/ (-1) * i + self.convoMessages.first;\r\n                                        var item = self.convoMessages.data[serverDataIndex];\r\n                                        if (item) {\r\n                                            result.push(item);\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                success(result);\r\n                            });\r\n                    }\r\n                };\r\n                self.selectedConvoLoaded = true;\r\n            });\r\n        }\r\n\r\n        function doSendOnEnter() {\r\n            if (self.sendOnEnter && self.myReply) {\r\n                self.newMode ? self.postNewMsg() : self.postReply();\r\n            }\r\n        }\r\n\r\n        function postReply() {\r\n            if (self.myReply) {\r\n                if (self.newMode) {\r\n                    return self.postNewMsg();\r\n                }\r\n\r\n                UserActions.checkAuth().then(function (res) {\r\n                    if (res) {\r\n                        var reply = self.myReply;\r\n                        self.myReply = null;\r\n                        DataService.update('messages', self.selectedConvo.id, {message: reply})\r\n                            .then(function (result) {\r\n                                // self.adapter.append([result.data.message]);\r\n                                self.convoMessages.data.push(result.data.message);\r\n                                $scope.adapter.append([result.data.message]);\r\n                                // update convos\r\n                                self.messages.push(result.data.message);\r\n                                self.fetchConvos();\r\n\r\n                            }, function (response) {\r\n                                self.reply = reply;\r\n                            })\r\n                            .then(function () {\r\n                                // scroll to bottom of viewport\r\n                                var viewport = angular.element('.viewport.main-comment');\r\n                                viewport.scrollTop(viewport.prop(\"scrollHeight\"));\r\n                            });\r\n                    }\r\n                }, function (err) {\r\n                    UserActions.loginModal();\r\n                });\r\n            }\r\n        }\r\n\r\n        function newConversation() {\r\n            self.newMode = true;\r\n            self.selectedConvo = {\r\n                participants: [],\r\n                body: ''\r\n            };\r\n\r\n            self.postNewMsg = postNewMsg;\r\n\r\n            function postNewMsg() {\r\n                DataService.save('messages', {\r\n                    subject: _.pluck(self.selectedConvo.participants, 'fullName').toString() + ', ' + $rootScope.AppData.User.fullName,\r\n                    message: self.myReply,\r\n                    recipients: _.pluck(self.selectedConvo.participants, 'id')\r\n                }).then(function (response) {\r\n                    self.myReply = null;\r\n                    $rootScope.toastMessage('Message sent!');\r\n                    fetchConvos().then(function (conversations) {\r\n                        selectConvo(_.findWhere(conversations, {id: response.data.id}));\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Search for contacts.\r\n         */\r\n        function querySearch(query) {\r\n            return DataService.collection('users', { search: query, notUsers: $rootScope.AppData.User.id }).then(function (response) {\r\n                return response.data.data;\r\n            });\r\n        }\r\n\r\n        function fetchConvos() {\r\n            return DataService.collection('messages').then(function (result) {\r\n                return self.conversations = result.data.conversations;\r\n            });\r\n        }\r\n\r\n        function leaveConvo() {\r\n            // TODO replacve confirm dialog\r\n            var confirm = $modal.confirm()\r\n                .title('Leave Conversation?')\r\n                //.textContent('Are you sure you want to delete this conversation?')\r\n                //.ariaLabel('Lucky day')\r\n                //.targetEvent(ev)\r\n                .ok('Yes')\r\n                .cancel('No');\r\n            $modal.show(confirm).then(function () {\r\n                var me = $rootScope.AppData.User.id;\r\n                var message = new Parse.Object('Message');\r\n                message.set('body', me.first_name + ' ' + me.last_name + ' left the conversation...');\r\n                message.set('parent', {\r\n                    __type: 'Pointer',\r\n                    className: 'Conversation',\r\n                    objectId: self.selectedConvo.id\r\n                });\r\n                message.set('from', $rootScope.AppData.User.id);\r\n                message.save().then(function (result) {\r\n                    var relParticipants = self.selectedConvo.relation('participants');\r\n                    relParticipants.remove(me);\r\n\r\n                    self.selectedConvo.set('updatedAt', moment().toDate());\r\n                    self.selectedConvo.save().then(function () {\r\n                        self.myReply = null;\r\n                        self.messages = [];\r\n                        self.newMode = false;\r\n                        self.selectedConvo = null;\r\n                        self.currentParticipants = null;\r\n\r\n                        // Refresh List\r\n                        fetchConvos()\r\n                    });\r\n                });\r\n            }, function () {\r\n            });\r\n        }\r\n\r\n        function getParticipantById(convo, userId) {\r\n            return _.findWhere(convo.participants, {user_id: userId});\r\n        }\r\n    }\r\n\r\n    NotificationsCtrl.$inject = ['$rootScope', 'UserActions', '_'];\r\n    function NotificationsCtrl($rootScope, UserActions, _) {\r\n        var self = this;\r\n        self.refresh = function () {\r\n            //$rootScope.getFlatNotificationsFeed();\r\n        };\r\n\r\n        self.markAllAsRead = function () {\r\n            /*$rootScope.getNewToken('flat', $rootScope.AppData.User.id).then(function (token) {\r\n             var feed = window.StreamClient.feed('flat_notifications', $rootScope.AppData.User.id, token);\r\n             feed.get({limit: 20, mark_read: true}, function (a) {\r\n             _.each($rootScope.AppData.NotificationsFeed.list, function (n) {\r\n             n.is_read = true;\r\n             });\r\n             $rootScope.AppData.NotificationsFeed.unread = 0;\r\n             })\r\n             });*/\r\n        };\r\n\r\n        self.markAsRead = function (n) {\r\n            /*$rootScope.getNewToken('flat', $rootScope.AppData.User.id).then(function (token) {\r\n             var feed = window.StreamClient.feed('flat_notifications', $rootScope.AppData.User.id, token);\r\n             feed.get({limit: 5, mark_read: [n.id]}, function (a) {\r\n             n.is_read = true;\r\n             --$rootScope.AppData.NotificationsFeed.unseen;\r\n             --$rootScope.AppData.NotificationsFeed.unread;\r\n             return n;\r\n             })\r\n             });*/\r\n        };\r\n\r\n        self.refresh();\r\n    }\r\n\r\n    ContactPageCtrl.$inject = ['$rootScope', 'DataService', '$sce', '_'];\r\n    function ContactPageCtrl($rootScope, DataService, $sce, _) {\r\n        var self = this;\r\n        self.emails = [\r\n            {\r\n                title: 'Technical Support',\r\n                address: 'support@getindiewise.com',\r\n                description: 'For all your Tech Support Needs and Issues.'\r\n            },\r\n            {\r\n                title: 'SafeGuard',\r\n                address: 'safeguard@getindiewise.com',\r\n                description: 'IndieWise cares about the safety and well-being of its users. Contact us immediately, if you come across any inappropriate content on the site. This includes, but is not limited to: content that is Excessively Violent, Pornographic, Racially Offensive, Unlawful, of a Bullying Nature, Directly Harmful to any Individual, Copyright Infringement, Spam, etc.'\r\n            },\r\n            {\r\n                title: 'Marketing',\r\n                address: 'marketing@getindiewise.com',\r\n                description: 'Would you like to advertise your company to our vast and diverse audience? Would you like a featured listing of your film at the top of our Homepage for all to see? Reach out today!'\r\n            },\r\n            {\r\n                title: 'Awards',\r\n                address: 'awards@getindiewise.com',\r\n                description: 'So you have such an amazing project, that 5 or more Users felt like you deserve an Award for it! Congrats! We can help!'\r\n            },\r\n            {\r\n                title: 'Public Relations',\r\n                address: 'pr@getindiewise.com',\r\n                description: 'Reach out for any press and/or media inquiries. Also let us know if you’d like to be featured in our bi-weekly newsletter. Also stay tuned for important announcements and updates!'\r\n            },\r\n            {\r\n                title: 'Career Center',\r\n                address: 'careers@getindiewise.com',\r\n                description: 'Interested in joining Team IndieWise? Let us know! There are several internship opportunities available.'\r\n            },\r\n            {\r\n                title: 'Become a Sponsor',\r\n                address: 'sponsor@getindiewise.com',\r\n                description: 'We’ve reserved a unique spot on our homepage to showcase our amazing sponsors. If you’re interested in becoming a sponsor of IndieWise, let us know!'\r\n            },\r\n            {\r\n                title: 'Invest in IndieWise',\r\n                address: 'investors@getindiewise.com',\r\n                description: 'So you’d like to take the bold step of investing in IndieWise! Great choice. Let’s talk!'\r\n            },\r\n            {\r\n                title: 'Register for IndieWise Convention (JULY 28-30, 2017)',\r\n                address: 'convention@getindiewise.com',\r\n                description: 'Register for our Annual Convention, in Miami, FL! Registration opens on JAN 2, 2017. Over 10,000 Filmmakers from 140+ Countries will be in attendance, as we provide you with 3 days of interactive workshops, educational seminars, film screenings, VIP Receptions, a Yacht Party, and a Closing Gala.<br>Regular 3- Day Package: $150  |  VIP 3-Day Package (Including Yacht Party): $250 (450 Tickets max. To Be Sold)'\r\n            },\r\n            {\r\n                title: 'Feedback Center',\r\n                address: 'feedback@getindiewise.com',\r\n                description: 'We welcome any feedback you have, to help us to provide you with the very best experience! Tell us!'\r\n            },\r\n        ];\r\n        self.selectedEmail = _.contains(_.pluck(self.emails, 'address'), $rootScope.$stateParams.email) ? _.findWhere(self.emails, { address: $rootScope.$stateParams.email}) : null;\r\n        self.description = '';\r\n        self.getDescription = function () {\r\n            self.description = angular.isObject(self.selectedEmail) ? $sce.trustAsHtml(self.selectedEmail.description) : $sce.trustAsHtml('');\r\n        };\r\n        self.getDescription();\r\n\r\n        self.form = {\r\n            to: '',\r\n            name: '',\r\n            email: '',\r\n            subject: '',\r\n            message: ''\r\n        };\r\n\r\n        self.submitForm = function () {\r\n            self.form.to = self.selectedEmail.address;\r\n            DataService.mail('contact', self.form).then(function (res) {\r\n                $rootScope.toastMessage('Message Sent, Thank you!');\r\n                self.form = {\r\n                    to: '',\r\n                    name: '',\r\n                    email: '',\r\n                    subject: '',\r\n                    message: ''\r\n                };\r\n            });\r\n        }\r\n    }\r\n})\r\n();","(function () {\r\n    'use strict';\r\n    var HomeController = (function () {\r\n        function HomeController($rootScope) {\r\n            $rootScope.metadata.title = 'Home';\r\n            this.type = 'grid-default';\r\n        }\r\n        return HomeController;\r\n    }());\r\n    HomeController.$inject = ['$rootScope'];\r\n    angular.module('IndieWise.home', [])\r\n        .controller('HomeCtrl', HomeController);\r\n})();\r\n//# sourceMappingURL=home.js.map","(function () {\r\n    'use strict';\r\n\r\n    /*interface ProjectListInterface {\r\n     sort: string;\r\n     perPage: number;\r\n     type: string;\r\n     icon: string;\r\n     title: string;\r\n     tip: string;\r\n     field: string;\r\n     projects: any[];\r\n     refInterval: any;\r\n     }*/\r\n\r\n    class ProjectsListController {\r\n        sort: string;\r\n        perPage: number;\r\n        type: string;\r\n        icon: string;\r\n        title: string;\r\n        tip: string;\r\n        field: string;\r\n        projects: any[];\r\n        refInterval: any;\r\n\r\n        // static $inject = ['DataService', '$window', '$interval'];\r\n        /* @ngInject */\r\n        constructor(DataService: any, $window: any, $interval: any) {\r\n            this.type = 'grid-default';\r\n\r\n            switch (this.sort) {\r\n                case 'rating':\r\n                    this.icon = 'fa fa-star';\r\n                    this.title = 'Highest Rated';\r\n                    this.tip = 'Top videos ranked according to IndieWise Average';\r\n                    this.field = 'topRating';\r\n                    break;\r\n                case 'trending':\r\n                    this.icon = 'fa fa-line-chart';\r\n                    this.title = 'Trending';\r\n                    this.tip = 'Top videos ranked according to number of Reactions received';\r\n                    this.field = 'reactions_count';\r\n                    break;\r\n                case 'awards':\r\n                    this.icon = 'fa fa-trophy';\r\n                    this.title = 'Award-Winning';\r\n                    this.tip = 'Top videos ranked according to number of Award Wins';\r\n                    this.field = 'wins_count';\r\n                    break;\r\n                case 'recent':\r\n                    this.icon = 'fa fa-plus';\r\n                    this.title = 'Recently Added';\r\n                    this.tip = '';\r\n                    this.field = 'created_at';\r\n                    break;\r\n            }\r\n\r\n            this.refresh(DataService);\r\n            this.refInterval = $interval(this.refresh, 300000);\r\n\r\n            $window.onfocus = function () {\r\n                //do something\r\n            };\r\n\r\n            $window.onblur = function () {\r\n                // console.log('Refresh Stopped');\r\n                $interval.cancel(this.refInterval);\r\n            };\r\n        }\r\n\r\n        refresh(DataService: any) {\r\n            let self = this;\r\n            DataService.collection('projects', {sort: this.field, per_page: this.perPage}).then(function (result) {\r\n                self.projects = result.data;\r\n            });\r\n        };\r\n    }\r\n\r\n    ProjectsListController.$inject = ['DataService', '$window', '$interval'];\r\n\r\n    angular.module('IndieWise.home')\r\n        .component('homeProjectsList', {\r\n            templateUrl: 'home/view/home-projects-list.html',\r\n            controller: ProjectsListController,\r\n            bindings: {sort: '@', perPage: '<', type: '='}\r\n        });\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('IndieWise.browse', [])\r\n        .controller('BrowseCtrl', BrowseController);\r\n\r\n    BrowseController.$inject = ['$scope', '$rootScope', '$state', 'DataService', '$q', '$timeout', '$modal', '$mdSidenav', '_'];\r\n    function BrowseController($scope, $rootScope, $state, DataService, $q, $timeout, $modal, $mdSidenav, _) {\r\n        $rootScope.metadata.title = 'Browse';\r\n        var self = this;\r\n        self.isOpen = false;\r\n        self.loading = false;\r\n        self.selectedGenres = [];\r\n        self.selectedTypes = [];\r\n        self.films = [];\r\n        self.arrs = {\r\n            genres: [],\r\n            types: []\r\n        };\r\n        self.filters = {\r\n            sort: $rootScope.$stateParams.sort || 'created_at',\r\n            genres: $rootScope.$stateParams.genres || undefined,\r\n            type: $rootScope.$stateParams.types || undefined,\r\n            search: $rootScope.$stateParams.q || undefined,\r\n            page: 1\r\n        };\r\n        $rootScope.AppData.searchText = $rootScope.$stateParams.q;\r\n\r\n        $rootScope.generateTypes().then(function (types) {\r\n            var d = $q.defer();\r\n\r\n            self.arrs.types = angular.isArray(self.selectedTypes) && self.selectedTypes.length ? self.selectedTypes : types;\r\n            return d.promise;\r\n        });\r\n\r\n        $rootScope.generateGenres().then(function (genres) {\r\n            var d = $q.defer();\r\n            self.arrs.genres = angular.isArray(self.selectedGenres) && self.selectedGenres.length ? self.selectedGenres : genres;\r\n            return d.promise;\r\n        });\r\n\r\n        self.refresh = function () {\r\n            $q.all([$rootScope.generateTypes(), $rootScope.generateGenres()]).then(function (values) {\r\n                self.filters.sort = $rootScope.$stateParams.sort || 'recent';\r\n                self.search();\r\n            });\r\n        };\r\n\r\n        self.search = function () {\r\n            self.loading = true;\r\n            var filterField = '';\r\n            switch (self.filters.sort) {\r\n                case 'trending':\r\n                    filterField = 'reactions_count';\r\n                    break;\r\n                case 'rating':\r\n                    filterField = 'iwRating';\r\n                    break;\r\n                case 'awards':\r\n                    filterField = 'wins_count';\r\n                    break;\r\n                case 'recent':\r\n                default:\r\n                    filterField = 'created_at';\r\n                    break;\r\n            }\r\n\r\n            $rootScope.AppData.searchText = $rootScope.$stateParams.q = self.filters.search || undefined;\r\n            DataService.collection('projects', {\r\n                sort: filterField,\r\n                order: 'DESC',\r\n                types: _.pluck(self.selectedTypes, 'id').toString(),\r\n                genres: _.pluck(self.selectedGenres, 'id').toString(),\r\n                search: self.filters.search || undefined,\r\n                per_page: 50,\r\n                page: self.filters.page\r\n            }).then(function (res) {\r\n                self.pagination = res.data.meta.pagination;\r\n                return self.films = res.data.data;\r\n            }).then(function () {\r\n                self.loading = false;\r\n            });\r\n\r\n\r\n            $scope.$broadcast('scroll.refreshComplete');\r\n        };\r\n\r\n        self.loadMore = function () {\r\n            if (self.loading) {\r\n                $rootScope.toastMessage('Please wait...');\r\n            }\r\n\r\n            self.loading = true;\r\n            var filterField = '';\r\n            switch (self.filters.sort) {\r\n                case 'trending':\r\n                    filterField = 'reactions_count';\r\n                    break;\r\n                case 'rating':\r\n                    filterField = 'iwRating';\r\n                    break;\r\n                case 'awards':\r\n                    filterField = 'wins_count';\r\n                    break;\r\n                case 'recent':\r\n                default:\r\n                    filterField = 'created_at';\r\n                    break;\r\n            }\r\n\r\n            DataService.collection('projects', {\r\n                sort: filterField,\r\n                order: 'DESC',\r\n                types: _.pluck(self.selectedTypes, 'id').toString(),\r\n                genres: _.pluck(self.selectedGenres, 'id').toString(),\r\n                search: self.filters.search || undefined,\r\n                per_page: 50,\r\n                page: ++self.filters.page\r\n            }).then(function (res) {\r\n                return self.films = _.union(self.films, res.data.data);\r\n            }).then(function () {\r\n                self.loading = false;\r\n            });\r\n        };\r\n\r\n        self.selectGenres = function (genre) {\r\n            var exists = _.findWhere(self.selectedGenres, {id: genre.id});\r\n            !!exists ? self.selectedGenres = _.reject(self.selectedGenres, genre) : self.selectedGenres.push(genre);\r\n            self.search();\r\n        };\r\n\r\n        self.selectTypes = function (type) {\r\n            var exists = _.find(self.selectedTypes, {id: type.id});\r\n            !!exists ? self.selectedTypes = _.reject(self.selectedTypes, type) : self.selectedTypes.push(type);\r\n            self.search();\r\n        };\r\n\r\n        self.filterBy = function (filter) {\r\n            self.search();\r\n        };\r\n\r\n        self.toggleFilterNav = function () {\r\n            $mdSidenav('filterNav')\r\n                .toggle()\r\n                .then(function () {\r\n\r\n                });\r\n\r\n        };\r\n\r\n        /*$scope.$watch('filters.search', function (newValue, oldValue) {\r\n         debugger;\r\n         });*/\r\n\r\n        self.refresh();\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('IndieWise.latest', [])\r\n        .controller('LatestCtrl', LatestController);\r\n\r\n    LatestController.$inject = ['$rootScope', '$scope', 'DataService', '$timeout', '$interval'];\r\n    function LatestController($rootScope, $scope, DataService, $timeout, $interval) {\r\n        $rootScope.metadata.title = 'Latest';\r\n        var self = this;\r\n\r\n        self.init = function () {\r\n            DataService.collection('reactions/latest').then(function (res) {\r\n                self.reactions = res.data;\r\n            });\r\n            DataService.collection('nominations/latest').then(function (res) {\r\n                self.nominations = res.data;\r\n            });\r\n            DataService.collection('critiques/latest').then(function (res) {\r\n                self.critiques = res.data;\r\n            });\r\n        };\r\n\r\n        self.init();\r\n        self.refInterval = $interval(self.init, 10000);\r\n\r\n        $scope.$on('$destroy', function () {\r\n            $interval.cancel(self.refInterval);\r\n        });\r\n\r\n        $timeout(jQuery(document).foundation(), 0);\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('IndieWise.winners', [])\r\n        .controller('WinnersCtrl', WinnersController);\r\n\r\n    WinnersController.$inject = ['$rootScope', '$scope', 'DataService'];\r\n    function WinnersController($rootScope, $scope, DataService) {\r\n        var self = this;\r\n        self.awards = [];\r\n        self.date = moment().subtract(1, 'months').date(1).startOf('day').format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        self.fetchWinners = fetchWinners;\r\n\r\n        function fetchWinners() {\r\n            DataService.collection('winners', {\r\n                date_start: self.date,\r\n                date_end: moment(self.date).endOf('month').format('YYYY-MM-DD HH:mm:ss')\r\n            }).then(function (response) {\r\n                self.awards = response.data.Awards;\r\n            });\r\n        }\r\n\r\n        // Init\r\n        fetchWinners();\r\n    }\r\n})();\r\n","/**\r\n * Created by Jerez Bain on 9/14/2015.\r\n */\r\n(function () {\r\n    'use strict';\r\n    angular.module('IndieWise.directives', [])\r\n        .directive('layerSlider', ['$rootScope', '$timeout', 'DataService', '$q', function ($rootScope, $timeout, DataService, $q) {\r\n            return {\r\n                restrict: 'E',\r\n                transclude: true,\r\n                templateUrl: 'directives/layerSlider.html',\r\n                scope: {},\r\n                link: function (scope, el, attrs) {\r\n                    scope.BASE = BASE || '/';\r\n                    /*var a = DataService.collection('users/count').then(function (res) {\r\n                        scope.users = res.data;\r\n                    });*/\r\n\r\n                    /*var b = DataService.collection('projects/count').then(function (res) {\r\n                        scope.projects = res.data;\r\n                    });*/\r\n\r\n                    var b = DataService.collection('projects', { random: true, per_page: 3}).then(function (res) {\r\n                        scope.projects = res.data;\r\n                    });\r\n\r\n                    $q.all([b]).then(function () {\r\n                        $timeout(function () {\r\n                            // jQuery('#slippry').slippry();\r\n                            jQuery(\"#layerslider\").layerSlider({\r\n                                responsive: true,\r\n                                // responsiveUnder: 950,\r\n                                slideDelay: 5000,\r\n                                layersContainer: 950,\r\n                                skin: 'noskin',\r\n                                hoverPrevNext: false,\r\n                                skinsPath: BASE + 'assets/layerslider/skins/'\r\n                            });\r\n                        }, 0)\r\n\r\n                    });\r\n                }\r\n            }\r\n        }])\r\n        .directive('premiumCarousel', ['$rootScope', '$state', '$timeout', 'DataService', function ($rootScope, $state, $timeout, DataService) {\r\n            return {\r\n                restrict: 'E',\r\n                replace: true,\r\n                //transclude: true,\r\n                templateUrl: 'directives/featured-area.html',\r\n                scope: {},\r\n                link: function (scope, el, attrs) {\r\n                    DataService.collection(\"projects\", { random: true, per_page: 3 }).then(function (result) {\r\n                        scope.featuredFilms = result.data;\r\n                        // console.log(\"featuredFilms: \", scope.featuredFilms);\r\n                    }).then(function () {\r\n                        $timeout(function () {\r\n                            // console.log('run owl');\r\n                            //Premium carousel\r\n                            var carouselEl = jQuery('#owl-featured');\r\n                            carouselEl.each(function () {\r\n                                var owl = jQuery(this);\r\n                                jQuery(\".prev\").on('click', function () {\r\n                                    carouselEl.trigger('prev.owl.carousel');\r\n                                });\r\n\r\n                                jQuery(\".next\").on('click', function () {\r\n                                    carouselEl.trigger('next.owl.carousel');\r\n                                });\r\n                                var loopLength = owl.data('car-length');\r\n                                var divLength = jQuery(this).find(\"div.item\").length;\r\n                                if (divLength > loopLength) {\r\n                                    owl.owlCarousel({\r\n                                        dots: owl.data(\"dots\"),\r\n                                        items: owl.data(\"items\"),\r\n                                        slideBy: owl.data(\"slideby\"),\r\n                                        center: owl.data(\"center\"),\r\n                                        loop: owl.data(\"loop\"),\r\n                                        margin: owl.data(\"margin\"),\r\n                                        nav: owl.data(\"nav\"),\r\n                                        autoplay: owl.data(\"autoplay\"),\r\n                                        autoplayTimeout: owl.data(\"autoplay-timeout\"),\r\n                                        autoWidth: owl.data(\"auto-width\"),\r\n                                        autoHeight: owl.data(\"auto-Height\"),\r\n                                        merge: owl.data(\"merge\"),\r\n                                        responsive: {\r\n                                            0: {\r\n                                                items: owl.data(\"responsive-small\"),\r\n                                                nav: false\r\n                                            },\r\n                                            600: {\r\n                                                items: owl.data(\"responsive-medium\"),\r\n                                                nav: false\r\n                                            },\r\n                                            1000: {\r\n                                                items: owl.data(\"responsive-large\"),\r\n                                                nav: false\r\n                                            },\r\n                                            1900: {\r\n                                                items: owl.data(\"responsive-xlarge\"),\r\n                                                nav: false\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                                } else {\r\n                                    owl.owlCarousel({\r\n                                        dots: false,\r\n                                        items: owl.data(\"items\"),\r\n                                        loop: false,\r\n                                        margin: owl.data(\"margin\"),\r\n                                        autoplay: false,\r\n                                        autoplayHoverPause: true,\r\n                                        responsiveClass: true,\r\n                                        autoWidth: owl.data(\"auto-width\"),\r\n                                        autoHeight: owl.data(\"auto-Height\"),\r\n                                    });\r\n                                }\r\n                            });\r\n                        }, 300);\r\n                    });\r\n\r\n                    scope.isMobile = $rootScope.isMobile;\r\n\r\n                }\r\n            }\r\n        }])\r\n        .directive('watchingCarousel', ['$rootScope', '$timeout', '$interval', 'DataService', function ($rootScope, $timeout, $interval, DataService) {\r\n            return {\r\n                restrict: 'E',\r\n                replace: true,\r\n                templateUrl: 'directives/people-watching.html',\r\n                scope: {},\r\n                link: function (scope, el, attrs) {\r\n                    scope.getWatchedList = function () {\r\n                        DataService.collection('projects/watched').then(function (result) {\r\n                            scope.watched = result.data;\r\n                            // console.log('watched');\r\n                            // console.log(scope.watched);\r\n                            $timeout(function () {\r\n                                //console.log('run owl');\r\n                                //Premium carousel\r\n                                jQuery('.owl-carousel').each(function () {\r\n                                    var owl = jQuery(this);\r\n                                    jQuery(\".prev\").on('click', function () {\r\n                                        jQuery(this).parent().parent().parent().parent().next().trigger('prev.owl.carousel');\r\n                                    });\r\n\r\n                                    jQuery(\".next\").on('click', function () {\r\n                                        jQuery(this).parent().parent().parent().parent().next().trigger('next.owl.carousel');\r\n                                    });\r\n                                    var loopLength = owl.data('car-length');\r\n                                    var divLength = jQuery(this).find(\"div.item\").length;\r\n                                    if (divLength > loopLength) {\r\n                                        owl.owlCarousel({\r\n                                            dots: owl.data(\"dots\"),\r\n                                            items: owl.data(\"items\"),\r\n                                            slideBy: owl.data(\"slideby\"),\r\n                                            center: owl.data(\"center\"),\r\n                                            loop: owl.data(\"loop\"),\r\n                                            margin: owl.data(\"margin\"),\r\n                                            nav: owl.data(\"nav\"),\r\n                                            autoplay: owl.data(\"autoplay\"),\r\n                                            autoplayTimeout: owl.data(\"autoplay-timeout\"),\r\n                                            autoWidth: owl.data(\"auto-width\"),\r\n                                            autoHeight: owl.data(\"auto-Height\"),\r\n                                            merge: owl.data(\"merge\"),\r\n                                            responsive: {\r\n                                                0: {\r\n                                                    items: owl.data(\"responsive-small\"),\r\n                                                    nav: false\r\n                                                },\r\n                                                600: {\r\n                                                    items: owl.data(\"responsive-medium\"),\r\n                                                    nav: false\r\n                                                },\r\n                                                1000: {\r\n                                                    items: owl.data(\"responsive-large\"),\r\n                                                    nav: false\r\n                                                },\r\n                                                1900: {\r\n                                                    items: owl.data(\"responsive-xlarge\"),\r\n                                                    nav: false\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                    } else {\r\n                                        owl.owlCarousel({\r\n                                            dots: false,\r\n                                            items: owl.data(\"items\"),\r\n                                            loop: false,\r\n                                            margin: owl.data(\"margin\"),\r\n                                            autoplay: false,\r\n                                            autoplayHoverPause: true,\r\n                                            responsiveClass: true,\r\n                                            autoWidth: owl.data(\"auto-width\"),\r\n                                            autoHeight: owl.data(\"auto-Height\"),\r\n                                        });\r\n                                    }\r\n                                });\r\n                            }, 0);\r\n                        });\r\n                    };\r\n                    /*$interval(function () {\r\n                     scope.getWatchedList()\r\n                     }, 60000);*/\r\n\r\n                    scope.getWatchedList();\r\n                }\r\n            }\r\n        }])\r\n        .directive('owlCarousel', ['$rootScope', '$timeout', '$interval', 'DataService', function ($rootScope, $timeout, $interval, DataService) {\r\n            return {\r\n                restrict: 'A',\r\n                //scope: {},\r\n                link: function (scope, el, attrs) {\r\n                    scope.getWatchedList = function () {\r\n                        $timeout(function () {\r\n                                //console.log('run owl');\r\n                                //Premium carousel\r\n                                el.each(function () {\r\n                                    var owl = jQuery(this);\r\n                                    jQuery(\".prev\").on('click', function () {\r\n                                        jQuery(this).parent().parent().parent().parent().next().trigger('prev.owl.carousel');\r\n                                    });\r\n\r\n                                    jQuery(\".next\").on('click', function () {\r\n                                        jQuery(this).parent().parent().parent().parent().next().trigger('next.owl.carousel');\r\n                                    });\r\n                                    var loopLength = owl.data('car-length');\r\n                                    var divLength = jQuery(this).find(\"div.item\").length;\r\n                                    if (divLength > loopLength) {\r\n                                        owl.owlCarousel({\r\n                                            dots: owl.data(\"dots\"),\r\n                                            items: owl.data(\"items\"),\r\n                                            slideBy: owl.data(\"slideby\"),\r\n                                            center: owl.data(\"center\"),\r\n                                            loop: owl.data(\"loop\"),\r\n                                            margin: owl.data(\"margin\"),\r\n                                            nav: owl.data(\"nav\"),\r\n                                            autoplay: owl.data(\"autoplay\"),\r\n                                            autoplayTimeout: owl.data(\"autoplay-timeout\"),\r\n                                            autoWidth: owl.data(\"auto-width\"),\r\n                                            autoHeight: owl.data(\"auto-Height\"),\r\n                                            merge: owl.data(\"merge\"),\r\n                                            responsive: {\r\n                                                0: {\r\n                                                    items: owl.data(\"responsive-small\"),\r\n                                                    nav: false\r\n                                                },\r\n                                                600: {\r\n                                                    items: owl.data(\"responsive-medium\"),\r\n                                                    nav: false\r\n                                                },\r\n                                                1000: {\r\n                                                    items: owl.data(\"responsive-large\"),\r\n                                                    nav: false\r\n                                                },\r\n                                                1900: {\r\n                                                    items: owl.data(\"responsive-xlarge\"),\r\n                                                    nav: false\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                    } else {\r\n                                        owl.owlCarousel({\r\n                                            dots: false,\r\n                                            items: owl.data(\"items\"),\r\n                                            loop: false,\r\n                                            margin: owl.data(\"margin\"),\r\n                                            autoplay: false,\r\n                                            autoplayHoverPause: true,\r\n                                            responsiveClass: true,\r\n                                            autoWidth: owl.data(\"auto-width\"),\r\n                                            autoHeight: owl.data(\"auto-Height\"),\r\n                                        });\r\n                                    }\r\n                                });\r\n                            }, 0);\r\n                    };\r\n                    /*$interval(function () {\r\n                     scope.getWatchedList()\r\n                     }, 60000);*/\r\n\r\n                    scope.getWatchedList();\r\n                }\r\n            }\r\n        }])\r\n        .directive('playlists', ['$rootScope', 'DataService', 'UserActions', '_', function ($rootScope, DataService, UserActions, _) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/playlists.html',\r\n                replace: false,\r\n                scope: {\r\n                    project: '='\r\n                },\r\n                link: function (scope, el, attrs) {\r\n                    scope.model = {\r\n                        newName: null,\r\n                        playlistArr: [],\r\n                    };\r\n                    scope.playlists = [];\r\n                    scope.newPlInput = false;\r\n\r\n                    // Get playlists\r\n                    if ($rootScope.AppData.User) {\r\n                        DataService.collection('playlists')\r\n                            .then(function (res) {\r\n                                // Check playlist items for this video\r\n                                DataService.collection('playlistItems', {project: scope.project.id, playlists: _.pluck(res.data.playlists, 'id').toString()})\r\n                                    .then(function (resA) {\r\n                                        // console.log(resA);\r\n                                        scope.model.playlistArr = resA.data.data;\r\n\r\n                                        // list playlists\r\n                                        scope.playlists = res.data.playlists;\r\n                                        // console.log(scope.playlists);\r\n                                    });\r\n                            });\r\n                    }\r\n\r\n\r\n                    scope.toggleNewPlInput = function (clear) {\r\n                        scope.newPlInput = !scope.newPlInput;\r\n                        if (clear) {\r\n                            scope.model.newName = null;\r\n                        }\r\n                    };\r\n\r\n                    scope.newPlaylist = function () {\r\n                        UserActions.checkAuth().then(function (res) {\r\n                            DataService.save('playlists', {\r\n                                name: scope.model.newName,\r\n                                user_id: $rootScope.AppData.User.id\r\n                            }, false, true).then(function (pl) {\r\n                                scope.toggleNewPlInput(false);\r\n                                scope.model.newName = null;\r\n                                scope.playlists.push(pl.data.data)\r\n                            });\r\n                        }, function (err) {\r\n                            UserActions.loginModal().then(function (res) {\r\n                                debugger;\r\n                            });\r\n                        });\r\n                    };\r\n\r\n                    scope.syncPlaylists = function (bool, item) {\r\n                        if (bool) {\r\n                            // add item\r\n                            scope.model.playlistArr.push(item);\r\n                            DataService.save('playlistItems', {playlist: item.id, project: scope.project.id});\r\n                            $rootScope.toastMessage('Added to playlist');\r\n                            // console.log('Added to playlist: ', item);\r\n                        } else {\r\n                            // remove item\r\n\r\n                            for (var i = 0; i < scope.model.playlistArr.length; i++) {\r\n                                if (scope.model.playlistArr[i].id == item.id) {\r\n                                    var genreSetting = _.findWhere(scope.model.playlistArr, {\r\n                                        project: scope.project.id,\r\n                                        playlist_id: item.id\r\n                                    });\r\n                                    // console.log(genreSetting);\r\n                                    if (genreSetting) {\r\n                                        DataService.delete('PlaylistItem', genreSetting.id);\r\n                                    }\r\n                                    scope.model.playlistArr.splice(i, 1);\r\n                                    $rootScope.toastMessage('Removed from playlist');\r\n                                    // console.log('Removed from playlist: ', item);\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    scope.isCheckedPlaylist = function (id) {\r\n                        var match = false;\r\n                        for (var i = 0; i < scope.model.playlistArr.length; i++) {\r\n                            if (scope.model.playlistArr[i].playlist_id == id) {\r\n                                match = true;\r\n                            }\r\n                        }\r\n                        return match;\r\n                    };\r\n                }\r\n            }\r\n        }])\r\n        .directive('toggleShowMore', ['$rootScope', '$timeout', function ($rootScope, $timeout) {\r\n            return {\r\n                restrict: 'A',\r\n                scope: {\r\n                    showMoreHeight: '=showMoreHeight'\r\n                },\r\n                link: function (scope, el, attrs) {\r\n                    $timeout(function () {\r\n                        //show more and less\r\n                        el.showMore({\r\n                            speedDown: 300,\r\n                            speedUp: 300,\r\n                            height: scope.showMoreHeight ? scope.showMoreHeight + 'px' : '165px',\r\n                            showText: 'Show more',\r\n                            hideText: 'Show less'\r\n                        });\r\n                    }, 500);\r\n\r\n                }\r\n            }\r\n        }])\r\n        .directive('scriptViewer', ['$timeout', function ($timeout) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/script-viewer.html',\r\n                transclude: true,\r\n                // replace: true,\r\n                scope: {film: '=film', lightsOff: '=lightsOff'},\r\n                link: function (scope, el, attrs) {\r\n                    scope.script = scope.film.video_url + '?cache=true&css=https://www.filestackapi.com/api/file/5dYvfXsLTqiri3YfMd1e'\r\n                    // scope.script = scope.film.video_url.replace('https://cdn.filepicker.io/api', 'https://www.filestackapi.com/api');\r\n                }\r\n            }\r\n        }])\r\n        .directive('videoPlayer', ['$rootScope', 'DataService', 'UserActions', '$timeout', '$interval', '$state', 'anchorSmoothScroll', '_', function ($rootScope, DataService, UserActions, $timeout, $interval, $state, anchorSmoothScroll, _) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/video-player.html',\r\n                transclude: true,\r\n                // replace: true,\r\n                scope: {film: '=film', type: '=type', lightsOff: '=lightsOff'},\r\n                link: function (scope, el, attrs) {\r\n                    var sources = [];\r\n                    var tracks = [];\r\n                    var otherSources = [];\r\n                    scope.hideSidebar = false;\r\n                    scope.loaded = false;\r\n                    scope.setupOptions = {\r\n                        controls: true,\r\n                        preload: 'auto',\r\n                        autoplay: false,\r\n                        techOrder: ['youtube', 'vimeo', 'Html5'],\r\n                        plugins: {\r\n                            // airplayButton: {},\r\n                            /*chromecast: {\r\n                                appId: \"AppID of your Chromecast App\",\r\n                                metadata: {\r\n                                    title: 'IndieWise',\r\n                                    subtitle: scope.film.name\r\n                                }\r\n                            },*/\r\n                            videoJsResolutionSwitcher: {\r\n                                default: 'high',\r\n                                dynamicLabel: true\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    // Setup Source\r\n                    setupSource(scope.film, sources);\r\n\r\n                    // build media object\r\n                    scope.media = {\r\n                        sources: sources,\r\n                        tracks: tracks,\r\n                    };\r\n\r\n                    // Setup Playlist\r\n                    // Generate playlist\r\n                    DataService.collection('projects', {owner: scope.film.owner.id, notVideo: scope.film.id, per_page: 20})\r\n                        .then(function (response) {\r\n                            scope.otherSources = response.data.data;\r\n                            _.each(response.data.data, function (vid) {\r\n                                // setupSource(vid, otherSources);\r\n                                otherSources.push({\r\n                                    title: vid.name,\r\n                                    url: '/' + vid.url_id,\r\n                                    image: vid.thumbnail_url || 'https://getindiewise.com/assets/img/default_video_thumbnail.jpg', // could be an animated GIF\r\n                                    alt: vid.description, // optional photo description, defaults to the title\r\n                                    target: '_self' // can be any anchor target type\r\n                                })\r\n                            });\r\n\r\n                            console.log(scope.media);\r\n                        }).finally(function (res) {\r\n                            scope.loaded = true;\r\n                        });\r\n\r\n                    scope.$on('vjsVideoReady', function (e, data) {\r\n                        //data contains `id`, `vid`, `player` and `controlBar`\r\n                        //NOTE: vid is depricated, use player instead\r\n                        console.log('video id:' + data.id);\r\n                        console.log('video.js player instance: ', data.player);\r\n                        window.player = scope.player = data.player;\r\n                        console.log('video.js controlBar instance: ', data.controlBar);\r\n                        scope.controlBar = data.controlBar;\r\n\r\n                        // Add Playlist toggle button\r\n                        /*var Button = videojs.getComponent('Button');\r\n                        var MyButton = videojs.extend(Button, {\r\n                            constructor: function() {\r\n                                Button.apply(this, arguments);\r\n                                /!* initialize your button *!/\r\n                            },\r\n                            handleClick: function() {\r\n                                /!* do something on click *!/\r\n                            }\r\n                        });\r\n                        videojs.registerComponent('MyButton', MyButton);\r\n                        scope.player.getChild('controlBar').addChild('myButton', {});*/\r\n\r\n                        // Use playlist as suggested others\r\n                        scope.player.suggestedVideoEndcap({\r\n                            header: 'Other videos from ' + scope.film.owner.fullName + '...',\r\n                            suggestions: otherSources\r\n                        });\r\n                        // handle watched\r\n                        //if (scope.type !== 'vimeo') {\r\n                            var timeForPlayButton = scope.$watch('player.currentTime()', function (newValue, oldValue) {\r\n                                if (newValue > 5) {\r\n                                    $rootScope.initWatch();\r\n                                    timeForPlayButton();\r\n                                }\r\n                            });\r\n                        //}\r\n\r\n                        // Setup watcher\r\n                        scope.player.on('sourcechanged', function(e, data) {\r\n                            videojs.log('SOURCE CHANGED!', e, data);\r\n\r\n                            // Find which source it changed to\r\n                            /*if (angular.isDefined(data.from)) {\r\n                                var videoObj = _.findWhere(scope.otherSources, {id: _.findWhere(scope.media.sources, {src: data.to}).id});\r\n                                if (videoObj && videoObj.hasOwnProperty('id')) {\r\n                                    // Send video object to rest of page or reload\r\n                                    scope.$emit('VideoPlayer:sourceChanged', videoObj);\r\n                                }\r\n                            }*/\r\n                        });\r\n\r\n                        // Init behaviours\r\n                        // scope.player.perSourceBehaviors();\r\n\r\n                        // Init Sharing\r\n                        scope.player.socialShare({\r\n                            facebook: { // optional, includes a Facebook share button (See the [Facebook documentation](https://developers.facebook.com/docs/sharing/reference/share-dialog) for more information)\r\n                                // shareUrl: '', // optional, defaults to window.location.href\r\n                                shareImage: scope.film.thumbnail_url, // optional, defaults to the Facebook-scraped image\r\n                                shareText: 'I\\'m watching ' + scope.film.name + ' on IndieWise - Check it out!'\r\n                            },\r\n                            twitter: { // optional, includes a Twitter share button (See the [Twitter documentation](https://dev.twitter.com/web/tweet-button/web-intent) for more information)\r\n                                handle: 'indiewise', // optional, appends `via @handle` to the end of the tweet\r\n                                shareUrl: '', // optional, defaults to window.location.href\r\n                                shareText: 'I\\'m watching ' + scope.film.name + ' on IndieWise - Check it out!'\r\n                            }\r\n                        });\r\n\r\n                        // init Playlist\r\n                        // scope.player.playlist({ videos: sources, playlist: { hideSidebar: scope.hideSidebar, upNext: true, hideIcons: true, thumbnailSize: 300, items: 5 } })\r\n\r\n                        /*$timeout(function () {\r\n                            console.log('hiding sidebar');\r\n                            scope.hideSidebar = true;\r\n\r\n                            updateElementWidth(scope.player);\r\n                        }, 5000)*/\r\n                    });\r\n\r\n                    scope.$on('vjsVideoMediaChanged', function (e, data) {\r\n                        console.log('vjsVideoMediaChanged event was fired');\r\n                    });\r\n\r\n                    function setupSource(video, dest) {\r\n                        var source = {\r\n                            id: video.id,\r\n                            src: video.video_url,\r\n                            title: video.name,\r\n                            thumbnail: video.thumbnail_url || 'https://getindiewise.com/assets/img/default_video_thumbnail.jpg'\r\n                        };\r\n                        switch (video.hosting_type) {\r\n                            case 'HTML5':\r\n                                source.type = 'video/mp4';\r\n                                break;\r\n                            case 'youtube':\r\n                                source.type = 'video/youtube';\r\n                                source.src = 'https://www.youtube.com/watch?v=' + video.hosting_id;\r\n                                // source.youtube = { 'ytControls': 2, 'cc_load_policy': 1, 'iv_load_policy': 1, 'modestbranding': 1, 'cc': 1};\r\n                                break;\r\n                            case 'vimeo':\r\n                                source.type = 'video/vimeo';\r\n                                source.src = 'https://vimeo.com/' + video.hosting_id;\r\n                                // source.vimeo = { \"ytControls\": 2 };\r\n                                break;\r\n                        }\r\n                        dest.push(source);\r\n                    }\r\n\r\n                    function updateElementWidth(player) {\r\n                        var resize = function resize(p) {\r\n                            var itemWidth = scope.hideSidebar ? 0 : 300;\r\n\r\n                            var playerWidth = p.el().offsetWidth;\r\n                            var playerHeight = p.el().offsetHeight;\r\n                            var itemHeight = Math.round(playerHeight / 5);\r\n\r\n                            var youtube = p.$(\".vjs-tech\");\r\n                            var newSize = playerWidth - itemWidth;\r\n\r\n                            if (newSize >= 0) {\r\n\r\n                                var style = document.createElement('style');\r\n                                var def = ' ' + '.vjs-playlist .vjs-poster { width: ' + newSize + 'px !important; }' + '.vjs-playlist .vjs-playlist-items { width: ' + itemWidth + 'px !important; }' + '.vjs-playlist .vjs-playlist-items li { width: ' + itemWidth + 'px !important; height: ' + itemHeight + 'px !important; }' + '.vjs-playlist .vjs-modal-dialog { width: ' + newSize + 'px !important; } ' + '.vjs-playlist .vjs-control-bar, .vjs-playlist .vjs-tech { width: ' + newSize + 'px !important; } ' + '.vjs-playlist .vjs-big-play-button, .vjs-playlist .vjs-loading-spinner { left: ' + Math.round(newSize / 2) + 'px !important; } ';\r\n\r\n                                style.setAttribute('type', 'text/css');\r\n                                style.setAttribute('id', 'videoplayer-playlist-stylesheet');\r\n                                document.getElementsByTagName('head')[0].appendChild(style);\r\n\r\n                                if (style.styleSheet) {\r\n                                    style.styleSheet.cssText = def;\r\n                                } else {\r\n                                    style.appendChild(document.createTextNode(def));\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        if (player) {\r\n                            resize(player);\r\n                        }\r\n\r\n                        if (!scope.hideSidebar) {\r\n                            window.onresize = function () {\r\n                                resize(player);\r\n                            };\r\n\r\n                        }\r\n                    };\r\n\r\n                    function toggleLights() {\r\n                        scope.lightsOff = !scope.lightsOff;\r\n                        var overlay = jQuery('#overlay');\r\n                        var body = jQuery('body');\r\n                        overlay.fadeToggle(1000);\r\n                        /* Choose desired delay */\r\n                        if (!scope.lightsOff) {\r\n                            $timeout(function () {\r\n                                overlay.removeClass('highlight');\r\n                                body.removeClass('cinema-mode');\r\n                            }, 1000);\r\n                            /* Same delay */\r\n                        } else {\r\n                            overlay.addClass('highlight');\r\n                            body.addClass('cinema-mode');\r\n                        }\r\n                    }\r\n\r\n                    jQuery('#overlay').on('click', function () {\r\n                        toggleLights();\r\n                    });\r\n                }\r\n            }\r\n        }])\r\n        .directive('videogularPlayer', ['$rootScope', 'DataService', 'UserActions', '$timeout', '$interval', '$state', 'anchorSmoothScroll', '$sce', '_', function ($rootScope, DataService, UserActions, $timeout, $interval, $state, anchorSmoothScroll, $sce, _) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/videogular-player.html',\r\n                transclude: true,\r\n                // replace: true,\r\n                scope: {film: '=film', type: '=type', lightsOff: '=lightsOff'},\r\n                link: function (scope, el, attrs) {\r\n\r\n                    scope.onPlayerReady = false;\r\n                    scope.config = {\r\n                        sources: [\r\n                            {src: $sce.trustAsResourceUrl(scope.film.video_url), type: (scope.type === 'HTML5' ? 'video/mp4': undefined) }\r\n                        ],\r\n                        tracks: [],\r\n                        theme: 'http://www.videogular.com/styles/themes/default/latest/videogular.css',\r\n                        plugins: {\r\n                            poster: scope.film.thumbnail_url,\r\n                            controls: {\r\n                                autoHide: false,\r\n                                autoHideTime: 3000,\r\n                            },\r\n                        },\r\n                    };\r\n                    var sources = [];\r\n                    var tracks = [];\r\n                        // var otherSources = [];\r\n                    scope.hideSidebar = false;\r\n                    scope.loaded = false;\r\n\r\n\r\n                    // Setup Playlist\r\n                    // Generate playlist\r\n                    DataService.collection('projects', {owner: scope.film.owner.id, notVideo: scope.film.id, per_page: 20})\r\n                        .then(function (response) {\r\n                            /*scope.otherSources = response.data.data;\r\n                            _.each(response.data.data, function (vid) {\r\n                                setupSource(vid, sources);\r\n                            });*/\r\n\r\n                            // build media object\r\n                            scope.media = {\r\n                                sources: sources,\r\n                                tracks: tracks,\r\n                            };\r\n                            console.log(scope.media);\r\n                        }).finally(function (res) {\r\n                            scope.loaded = true;\r\n                        });\r\n                }\r\n            }\r\n        }])\r\n        .directive('elitePlayer', ['$rootScope', 'DataService', 'UserActions', '$timeout', '$interval', '$state', 'anchorSmoothScroll', '_', function ($rootScope, DataService, UserActions, $timeout, $interval, $state, anchorSmoothScroll, _) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/videoPlayer.html',\r\n                scope: {film: '=film', type: '=type', lightsOff: '=lightsOff'},\r\n                link: function (scope, el, attrs) {\r\n                    var listenerStarted = false;\r\n                    var hasWatched = false;\r\n                    var playlist = [];\r\n                    //console.log(scope.film);\r\n                    var video = scope.film;\r\n                    //attrs.$observe(\"film\", function (video) {\r\n                    //video = JSON.parse(video);\r\n                    playlist.push({\r\n                        videoType: scope.type,                                      //choose video type: \"HTML5\", \"youtube\", \"vimeo\", \"image\"\r\n                        title: video.name,                                             //video title\r\n                        youtubeID: scope.type === 'youtube' ? video.hosting_id : \"\",   //last part if the URL https://www.youtube.com/watch?v=0dJO0HyE8xE\r\n                        vimeoID: scope.type === 'vimeo' ? video.hosting_id : \"\",          //last part of the URL http://vimeo.com/119641053\r\n                        mp4: scope.type === 'HTML5' ? video.video_url : \"\",               //HTML5 video mp4 url\r\n                        imageUrl: video.thumbnail_url,                                     //display image instead of playing video\r\n                        imageTimer: 4, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  //set time how long image will display\r\n                        prerollAD: \"no\",                                                                  //show pre-roll \"yes\",\"no\"\r\n                        prerollGotoLink: \"http://getindiewise.com/\",                                         //pre-roll goto link\r\n                        // preroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Short_Elegant_Logo_Reveal.mp4\",   //pre-roll video mp4 format\r\n                        prerollSkipTimer: 5,\r\n                        midrollAD: \"no\",                                                                  //show mid-roll \"yes\",\"no\"\r\n                        midrollAD_displayTime: \"00:10\",                                                    //show mid-roll at any custom time in format \"minutes:seconds\" (\"00:00\")\r\n                        midrollGotoLink: \"http://getindiewise.com/\",                                         //mid-roll goto link\r\n                        // midroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Explode.mp4\", //mid-roll video mp4 format\r\n                        midrollSkipTimer: 5,\r\n                        postrollAD: \"no\",                                                                 //show post-roll \"yes\",\"no\"\r\n                        postrollGotoLink: \"http://getindiewise.com/\",                                        //post-roll goto link\r\n                        // postroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Light.mp4\",  //post-roll video mp4 format\r\n                        postrollSkipTimer: 5,\r\n                        // popupImg: \"images/preview_images/popup.jpg\",                        \t\t\t  \t  //popup image URL\r\n                        popupAdShow: \"no\",                                                                //enable/disable popup image: \"yes\",\"no\"\r\n                        popupAdStartTime: \"00:03\",                                                         //time to show popup ad during playback\r\n                        popupAdEndTime: \"00:07\",                                                           //time to hide popup ad during playback\r\n                        popupAdGoToLink: \"http://getindiewise.com/\",                                         //re-direct to URL when popup ad clicked\r\n                        description: video.description,                                                      //video description\r\n                        thumbImg: video.thumbnail_url||'/assets/img/default_avatar.jpg',                //path to playlist thumbnail image\r\n                        info: \"\"                                                                                    //video info\r\n                    });\r\n\r\n                    // Generate playlist\r\n                    DataService.collection('projects', {owner: video.owner.id, notVideo: video.id, per_page: 20}).then(function (result) {\r\n                        scope.playlistFilms = result.data.data;\r\n                        return scope.playlistFilms;\r\n                    }).then(function (res) {\r\n                        _.each(res, function (vid) {\r\n                            var type = '';\r\n                            if (vid.video_url.indexOf('youtu') != -1) {\r\n                                type = 'youtube';\r\n                            } else if (vid.video_url.indexOf('vimeo') != -1) {\r\n                                type = 'vimeo';\r\n                            } else {\r\n                                type = 'other';\r\n                            }\r\n\r\n                            playlist.push({\r\n                                videoType: type,                                                              //choose video type: \"HTML5\", \"youtube\", \"vimeo\", \"image\"\r\n                                title: vid.name,                                                            //video title\r\n                                youtubeID: type === 'youtube' ? vid.hosting_id : \"\",                                                          //last part if the URL https://www.youtube.com/watch?v=0dJO0HyE8xE\r\n                                vimeoID: type === 'vimeo' ? vid.hosting_id : \"\",                                                              //last part of the URL http://vimeo.com/119641053\r\n                                mp4: type === 'hosted' ? vid.video_url : \"\",               //HTML5 video mp4 url\r\n                                //imageUrl:\"images/preview_images/poster2.jpg\",                                     //display image instead of playing video\r\n                                //imageTimer:4, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  //set time how long image will display\r\n                                prerollAD: \"no\",                                                                  //show pre-roll \"yes\",\"no\"\r\n                                prerollGotoLink: \"http://getindiewise.com/\",                                         //pre-roll goto link\r\n                                preroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Short_Elegant_Logo_Reveal.mp4\",   //pre-roll video mp4 format\r\n                                prerollSkipTimer: 5,\r\n                                midrollAD: \"no\",                                                                  //show mid-roll \"yes\",\"no\"\r\n                                midrollAD_displayTime: \"00:10\",                                                    //show mid-roll at any custom time in format \"minutes:seconds\" (\"00:00\")\r\n                                midrollGotoLink: \"http://getindiewise.com/\",                                         //mid-roll goto link\r\n                                midroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Explode.mp4\", //mid-roll video mp4 format\r\n                                midrollSkipTimer: 5,\r\n                                postrollAD: \"no\",                                                                 //show post-roll \"yes\",\"no\"\r\n                                postrollGotoLink: \"http://getindiewise.com/\",                                        //post-roll goto link\r\n                                postroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Light.mp4\",  //post-roll video mp4 format\r\n                                postrollSkipTimer: 5,\r\n                                popupImg: \"images/preview_images/popup.jpg\",                        \t\t\t  \t  //popup image URL\r\n                                popupAdShow: \"no\",                                                                //enable/disable popup image: \"yes\",\"no\"\r\n                                popupAdStartTime: \"00:03\",                                                         //time to show popup ad during playback\r\n                                popupAdEndTime: \"00:07\",                                                           //time to hide popup ad during playback\r\n                                popupAdGoToLink: \"http://getindiewise.com/\",                                         //re-direct to URL when popup ad clicked\r\n                                description: vid.url_id,                                                      //video description\r\n                                thumbImg: vid.thumbnail_url||'/assets/img/default_avatar.jpg',                //path to playlist thumbnail image\r\n                                info: \"\"                                                                                    //video info\r\n                            });\r\n                        });\r\n                    }).finally(function () {\r\n                        window.videoPlayer = scope.videoPlayer = el.Video({                  //ALL PLUGIN OPTIONS\r\n                            instanceName: \"player1\",                      //name of the player instance\r\n                            instanceTheme:\"dark\",                        //choose video player theme: \"dark\", \"light\"\r\n                            autohideControls: 2,                          //autohide HTML5 player controls\r\n                            hideControlsOnMouseOut: \"No\",                 //hide HTML5 player controls on mouse out of the player: \"Yes\",\"No\"\r\n                            playerLayout: \"fitToContainer\",                   //Select player layout: \"fitToContainer\", \"fixedSize\", \"fitToBrowser\"\r\n                            // videoPlayerWidth: '100%',                     //fixed total player width\r\n                            // videoPlayerHeight: Foundation.MediaQuery.atLeast('large') ? 470 : 420,                       //fixed total player height\r\n                            responsive: true,  //!Foundation.MediaQuery.atLeast('large'),\t\t\t\t             //this option will overwrite above videoPlayerWidth/videoPlayerHeight and set player to fit your div (parent) container: true/false\r\n                            playlist: /*scope.type === 'vimeo' ? \"Off\" :*/ \"Right playlist\",                   //choose playlist type: \"Right playlist\", \"Off\"\r\n                            playlistScrollType: \"light\",                  //choose scrollbar type: \"light\",\"minimal\",\"light-2\",\"light-3\",\"light-thick\",\"light-thin\",\"inset\",\"inset-2\",\"inset-3\",\"rounded\",\"rounded-dots\",\"3d\"\r\n                            playlistBehaviourOnPageload: \"closed\",\t\t //choose playlist behaviour when webpage loads: \"closed\", \"opened\" (not apply to Vimeo player)\r\n                            autoplay: false,                              //autoplay when webpage loads: true/false\r\n                            colorAccent: \"#3F51B5\",                       //plugin colors accent (hexadecimal or RGB value - http://www.colorpicker.com/)\r\n                            vimeoColor: \"00adef\",                         //set \"hexadecimal value\", default vimeo color is \"00adef\"\r\n                            youtubeControls: \"custom controls\",\t\t\t //choose youtube player controls: \"custom controls\", \"default controls\"\r\n                            youtubeSkin: \"dark\",                          //default youtube controls theme: light, dark\r\n                            youtubeColor: \"red\",                          //default youtube controls bar color: red, white\r\n                            youtubeQuality: \"default\",                    //choose youtube quality: \"small\", \"medium\", \"large\", \"hd720\", \"hd1080\", \"highres\", \"default\"\r\n                            youtubeShowRelatedVideos: \"No\",\t\t\t\t //choose to show youtube related videos when video finish: \"Yes\", \"No\" (onFinish:\"Stop video\" needs to be enabled)\r\n                            videoPlayerShadow: \"effect2\",                 //choose player shadow:  \"effect1\" , \"effect2\", \"effect3\", \"effect4\", \"effect5\", \"effect6\", \"off\"\r\n                            loadRandomVideoOnStart: \"No\",                 //choose to load random video when webpage loads: \"Yes\", \"No\"\r\n                            shuffle: \"No\",\t\t\t\t                 //choose to shuffle videos when playing one after another: \"Yes\", \"No\" (shuffle button enabled/disabled on start)\r\n                            posterImg: '',//video.thumbnail_url,                               //player poster image\r\n                            onFinish: \"Stop video\",                      //\"Play next video\",\"Restart video\", \"Stop video\",\r\n                            nowPlayingText: \"Yes\",                        //enable disable now playing title: \"Yes\",\"No\"\r\n                            fullscreen: \"Fullscreen native\",              //choose fullscreen type: \"Fullscreen native\",\"Fullscreen browser\"\r\n                            rightClickMenu: false,                         //enable/disable right click over HTML5 player: true/false\r\n                            hideVideoSource: true,\t\t\t\t\t\t //option to hide self hosted video sources (to prevent users from download/steal your videos): true/false\r\n                            showAllControls: true,\t\t\t\t\t\t //enable/disable all HTML5 player controls: true/false\r\n                            allowSkipAd: true,                            //enable/disable \"Skip advertisement\" option: true/false\r\n                            infoShow: \"No\",                              //enable/disable info option: \"Yes\",\"No\"\r\n                            shareShow: \"No\",                             //enable/disable all share options: \"Yes\",\"No\"\r\n                            facebookShow: \"No\",                          //enable/disable facebook option individually: \"Yes\",\"No\"\r\n                            twitterShow: \"No\",                           //enable/disable twitter option individually: \"Yes\",\"No\"\r\n                            mailShow: \"No\",                              //enable/disable mail option individually: \"Yes\",\"No\"\r\n                            facebookShareName: video.name,      //first parametar of facebook share in facebook feed dialog is title\r\n                            facebookShareLink: window.location.href,  //second parametar of facebook share in facebook feed dialog is link below title\r\n                            facebookShareDescription: video.description, //third parametar of facebook share in facebook feed dialog is description below link\r\n                            facebookSharePicture: video.thumbnail_url, //fourth parametar in facebook feed dialog is picture on left side\r\n                            twitterText: video.name,\t\t\t //first parametar of twitter share in twitter feed dialog is text\r\n                            twitterLink: window.location.href, //second parametar of twitter share in twitter feed dialog is link\r\n                            twitterHashtags: \"indiewise\",\t\t //third parametar of twitter share in twitter feed dialog is hashtag\r\n                            twitterVia: \"IndieWise\",\t\t\t\t //fourth parametar of twitter share in twitter feed dialog is via (@)\r\n                            googlePlus: window.location.href, //share link over Google +\r\n                            logoShow: \"Yes\",                              //\"Yes\",\"No\"\r\n                            logoClickable: \"No\",                         //\"Yes\",\"No\"\r\n                            logoPath: \"/assets/img/Logo_alt2_web_87x45.png\",             //path to logo image\r\n                            logoGoToLink: \"http://getindiewise.com\",       //redirect to page when logo clicked\r\n                            logoPosition: \"bottom-left\",                  //choose logo position: \"bottom-right\",\"bottom-left\"\r\n                            embedShow: \"No\",                             //enable/disable embed option: \"Yes\",\"No\"\r\n                            embedCodeSrc: \"www.yourwebsite.com/videoplayer/index.html\", //path to your video player on server\r\n                            embedCodeW: \"746\",                            //embed player code width\r\n                            embedCodeH: \"420\",                            //embed player code height\r\n                            embedShareLink: window.location.href, //direct link to your site (or any other URL) you want to be \"shared\"\r\n                            youtubePlaylistID: \"\",                        //automatic youtube playlist ID (leave blank \"\" if you want to use manual playlist) LL4qbSRobYCjvwo4FCQFrJ4g\r\n                            youtubeChannelID: \"\",                         //automatic youtube channel ID (leave blank \"\" if you want to use manual playlist) UCHqaLr9a9M7g9QN6xem9HcQ\r\n\r\n                            //manual playlist\r\n                            videos: playlist\r\n                        });\r\n\r\n                        // playlist actions\r\n                        el.find('.elite_vp_item:not(:first) *').bind('click', function (event) {\r\n                            event.preventDefault();\r\n                            var $parent = jQuery(this).hasClass('elite_vp_item') ? jQuery(this) : jQuery(this).parents('.elite_vp_item');\r\n                            var $description = $parent.find('.elite_vp_description');\r\n                            var urlId = $description.html().trim();\r\n                            $state.go('video', {url_id: urlId});\r\n                        });\r\n\r\n                        el.find('.fa-elite-backward').bind('click', function (event) {\r\n                            event.preventDefault();\r\n                            var $parent = jQuery('.elite_vp_itemSelected').prev();\r\n                            if (!$parent.length) {\r\n                                $parent = jQuery('.elite_vp_item').last();\r\n                            }\r\n                            var $description = $parent.find('.elite_vp_description');\r\n                            var urlId = $description.html().trim();\r\n                            $state.go('video', {url_id: urlId});\r\n                        });\r\n\r\n                        el.find('.fa-elite-forward').bind('click', function (event) {\r\n                            event.preventDefault();\r\n                            var $parent = jQuery('.elite_vp_itemSelected').next();\r\n                            var $description = $parent.find('.elite_vp_description');\r\n                            var urlId = $description.html().trim();\r\n                            $state.go('video', {url_id: urlId});\r\n                        });\r\n\r\n                        // $timeout(function () {\r\n                        //     scope.startedPlaying();\r\n                        // }, 100);\r\n\r\n                        scope.startedPlaying = $interval(function () {\r\n                            // If Vimeo video\r\n                            if (scope.videoPlayer.state === 'loading' && !!angular.element('#elite_vp_vimeoWrapper iframe')) {\r\n                                // Listen for messages from the player\r\n                                if (!listenerStarted) {\r\n                                    if (window.addEventListener) {\r\n                                        window.addEventListener('message', vimeoListener, false);\r\n                                    }\r\n                                    else {\r\n                                        window.attachEvent('onmessage', vimeoListener);\r\n                                    }\r\n                                    listenerStarted = true;\r\n                                }\r\n                            }\r\n\r\n                            // if YouTube Video\r\n                            if (scope.videoPlayer.state === \"elite_vp_playing\") {\r\n                                toggleLights();\r\n                                $rootScope.initWatch();\r\n\r\n                                switch (scope.type) {\r\n                                    case \"youtube\":\r\n                                        //console.log('Youtube API is Ready');\r\n                                        scope.videoPlayer.youtubePlayer.addEventListener(\"onStateChange\", function (a) {\r\n                                            //console.log(a.target.getPlayerState());\r\n                                            if (a.target.getPlayerState() == 0) {\r\n                                                //console.log('Scroll page to content');\r\n                                                if (!!scope.lightsOff) {\r\n                                                    toggleLights();\r\n                                                }\r\n                                                //anchorSmoothScroll.scrollTo('SinglePostStats');\r\n                                            }\r\n                                        });\r\n                                        break;\r\n                                }\r\n\r\n                                $interval.cancel(scope.startedPlaying)\r\n                            }\r\n                        }, 1000);\r\n\r\n                    });\r\n\r\n                    function vimeoListener(event) {\r\n                        // Handle messages from the vimeo player only\r\n                        if (!(/^https?:\\/\\/player.vimeo.com/).test(event.origin)) {\r\n                            return false;\r\n                        }\r\n                        var data = JSON.parse(event.data);\r\n\r\n                        if (data.event === 'playProgress') {\r\n                            if (!hasWatched) {\r\n                                if (!!scope.lightsOff) {\r\n                                    toggleLights();\r\n                                }\r\n                                $rootScope.initWatch();\r\n                                hasWatched = true;\r\n                                $interval.cancel(scope.startedPlaying)\r\n                            }\r\n\r\n                            if (window.addEventListener) {\r\n                                window.removeEventListener('message', vimeoListener, false);\r\n                            }\r\n                            else {\r\n                                window.detachEvent('onmessage', vimeoListener);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    function toggleLights() {\r\n                        scope.lightsOff = !scope.lightsOff;\r\n                        var overlay = jQuery('#overlay');\r\n                        overlay.fadeToggle(1000);\r\n                        /* Choose desired delay */\r\n                        if (!scope.lightsOff) {\r\n                            $timeout(function () {\r\n                                overlay.removeClass('highlight');\r\n                            }, 1000);\r\n                            /* Same delay */\r\n                        } else {\r\n                            overlay.addClass('highlight');\r\n                        }\r\n                    }\r\n\r\n                    jQuery('#overlay').on('click', function () {\r\n                        toggleLights();\r\n                    });\r\n\r\n                    // TODO: on playlist end, exit fullscreen\r\n                    //videoPlayer.fsEnter.click()\r\n\r\n\r\n                    //$state.go('stateName',params,{\r\n                    //    // prevent the events onStart and onSuccess from firing\r\n                    //    notify:false,\r\n                    //    // prevent reload of the current state\r\n                    //    reload:false,\r\n                    //    // replace the last record when changing the params so you don't hit the back button and get old params\r\n                    //    location:'replace',\r\n                    //    // inherit the current params on the url\r\n                    //    inherit:true\r\n                    //});\r\n                }\r\n            }\r\n        }])\r\n        .directive('elitePlayerEmbed', ['$rootScope', '_', function ($rootScope, _) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/videoPlayer.html',\r\n                scope: { name: '=', hosting_id: '=', url: '=', type: '=', thumbnail: '=', description: '=' },\r\n                link: function (scope, el, attrs) {\r\n                    var playlist = [];\r\n                    playlist.push({\r\n                        videoType: scope.type,                                      //choose video type: \"HTML5\", \"youtube\", \"vimeo\", \"image\"\r\n                        title: scope.name,                                             //video title\r\n                        youtubeID: scope.type === 'youtube' ? scope.hosting_id : \"\",   //last part if the URL https://www.youtube.com/watch?v=0dJO0HyE8xE\r\n                        vimeoID: scope.type === 'vimeo' ? scope.hosting_id : \"\",          //last part of the URL http://vimeo.com/119641053\r\n                        mp4: scope.type === 'HTML5' ? scope.url : \"\",               //HTML5 video mp4 url\r\n                        imageUrl: scope.thumbnail,                                     //display image instead of playing video\r\n                        imageTimer: 4, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  //set time how long image will display\r\n                        prerollAD: \"no\",                                                                  //show pre-roll \"yes\",\"no\"\r\n                        prerollGotoLink: \"http://getindiewise.com/\",                                         //pre-roll goto link\r\n                        // preroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Short_Elegant_Logo_Reveal.mp4\",   //pre-roll video mp4 format\r\n                        prerollSkipTimer: 5,\r\n                        midrollAD: \"no\",                                                                  //show mid-roll \"yes\",\"no\"\r\n                        midrollAD_displayTime: \"00:10\",                                                    //show mid-roll at any custom time in format \"minutes:seconds\" (\"00:00\")\r\n                        midrollGotoLink: \"http://getindiewise.com/\",                                         //mid-roll goto link\r\n                        // midroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Explode.mp4\", //mid-roll video mp4 format\r\n                        midrollSkipTimer: 5,\r\n                        postrollAD: \"no\",                                                                 //show post-roll \"yes\",\"no\"\r\n                        postrollGotoLink: \"http://getindiewise.com/\",                                        //post-roll goto link\r\n                        // postroll_mp4: \"http://creativeinteractivemedia.com/player/videos/Logo_Light.mp4\",  //post-roll video mp4 format\r\n                        postrollSkipTimer: 5,\r\n                        // popupImg: \"images/preview_images/popup.jpg\",                        \t\t\t  \t  //popup image URL\r\n                        popupAdShow: \"no\",                                                                //enable/disable popup image: \"yes\",\"no\"\r\n                        popupAdStartTime: \"00:03\",                                                         //time to show popup ad during playback\r\n                        popupAdEndTime: \"00:07\",                                                           //time to hide popup ad during playback\r\n                        popupAdGoToLink: \"http://getindiewise.com/\",                                         //re-direct to URL when popup ad clicked\r\n                        description: '',                                                      //video description\r\n                        thumbImg: scope.thumbnail,                                                      //path to playlist thumbnail image\r\n                        info: \"\"                                                                                    //video info\r\n                    });\r\n\r\n                    scope.videoPlayer = el.Video({                  //ALL PLUGIN OPTIONS\r\n                        instanceName: \"player_\" + new Date().valueOf().toString(),                      //name of the player instance\r\n                        instanceTheme:\"dark\",                        //choose video player theme: \"dark\", \"light\"\r\n                        autohideControls: 2,                          //autohide HTML5 player controls\r\n                        hideControlsOnMouseOut: \"No\",                 //hide HTML5 player controls on mouse out of the player: \"Yes\",\"No\"\r\n                        playerLayout: \"fixedSize\",\r\n                        videoPlayerWidth: '100%',                     //fixed total player width\r\n                        videoPlayerHeight: Foundation.MediaQuery.atLeast('large') ? 470 : 420,                       //fixed total player height\r\n                        // responsive: true,  //!Foundation.MediaQuery.atLeast('large'),\t\t\t\t             //this option will overwrite above videoPlayerWidth/videoPlayerHeight and set player to fit your div (parent) container: true/false\r\n                        playlist: \"Off\",                   //choose playlist type: \"Right playlist\", \"Off\"\r\n                        playlistScrollType: \"light\",                  //choose scrollbar type: \"light\",\"minimal\",\"light-2\",\"light-3\",\"light-thick\",\"light-thin\",\"inset\",\"inset-2\",\"inset-3\",\"rounded\",\"rounded-dots\",\"3d\"\r\n                        playlistBehaviourOnPageload: \"closed\",\t\t //choose playlist behaviour when webpage loads: \"closed\", \"opened\" (not apply to Vimeo player)\r\n                        autoplay: false,                              //autoplay when webpage loads: true/false\r\n                        colorAccent: \"#3F51B5\",                       //plugin colors accent (hexadecimal or RGB value - http://www.colorpicker.com/)\r\n                        vimeoColor: \"00adef\",                         //set \"hexadecimal value\", default vimeo color is \"00adef\"\r\n                        youtubeControls: \"custom controls\",\t\t\t //choose youtube player controls: \"custom controls\", \"default controls\"\r\n                        youtubeSkin: \"dark\",                          //default youtube controls theme: light, dark\r\n                        youtubeColor: \"red\",                          //default youtube controls bar color: red, white\r\n                        youtubeQuality: \"default\",                    //choose youtube quality: \"small\", \"medium\", \"large\", \"hd720\", \"hd1080\", \"highres\", \"default\"\r\n                        youtubeShowRelatedVideos: \"No\",\t\t\t\t //choose to show youtube related videos when video finish: \"Yes\", \"No\" (onFinish:\"Stop video\" needs to be enabled)\r\n                        videoPlayerShadow: \"effect2\",                 //choose player shadow:  \"effect1\" , \"effect2\", \"effect3\", \"effect4\", \"effect5\", \"effect6\", \"off\"\r\n                        loadRandomVideoOnStart: \"No\",                 //choose to load random video when webpage loads: \"Yes\", \"No\"\r\n                        shuffle: \"No\",\t\t\t\t                 //choose to shuffle videos when playing one after another: \"Yes\", \"No\" (shuffle button enabled/disabled on start)\r\n                        posterImg: '',//video.thumbnail_url,                               //player poster image\r\n                        onFinish: \"Stop video\",                      //\"Play next video\",\"Restart video\", \"Stop video\",\r\n                        nowPlayingText: \"Yes\",                        //enable disable now playing title: \"Yes\",\"No\"\r\n                        fullscreen: \"Fullscreen native\",              //choose fullscreen type: \"Fullscreen native\",\"Fullscreen browser\"\r\n                        rightClickMenu: false,                         //enable/disable right click over HTML5 player: true/false\r\n                        hideVideoSource: true,\t\t\t\t\t\t //option to hide self hosted video sources (to prevent users from download/steal your videos): true/false\r\n                        showAllControls: true,\t\t\t\t\t\t //enable/disable all HTML5 player controls: true/false\r\n                        allowSkipAd: true,                            //enable/disable \"Skip advertisement\" option: true/false\r\n                        infoShow: \"No\",                              //enable/disable info option: \"Yes\",\"No\"\r\n                        shareShow: \"No\",                             //enable/disable all share options: \"Yes\",\"No\"\r\n                        facebookShow: \"No\",                          //enable/disable facebook option individually: \"Yes\",\"No\"\r\n                        twitterShow: \"No\",                           //enable/disable twitter option individually: \"Yes\",\"No\"\r\n                        mailShow: \"No\",                              //enable/disable mail option individually: \"Yes\",\"No\"\r\n                        facebookShareName: scope.name,      //first parametar of facebook share in facebook feed dialog is title\r\n                        facebookShareLink: window.location.href,  //second parametar of facebook share in facebook feed dialog is link below title\r\n                        facebookShareDescription: scope.description, //third parametar of facebook share in facebook feed dialog is description below link\r\n                        facebookSharePicture: scope.thumbnail, //fourth parametar in facebook feed dialog is picture on left side\r\n                        twitterText: scope.name,\t\t\t //first parametar of twitter share in twitter feed dialog is text\r\n                        twitterLink: window.location.href, //second parametar of twitter share in twitter feed dialog is link\r\n                        twitterHashtags: \"indiewise\",\t\t //third parametar of twitter share in twitter feed dialog is hashtag\r\n                        twitterVia: \"IndieWise\",\t\t\t\t //fourth parametar of twitter share in twitter feed dialog is via (@)\r\n                        googlePlus: window.location.href, //share link over Google +\r\n                        logoShow: \"Yes\",                              //\"Yes\",\"No\"\r\n                        logoClickable: \"No\",                         //\"Yes\",\"No\"\r\n                        logoPath: \"/assets/img/Logo_alt2_web_87x45.png\",             //path to logo image\r\n                        logoGoToLink: \"http://getindiewise.com\",       //redirect to page when logo clicked\r\n                        logoPosition: \"bottom-left\",                  //choose logo position: \"bottom-right\",\"bottom-left\"\r\n                        embedShow: \"No\",                             //enable/disable embed option: \"Yes\",\"No\"\r\n                        embedCodeSrc: \"www.yourwebsite.com/videoplayer/index.html\", //path to your video player on server\r\n                        embedCodeW: \"746\",                            //embed player code width\r\n                        embedCodeH: \"420\",                            //embed player code height\r\n                        embedShareLink: window.location.href, //direct link to your site (or any other URL) you want to be \"shared\"\r\n                        youtubePlaylistID: \"\",                        //automatic youtube playlist ID (leave blank \"\" if you want to use manual playlist) LL4qbSRobYCjvwo4FCQFrJ4g\r\n                        youtubeChannelID: \"\",                         //automatic youtube channel ID (leave blank \"\" if you want to use manual playlist) UCHqaLr9a9M7g9QN6xem9HcQ\r\n\r\n                        //manual playlist\r\n                        videos: playlist\r\n                    });\r\n                }\r\n            }\r\n        }])\r\n        .directive('offCanvasNav', ['$rootScope', function ($rootScope) {\r\n            return {\r\n                restrict: 'A',\r\n                link: function (scope, el, attrs) {\r\n                    el.find('a').on('click', function () {\r\n                        angular.element('#offCanvas-responsive').foundation('close');\r\n                    });\r\n                }\r\n            }\r\n        }])\r\n        .directive('messagesHeight', ['$window', function ($window) {\r\n            return {\r\n                restrict: 'A',\r\n                link: function (scope, el, attrs) {\r\n                    setHeight();\r\n                    angular.element($window).bind('resize', function(){\r\n                        setHeight();\r\n\r\n                        scope.$digest();\r\n                    });\r\n\r\n                    function setHeight() {\r\n                        var parentEl = el.parent();\r\n                        var prevElHeight = el.prev().height();\r\n                        var nextElHeight = el.next().height();\r\n                        var newHeight = $window.innerHeight - (parentEl.offset().top + prevElHeight + nextElHeight);\r\n                        scope.Msgs.viewportHeight = {height: newHeight + 'px'};\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n        .directive('sideNavNotif', ['$mdSidenav', function ($mdSidenav) {\r\n            return {\r\n                restrict: 'A',\r\n                link: function (scope, el, attrs) {\r\n                    el.find('a').bind('click', function () {\r\n                        $mdSidenav('right').close();\r\n                    });\r\n                }\r\n            }\r\n        }])\r\n        .directive('helpInfo', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                transclude: true,\r\n                templateUrl: 'directives/help-info.html',\r\n                scope: {\r\n                    text: '=text',\r\n                    direction: '=direction'\r\n                }\r\n            }\r\n        }])\r\n        .directive('projectCard', ['$rootScope', '$state', '$modal', '$mdMedia', 'UserActions', function ($rootScope, $state, $modal, $mdMedia, UserActions) {\r\n            return {\r\n                restrict: 'E',\r\n                transclude: true,\r\n                replace: false,\r\n                templateUrl: 'directives/project-card.html',\r\n                scope: {\r\n                    video: '=video',\r\n                    type: '=type',\r\n                    related: '=related',\r\n                    queried: '=queried'\r\n                },\r\n                link: function (scope, el, attrs) {\r\n                    scope.isQueried = scope.queried === 'true';\r\n                    scope.isLoggedIn = $rootScope.AppData.User;\r\n                    scope.openShareDialog = openShareDialog;\r\n\r\n                    function openShareDialog(video) {\r\n                        $modal.open({\r\n                            templateUrl: 'common/shareDialog.html',\r\n                            resolve: {\r\n                                Video: function () {\r\n                                    return video;\r\n                                }\r\n                            },\r\n                            controller: ['$scope', '$modalInstance', 'Video', function ($scope, $modalInstance, Video) {\r\n                                $scope.video = Video;\r\n                                $scope.shareLink = window.location.origin + '/' + Video.url_id;\r\n                                $scope.cancel = function () {\r\n                                    $modalInstance.close();\r\n                                };\r\n                            }]\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n        .directive('commentsBlock', ['$rootScope', 'DataService', 'UserActions', '$modal', '_', function ($rootScope, DataService, UserActions, $modal, _) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/comments.html',\r\n                scope: {\r\n                    comments: '=comments',\r\n                    disable: '=disable',\r\n                    parent: '=parent',\r\n                    child: '=child',\r\n                },\r\n                link: function (scope, el, attrs) {\r\n                    scope.model = {\r\n                        myComment: null,\r\n                        isLoggedIn: $rootScope.AppData.User,\r\n                    };\r\n                    scope.myReply = null;\r\n                    scope.showCommentInput = false;\r\n                    scope.showReplyInput = false;\r\n                    scope.editCommentMode = false;\r\n                    scope.postComment = _.throttle(postComment, 1000);\r\n                    scope.deleteComment = deleteComment;\r\n                    scope.loadReplies = loadReplies;\r\n                    scope.showReplies = false;\r\n                    scope.toggleCommentInput = toggleCommentInput;\r\n                    scope.toggleEditCommentMode = toggleEditCommentMode;\r\n                    scope.toggleReplyInput = toggleReplyInput;\r\n\r\n                    function postComment() {\r\n                        if (!$rootScope.isAuthenticated()) {\r\n                            UserActions.loginModal();\r\n                            return false;\r\n                        }\r\n\r\n                        if ($rootScope.isNotVerified()) {\r\n                            $rootScope.toastAction('Please verify your account so you can rate videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\r\n                            return false;\r\n                        }\r\n\r\n                        DataService.save('comments', {\r\n                            body: scope.model.myComment,\r\n                            critique_id: !scope.parent.hasOwnProperty('unlist') ? scope.parent.id : undefined,\r\n                            user_id: scope.model.isLoggedIn.id\r\n                        })\r\n                            .then(function (comment) {\r\n                                scope.comments.data.push(comment.data.data);\r\n                                $rootScope.toastMessage('Comment posted!');\r\n                                scope.model.myComment = null;\r\n                                clearCommentinput();\r\n                                scope.parent.comments_count++;\r\n                            }, function (error) {\r\n                                console.log('Failed to create new comment, with error code: ' + error.message);\r\n                            });\r\n                    }\r\n\r\n                    function deleteComment(c, ev) {\r\n                        UserActions.checkAuth().then(function (res) {\r\n                            if (res) {\r\n                                var confirm = $modal.confirm()\r\n                                    .title('Would you like to delete your comment?')\r\n                                    //.content('All of the banks have agreed to <span class=\"debt-be-gone\">forgive</span> you your debts.')\r\n                                    //.ariaLabel('Lucky day')\r\n                                    .targetEvent(ev)\r\n                                    .ok('Delete')\r\n                                    .cancel('Cancel');\r\n                                $modal.show(confirm).then(function () {\r\n                                    var p = c.parentComment || undefined;\r\n\r\n                                    DataService.delete('comments', c.id).then(function (res) {\r\n                                        // Decrement film commentCount\r\n                                        scope.parent.commentCount--;\r\n\r\n\r\n                                        if (angular.isUndefined(p)) {\r\n                                            // normal comment\r\n                                            scope.comments = _.reject(scope.comments, function (a) {\r\n                                                return a.id === c.id;\r\n                                            });\r\n\r\n                                        } else {\r\n                                            // reply comment\r\n                                            var z = _.find(scope.comments, function (a) {\r\n                                                return a.id === p.id;\r\n                                            });\r\n\r\n                                            z.replies = _.reject(z.replies, function (a) {\r\n                                                return a.id === c.id;\r\n                                            });\r\n                                            // Increment film commentCount\r\n                                            var pcQuery = new Parse.Query(\"Comment\");\r\n                                            pcQuery.get(p.id).then(function (res) {\r\n                                                res.increment('replyCount', -1);\r\n                                                res.save();\r\n                                            });\r\n\r\n                                            return c = undefined;\r\n                                        }\r\n\r\n                                        $rootScope.toastMessage('Your comment was deleted.');\r\n                                    });\r\n                                }, function () {\r\n                                    //$scope.status = 'You decided to keep your debt.';\r\n                                });\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                    function loadReplies(comment) {\r\n                        // Fetch Replies\r\n                        if (!comment.repliesLoaded) {\r\n                            DataService.collection('comments', {comment: comment.id}).then(function (replies) {\r\n                                comment.replies = replies.data.data;\r\n                                comment.repliesLoaded = true;\r\n                                comment.showReplies = !comment.showReplies;\r\n                                return comment;\r\n                            });\r\n                        } else {\r\n                            comment.showReplies = !comment.showReplies;\r\n                            return comment;\r\n                        }\r\n                    }\r\n\r\n                    function toggleCommentInput() {\r\n                        scope.showCommentInput = !scope.showCommentInput;\r\n                    }\r\n\r\n                    function clearCommentinput() {\r\n                        scope.model.myComment = null;\r\n                    }\r\n\r\n                    function toggleEditCommentMode(comment) {\r\n                        scope.editCommentMode = !scope.editCommentMode;\r\n                        scope.editComment = !!scope.editCommentMode ? comment : undefined;\r\n                    }\r\n\r\n                    function toggleReplyInput(comment) {\r\n                        scope.showReplyInput = !scope.showReplyInput;\r\n                        scope.targetComment = comment;\r\n                    }\r\n\r\n                    scope.$on('reply:complete', function (event, comment) {\r\n                        scope.toggleReplyInput(undefined);\r\n                    });\r\n                }\r\n            }\r\n        }])\r\n        .directive('critiquesBlock', ['$rootScope', 'DataService', 'UserActions', '$modal', '_', function ($rootScope, DataService, UserActions, $modal, _) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/critiques.html',\r\n                scope: {\r\n                    critiques: '=critiques',\r\n                    disable: '=disable',\r\n                    parentUrlId: '=',\r\n                    parentOwnerId: '='\r\n                },\r\n                link: function (scope, el, attrs) {\r\n                    scope.isLoggedIn = $rootScope.AppData.User;\r\n                    scope.showQuickReply = Foundation.MediaQuery.atLeast('large');\r\n\r\n                    scope.isPrivate = function (critique) {\r\n                        return critique.private;\r\n                    };\r\n\r\n                    scope.isOwnerOrAuthor = function (critique) {\r\n                        return scope.isLoggedIn && (scope.isLoggedIn.id == critique.user_id || scope.isLoggedIn.id == scope.parentOwnerId);\r\n                    };\r\n\r\n                    scope.deleteCritique = function (c) {\r\n                        UserActions.checkAuth().then(function (res) {\r\n                            if (res) {\r\n                                var modalInstance = $modal.open({\r\n                                    templateUrl: 'common/confirmDialog.html',\r\n                                    controller: ['$scope', '$modalInstance', function ($scope, $modalInstance) {\r\n                                        $scope.ok = function () {\r\n                                            $modalInstance.close(true);\r\n                                        };\r\n\r\n                                        $scope.cancel = function () {\r\n                                            $modalInstance.dismiss('cancel');\r\n                                        };\r\n                                    }],\r\n                                    size: Foundation.MediaQuery.atLeast('large') ? 'tiny' : 'small',\r\n                                    keyboard: true\r\n                                });\r\n                                modalInstance.result.then(function () {\r\n                                    if (scope.isOwnerOrAuthor) {\r\n                                        DataService.delete('Critique', c.id).then(function () {\r\n                                            $rootScope.toastMessage('Your critique was deleted.');\r\n                                            // Decrement film critiques_count\r\n                                            self.film.critiques_count--;\r\n                                            scope.updateVideoObj();\r\n                                            self.checkUserActions();\r\n                                            scope.critiques = _.reject(scope.critiques, function (a) {\r\n                                                return a.id === c.id;\r\n                                            });\r\n                                        });\r\n                                    }\r\n                                }, function () {\r\n                                    // console.info('Modal dismissed at: ' + new Date());\r\n                                });\r\n                            }\r\n                        })\r\n                    };\r\n                }\r\n            }\r\n        }])\r\n        .directive('toggleReplies', ['$rootScope', function ($rootScope) {\r\n            return {\r\n                restrict: 'A',\r\n                link: function (scope, el, attrs) {\r\n                    /*if (scope.comment.replies_count) {\r\n                        el.html('Show replies <i class=\"fa fa-angle-down\"></i>');\r\n                    }*/\r\n                    //comments reply hide show\r\n                    el.on('click', function () {\r\n                        scope.loadReplies(scope.comment);\r\n                        if (scope.comment.replies_count  /*jQuery(this).parent().next().length > 0*/) {\r\n                            jQuery(this).parent().nextAll().slideToggle();\r\n                            //jQuery(this).html(jQuery(this).text() === 'Hide replies' ? 'Show replies' : 'Hide replies');\r\n                            if (jQuery(this).hasClass('hide-reply')) {\r\n                                jQuery(this).removeClass('hide-reply');\r\n                                jQuery(this).html('Show replies <i class=\"fa fa-angle-down\"></i>');\r\n                            } else {\r\n                                jQuery(this).addClass('hide-reply');\r\n                                jQuery(this).html('Hide replies <i class=\"fa fa-angle-up\"></i>');\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }\r\n        }])\r\n        .directive('repliesBlock', [function () {\r\n            return {\r\n                restrict: 'E',\r\n                replace: true,\r\n                templateUrl: 'directives/replies.html',\r\n                link: function (scope, el, attrs) {\r\n\r\n                }\r\n            }\r\n        }])\r\n        .directive('replyBlock', ['$rootScope', 'UserActions', 'DataService', '_', function ($rootScope, UserActions, DataService, _) {\r\n            return {\r\n                restrict: 'E',\r\n                replace: true,\r\n                templateUrl: 'directives/reply-comment.html',\r\n                link: function (scope, el, attrs) {\r\n                    scope.postReply = _.throttle(postReply, 1000);\r\n                    function postReply() {\r\n                        if (!$rootScope.isAuthenticated()) {\r\n                            UserActions.loginModal();\r\n                            return false;\r\n                        }\r\n\r\n                        if ($rootScope.isNotVerified()) {\r\n                            $rootScope.toastAction('Please verify your account so you can rate videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\r\n                            return false;\r\n                        }\r\n\r\n                                var repliedTo = angular.isString(scope.targetComment.comment_id) ? scope.targetComment.comment_id : scope.targetComment;\r\n                                if (angular.isString(repliedTo)) {\r\n                                    repliedTo = _.findWhere(scope.comments.data, {id: scope.targetComment.comment_id})\r\n                                }\r\n                                DataService.save('comments', {\r\n                                    body: scope.myReply,\r\n                                    critique_id: scope.parent.id,\r\n                                    comment_id: repliedTo.id,\r\n                                    user_id: scope.model.isLoggedIn.id\r\n                                }).then(function (comment) {\r\n\r\n                                    if (!!repliedTo.repliesLoaded) {\r\n                                        var repliesLoaded = true;\r\n                                        var oldReplies = repliedTo.replies || [];\r\n                                    }\r\n                                    if (!repliedTo.replies) {\r\n                                        repliedTo.replies = [];\r\n                                    }\r\n\r\n                                    repliedTo.replies.push(comment.data.data);\r\n                                    repliedTo.replies_count++;\r\n                                    scope.toggleReplyInput();\r\n                                    // refresh parent data\r\n                                    scope.parent.comments_count++;\r\n                                    if (scope.parent.hasOwnProperty('unlist')) {\r\n                                        DataService.item('projects', scope.parent.id).then(function (a) {\r\n                                            angular.extend(scope.parent, a.data.data);\r\n                                            if (repliesLoaded) {\r\n                                                repliedTo.repliesLoaded = true;\r\n                                                oldReplies.push(comment.data.data);\r\n                                                repliedTo.replies = oldReplies;\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        DataService.item('critiques', scope.parent.id).then(function (a) {\r\n                                            angular.extend(scope.parent, a.data.data);\r\n                                            if (repliesLoaded) {\r\n                                                repliedTo.repliesLoaded = true;\r\n                                                oldReplies.push(comment.data.data);\r\n                                                repliedTo.replies = oldReplies;\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    $rootScope.toastMessage('Reply posted!');\r\n                                    scope.myReply = null;\r\n\r\n                                }, function (error) {\r\n                                    console.log('Failed to create new reply, with error code: ' + error.message);\r\n                                });\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n        .directive('quickReplyBlock', ['$rootScope', 'UserActions', 'DataService', '_', function ($rootScope, UserActions, DataService, _) {\r\n            return {\r\n                restrict: 'E',\r\n                replace: true,\r\n                templateUrl: 'directives/reply-comment.html',\r\n                link: function (scope, el, attrs) {\r\n                    scope.model = {\r\n                        isLoggedIn: $rootScope.AppData.User\r\n                    };\r\n\r\n                    scope.postReply = _.throttle(postReply, 1000);\r\n                    function postReply() {\r\n                        if (!$rootScope.isAuthenticated()) {\r\n                            UserActions.loginModal();\r\n                            return false;\r\n                        }\r\n\r\n                        if ($rootScope.isNotVerified()) {\r\n                            $rootScope.toastAction('Please verify your account so you can rate videos! Check your spam folder too.', 'Verify Now', $rootScope.requestVerificationEmail);\r\n                            return false;\r\n                        }\r\n\r\n                        DataService.save('comments', {\r\n                            body: scope.myReply,\r\n                            critique_id: scope.critique.id,\r\n                            user_id: scope.model.isLoggedIn.id\r\n                        }).then(function (comment) {\r\n                            scope.critique.comments_count++;\r\n                            scope.myReply = null;\r\n                            scope.showQuickReply = false;\r\n\r\n                            // register Action\r\n                            $rootScope.toastMessage('Quick Reply posted!');\r\n                        }, function (error) {\r\n                            console.log('Failed to create new reply, with error code: ' + error.message);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n        .directive('editCommentBlock', ['$rootScope', 'UserActions', 'DataService', '_', function ($rootScope, UserActions, DataService, _) {\r\n            return {\r\n                restrict: 'E',\r\n                replace: true,\r\n                templateUrl: 'directives/edit-comment.html',\r\n                link: function (scope, el, attrs) {\r\n                    scope.editedBody = scope.editComment.body;\r\n                    scope.updateComment = _.throttle(updateComment, 1000);\r\n                    function updateComment() {\r\n                        if (scope.editedBody === scope.editComment.body) {\r\n                            scope.toggleEditCommentMode();\r\n                            return scope.editComment;\r\n                        }\r\n                        UserActions.checkAuth().then(function (res) {\r\n                            DataService.update('comments', scope.editComment.id, {\r\n                                body: scope.editedBody,\r\n                                editedAt: moment().toDate()\r\n                            }).then(function (comment) {\r\n                                scope.toggleEditCommentMode();\r\n                                return comment.data;\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n        .directive('focusOn', ['$timeout', function ($timeout) {\r\n            return {\r\n                restrict: 'A',\r\n                link: function ($scope, $element, $attr) {\r\n                    $scope.$watch($attr.focusOn, function (_focusVal) {\r\n                        $timeout(function () {\r\n                            _focusVal ? $element.focus() :\r\n                                $element.blur();\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }])\r\n        .directive('validateEmail', function () {\r\n            // var EMAIL_REGEXP = /^[_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,5})$/;\r\n            var EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            // var EMAIL_REGEXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n            return {\r\n                require: 'ngModel',\r\n                restrict: '',\r\n                link: function (scope, elm, attrs, ctrl) {\r\n                    // only apply the validator if ngModel is present and Angular has added the email validator\r\n                    if (ctrl && ctrl.$validators.email) {\r\n\r\n                        // this will overwrite the default Angular email validator\r\n                        ctrl.$validators.email = function (modelValue) {\r\n                            return ctrl.$isEmpty(modelValue) || EMAIL_REGEXP.test(modelValue);\r\n                        };\r\n                    }\r\n                }\r\n            };\r\n        })\r\n        .directive('myEnter', function () {\r\n            return function (scope, element, attrs) {\r\n                element.bind(\"keydown keypress\", function (event) {\r\n                    if (event.which === 13) {\r\n                        scope.$apply(function () {\r\n                            scope.$eval(attrs.myEnter);\r\n                        });\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                });\r\n            };\r\n        })\r\n        .directive('datepicker', ['$document', function ($document) {\r\n            return {\r\n                require: 'ngModel',\r\n                restrict: 'A',\r\n                scope: {format: \"=\"},\r\n                link: function (scope, el, attrs, ngModel) {\r\n                    var FIREFOX = /Firefox/i.test(navigator.userAgent);\r\n                    var IEXPLORER = $document.documentMode||false;\r\n\r\n                    if (FIREFOX || IEXPLORER) {\r\n                        jQuery(el).fdatepicker({format: scope.format || \"mm-dd-yyyy\"}).on('changeDate', function (ev) {\r\n                            scope.$apply(function () {\r\n                                ngModel.$setViewValue(ev.date);\r\n                            });\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n        .directive('linkify', ['$filter', '$timeout', 'linkify', function ($filter, $timeout, linkify) {\r\n            return {\r\n                restrict: 'A',\r\n                link: function (scope, element, attrs) {\r\n                    var type = attrs.linkify || 'normal';\r\n                    $timeout(function () {\r\n                        element.html(linkify[type](element.html()));\r\n                    });\r\n                }\r\n            };\r\n        }])\r\n        .directive('broadstreetZone', ['$window', '$sce', function ($window, $sce) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/broadstreet-zone.html',\r\n                transclude: true,\r\n                scope: { \r\n                    zone: \"=\",\r\n                    width: \"=\",\r\n                    height: \"=\",\r\n                },\r\n                link: function (scope, el, attrs) {\r\n                    scope.link = $sce.trustAsResourceUrl('https://ad.broadstreetads.com/zdisplay/' + scope.zone + '.html');\r\n                }\r\n            }\r\n        }])\r\n        .directive('staticSideBar', ['$window', '$sce', function ($window, $sce) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: 'directives/static-sidebar.html',\r\n                transclude: true,\r\n                replace: true\r\n            }\r\n        }])\r\n        .directive('nonAngularRoutes', ['$window', '$rootElement', function ($window, $rootElement) {\r\n            return {\r\n                restrict: 'A',\r\n                // templateUrl: 'directives/static-sidebar.html',\r\n                // transclude: true,\r\n                link: function () {\r\n                    $rootElement.off('click');\r\n                }\r\n            }\r\n        }]);\r\n\r\n    angular.module('IndieWise.filters', [])\r\n        .filter('truncate', function () {\r\n            return function (text, length, end) {\r\n                if (angular.isString(text)) {\r\n                    if (isNaN(length))\r\n                        length = 10;\r\n\r\n                    if (end === undefined)\r\n                        end = \"...\";\r\n\r\n                    if (text.length <= length || text.length - end.length <= length) {\r\n                        return text;\r\n                    }\r\n                    else {\r\n                        return String(text).substring(0, length - end.length) + end;\r\n                    }\r\n                }\r\n            };\r\n        })\r\n        .filter('secondsToDateTime', [function () {\r\n            return function (seconds) {\r\n                return new Date(1970, 0, 1).setSeconds(seconds);\r\n            };\r\n        }])\r\n        .filter('linkify', function () {\r\n\r\n            function linkify(_str, type) {\r\n                if (!_str) {\r\n                    return;\r\n                }\r\n\r\n                var _text = _str.replace(/(?:https?\\:\\/\\/|www\\.)+(?![^\\s]*?\")([\\w.,@?!^=%&amp;:\\/~+#-]*[\\w@?!^=%&amp;\\/~+#-])?/ig, function (url) {\r\n                    var wrap = document.createElement('div');\r\n                    var anch = document.createElement('a');\r\n                    anch.href = url;\r\n                    anch.target = \"_blank\";\r\n                    anch.innerHTML = url;\r\n                    wrap.appendChild(anch);\r\n                    return wrap.innerHTML;\r\n                });\r\n\r\n                // bugfix\r\n                if (!_text) {\r\n                    return '';\r\n                }\r\n\r\n                // Twitter\r\n                if (type === 'twitter') {\r\n                    _text = _text.replace(/(|\\s)*@([\\u00C0-\\u1FFF\\w]+)/g, '$1<a href=\"https://twitter.com/$2\" target=\"_blank\">@$2</a>');\r\n                    _text = _text.replace(/(^|\\s)*#([\\u00C0-\\u1FFF\\w]+)/g, '$1<a href=\"https://twitter.com/search?q=%23$2\" target=\"_blank\">#$2</a>');\r\n                }\r\n\r\n\r\n                // Github\r\n                if (type === 'github') {\r\n                    _text = _text.replace(/(|\\s)*@(\\w+)/g, '$1<a href=\"https://github.com/$2\" target=\"_blank\">@$2</a>');\r\n                }\r\n\r\n                return _text;\r\n            }\r\n\r\n            //\r\n            return function (text, type) {\r\n                return linkify(text, type);\r\n            };\r\n        });\r\n        /*.filter('moment', function () {\r\n            return function (input, momentFn /!*, param1, param2, ...param n *!/) {\r\n                var args = Array.prototype.slice.call(arguments, 2),\r\n                    momentObj = moment(input);\r\n                return momentObj[momentFn].apply(momentObj, args);\r\n            };\r\n        })*/\r\n})();","(function () {\r\n    'use strict';\r\n    angular\r\n        .module('IndieWise.services', [])\r\n        .factory('FacebookAngularPatch', ['$q', '$timeout', '$window', function ($q, $timeout, $window) {\r\n\r\n            var fbApiAngular = function () {\r\n\r\n                var params = [].splice.call(arguments, 0);\r\n                var defer = $q.defer();\r\n                var angularWrap = $timeout;\r\n\r\n                $window.fbPromise.then(function () {\r\n\r\n                    // Pushing callback function that will resolve to the params array\r\n                    params.push(function (response) {\r\n                        if (!___.isUndefined(response.error)) {\r\n                            angularWrap(function () {\r\n                                defer.reject(response.error);\r\n                            });\r\n                            return;\r\n                        }\r\n\r\n                        angularWrap(function () {\r\n                            defer.resolve(response);\r\n                        });\r\n                    });\r\n\r\n                    FB.api.apply(FB, params);\r\n\r\n                });\r\n\r\n                return defer.promise;\r\n            };\r\n\r\n\r\n            // using the fbPromise we set up in index.html, we extend the FB SDK with FB.apiAngular\r\n            // now we use FB.apiAngular instead of FB.api, which gives us an angular wrapped promise\r\n            if (angular.isObject($window.FB)) {\r\n                $window.FB.init({\r\n                    appId: '150687055270744',\r\n                    status: true,\r\n                    cookie: true,\r\n                    xfbml: true,\r\n                    version: 'v2.7'\r\n                });\r\n\r\n                $window.FB.AppEvents.activateApp();\r\n\r\n                /*$window.fbPromise.then(function () {\r\n                    FB.apiAngular = fbApiAngular;\r\n                });*/\r\n            }\r\n\r\n            return fbApiAngular;\r\n        }])\r\n        .factory('AuthService', AuthService)\r\n        .factory('UserActions', UserActions)\r\n        .factory('DataService', DataService)\r\n        .factory('socket', ['$rootScope', '$window',function ($rootScope, $window) {\r\n            var socket = io($window.location.origin, {\r\n                'secure': true,\r\n                'reconnect': true,\r\n                'reconnection delay': 500,\r\n                'max reconnection attempts': 10\r\n            });\r\n            return {\r\n                on: function (eventName, callback) {\r\n                    socket.on(eventName, function () {\r\n                        var args = arguments;\r\n                        $rootScope.$apply(function () {\r\n                            callback.apply(socket, args);\r\n                        });\r\n                    });\r\n                },\r\n                emit: function (eventName, data, callback) {\r\n                    socket.emit(eventName, data, function () {\r\n                        var args = arguments;\r\n                        $rootScope.$apply(function () {\r\n                            if (callback) {\r\n                                callback.apply(socket, args);\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n            };\r\n        }])\r\n        .factory('linkify', ['$filter', function ($filter) {\r\n            function _linkifyAsType(type) {\r\n                return function (str) {\r\n                    // (type, str);\r\n                    return $filter('linkify')(str, type);\r\n                };\r\n            }\r\n\r\n            return {\r\n                twitter: _linkifyAsType('twitter'),\r\n                github: _linkifyAsType('github'),\r\n                normal: _linkifyAsType()\r\n            };\r\n        }])\r\n        .service('anchorSmoothScroll', function(){\r\n\r\n            this.scrollTo = function(eID) {\r\n\r\n                // This scrolling function\r\n                // is from http://www.itnewb.com/tutorial/Creating-the-Smooth-Scroll-Effect-with-JavaScript\r\n\r\n                var startY = currentYPosition();\r\n                var stopY = elmYPosition(eID);\r\n                var distance = stopY > startY ? stopY - startY : startY - stopY;\r\n                if (distance < 100) {\r\n                    scrollTo(0, stopY); return;\r\n                }\r\n                var speed = Math.round(distance / 100);\r\n                if (speed >= 20) speed = 20;\r\n                var step = Math.round(distance / 25);\r\n                var leapY = stopY > startY ? startY + step : startY - step;\r\n                var timer = 0;\r\n                if (stopY > startY) {\r\n                    for ( var i=startY; i<stopY; i+=step ) {\r\n                        setTimeout(\"window.scrollTo(0, \"+leapY+\")\", timer * speed);\r\n                        leapY += step; if (leapY > stopY) leapY = stopY; timer++;\r\n                    } return;\r\n                }\r\n                for ( var i=startY; i>stopY; i-=step ) {\r\n                    setTimeout(\"window.scrollTo(0, \"+leapY+\")\", timer * speed);\r\n                    leapY -= step; if (leapY < stopY) leapY = stopY; timer++;\r\n                }\r\n\r\n                function currentYPosition() {\r\n                    // Firefox, Chrome, Opera, Safari\r\n                    if (self.pageYOffset) return self.pageYOffset;\r\n                    // Internet Explorer 6 - standards mode\r\n                    if (document.documentElement && document.documentElement.scrollTop)\r\n                        return document.documentElement.scrollTop;\r\n                    // Internet Explorer 6, 7 and 8\r\n                    if (document.body.scrollTop) return document.body.scrollTop;\r\n                    return 0;\r\n                }\r\n\r\n                function elmYPosition(eID) {\r\n                    var elm = document.getElementById(eID);\r\n                    var y = elm.offsetTop;\r\n                    var node = elm;\r\n                    while (node.offsetParent && node.offsetParent != document.body) {\r\n                        node = node.offsetParent;\r\n                        y += node.offsetTop;\r\n                    } return y;\r\n                }\r\n\r\n            };\r\n\r\n        });\r\n\r\n    UserActions.$inject = ['$rootScope', '$q', 'AuthService', 'DataService', 'UtilsService', '$timeout', '$modal', '$mdMedia'];\r\n    function UserActions($rootScope, $q, AuthService, DataService, UtilsService, $timeout, $modal, $mdMedia) {\r\n        var service = {\r\n            checkAuth: function () {\r\n                var deferred = $q.defer();\r\n                AuthService.isAuthenticated() ? deferred.resolve(true) : deferred.reject(false);\r\n                return deferred.promise;\r\n            },\r\n            markAsWatched: function (video) {\r\n                // Set as watched when user has watched 20% for the video's runtime or 6 seconds\r\n                var time = 0;// (video.attributes.runTime * 200) || 6000;\r\n                return $timeout(function () {\r\n                    //console.log('Marked as Watched');\r\n                    DataService.save('projects/watched', {\r\n                        project_id: video.id\r\n                    });\r\n                }, time);\r\n            },\r\n            cancelWatched: function (promise) {\r\n                $timeout.cancel(promise);\r\n            },\r\n            canCritique: function (filmId) {\r\n                var deferred = $q.defer();\r\n                if (AuthService.isAuthenticated()) {\r\n                    DataService.collection('critiques', {project: filmId, user: AuthService.currentUser.id})\r\n                        .then(function (res) {\r\n                            res.data.data.length\r\n                                // critique exists already from this user\r\n                                ? deferred.reject(res.data.data[0])\r\n                                // user hasn't critiqued yet\r\n                                : deferred.resolve(true);\r\n                        });\r\n                } else {\r\n                    deferred.reject(false);\r\n                }\r\n                return deferred.promise;\r\n            },\r\n            canReact: function (filmId) {\r\n                var deferred = $q.defer();\r\n                if (AuthService.currentUser) {\r\n                    DataService.collection('reactions', {project: filmId, user: AuthService.currentUser.id})\r\n                        .then(function (res) {\r\n                            res.data.data.length\r\n                                // critique exists already from this user\r\n                                ? deferred.reject(res.data.data[0])\r\n                                // user hasn't critiqued yet\r\n                                : deferred.resolve(true);\r\n                        });\r\n                } else {\r\n                    deferred.reject(false);\r\n                }\r\n                return deferred.promise;\r\n            },\r\n            canRate: function (filmId) {\r\n                var deferred = $q.defer();\r\n                if (AuthService.currentUser) {\r\n                    DataService.collection('ratings', {project: filmId, user: AuthService.currentUser.id})\r\n                        .then(function (res) {\r\n                            res.data.ratings.length\r\n                                // critique exists already from this user\r\n                                ? deferred.reject(res.data.ratings[0])\r\n                                // user hasn't critiqued yet\r\n                                : deferred.resolve(true);\r\n                        });\r\n                } else {\r\n                    deferred.reject(false);\r\n                }\r\n                return deferred.promise;\r\n            },\r\n            loginModal: function () {\r\n                if (!$rootScope.authModalOpen) {\r\n                    var options = {\r\n                        controller: SignInModalCtrl,\r\n                        controllerAs: 'SIC',\r\n                        templateUrl: 'auth/sign-in-dialog.html',\r\n                        size: Foundation.MediaQuery.atLeast('medium') ? 'large' : 'full'\r\n                    };\r\n\r\n                    var modalInstance = $modal.open(options);\r\n                    modalInstance.result.then(function (answer) {\r\n                        console.log(answer);\r\n                        $rootScope.authModalOpen = false;\r\n                        zIndexPlayer(true);\r\n                    }, function () {\r\n                        console.log('You cancelled the dialog.');\r\n                        $rootScope.authModalOpen = false;\r\n                        zIndexPlayer(true);\r\n                    });\r\n                    $rootScope.authModalOpen = true;\r\n                }\r\n            }\r\n        };\r\n        return service;\r\n    }\r\n\r\n    AuthService.$inject = ['$rootScope', '$q', '$state', '$http', 'DataService', '$auth', 'API', '$cookies'];\r\n    function AuthService($rootScope, $q, $state, $http, DataService, $auth, API, $cookies) {\r\n        /**\r\n         *\r\n         * @returns {*}\r\n         */\r\n\r\n\r\n        var service = {\r\n            /**\r\n             *\r\n             * @param _userParams\r\n             */\r\n            createUser: function (_userParams) {\r\n\r\n                var user = {\r\n                    email: _userParams.email,\r\n                    password: _userParams.password,\r\n                    password_confirmation:_userParams.passwordCheck,\r\n                    username: _userParams.email,\r\n                    firstName: _userParams.firstName,\r\n                    lastName: _userParams.lastName,\r\n                    fullName: _userParams.firstName + ' ' + _userParams.lastName,\r\n                    country_id: _userParams.country,\r\n                    dob: _userParams.dob,\r\n                    gender: _userParams.gender,\r\n                };\r\n\r\n                return $auth.signup(user)\r\n                    .then(function (userData) {\r\n                        service.error = '';\r\n                        console.log('User ' + userData.username + ' created successfully!');\r\n                        return service.login(_userParams.email, _userParams.password).then(function (res) {\r\n                            console.log(res);\r\n                            service.getCurrentUser().then(function (res) {\r\n                                console.log(res);\r\n                                $state.go('profile.about');\r\n                            });\r\n                        });\r\n                    })\r\n                    .catch(function (error) {\r\n                        return {\r\n                            status: false,\r\n                            errors: service.error = error.data.errors || 'Unknown error from server'\r\n                        };\r\n                    });\r\n            },\r\n            /**\r\n             *\r\n             * @param _userParams\r\n             */\r\n            updateUser: function (_userParams) {\r\n                return DataService.update('users/me', _userParams.id, _userParams).then(function (response) {\r\n                    return response;\r\n                }).catch(function (error) {\r\n                    console.log(error);\r\n                    return error;\r\n                });\r\n            },\r\n            /**\r\n             *\r\n             * @param _userParams\r\n             */\r\n            deleteUser: function (_userParams) {\r\n                return DataService.delete('users/me', _userParams.id).then(function (response) {\r\n                    return response;\r\n                });\r\n            },\r\n            /**\r\n             *\r\n             * @param _userParams\r\n             */\r\n            requestVerification: function () {\r\n                return DataService.collection('request_verification').then(function (response) {\r\n                    return response;\r\n                });\r\n            },\r\n            /**\r\n             *\r\n             * @param Back&\r\n             * @returns {Promise}\r\n             */\r\n            currentUser: null,\r\n            getCurrentUser: function (force) {\r\n                var deferred = $q.defer();\r\n                if(service.isAuthenticated()) {\r\n                    if (!angular.isObject(service.currentUser)) {\r\n                        $http.get(API + 'authenticate').then(function (response) {\r\n                            $cookies.put('iw_token', $auth.getToken(), { secure: true});\r\n                            deferred.resolve($rootScope.AppData.User = service.currentUser = response.data.user);\r\n                        });\r\n                    } else {\r\n                        deferred.resolve(service.currentUser);\r\n                    }\r\n                } else {\r\n                    deferred.reject(false);\r\n                }\r\n                return deferred.promise;\r\n\r\n            },\r\n            /**\r\n             *\r\n             * @param _user\r\n             * @param _password\r\n             * @returns {Promise}\r\n             */\r\n            login: function (_user, _password) {\r\n                return $auth.login({ email: _user, password: _password })\r\n                    .then(function (response) {\r\n                        if (response.status === 200) {\r\n                            $http.defaults.headers.common.Authorization = 'Bearer ' + response.data.token;\r\n                            $auth.setToken(response.data.token);\r\n                            $cookies.put('iw_token', response.data.token, { secure: true});\r\n                            service.getCurrentUser();\r\n                            return true;\r\n                        } else {\r\n                            return {\r\n                                status: false,\r\n                                errors: service.error = { credentials: ['Invalid email or password']}\r\n                            };\r\n                        }\r\n                    })\r\n                    .catch(function(response) {\r\n                        // Handle errors here, such as displaying a notification\r\n                        // for invalid email and/or password.\r\n                        console.log(response);\r\n                        return {\r\n                            status: false,\r\n                            errors: service.error = response.data ? response.data.errors : 'Unknown error from server'\r\n                        };\r\n                    });\r\n            },\r\n            socialLogin: function (provider, isModal) {\r\n                isModal = isModal || false;\r\n                return $auth.authenticate(provider)\r\n                    .then(function(response) {\r\n                        // console.log(response.data);\r\n                        service.getCurrentUser().then(function (user) {\r\n                            self.error = '';\r\n                            if (!isModal) {\r\n                                if (moment(user.created_at).isSame(moment(), 'hour')) {\r\n                                    console.log('User ' + user.fullName + ' created successfully!');\r\n                                    $state.go('profile.about');\r\n                                } else {\r\n                                    if($rootScope.$stateParams.redirect) {\r\n                                        return window.location.href = $rootScope.$stateParams.redirect;\r\n                                    };\r\n                                    $state.go('home');\r\n                                }\r\n                            } else {\r\n                                return user;\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(function(response) {\r\n                        console.log(response);\r\n                        return {\r\n                            status: false,\r\n                            errors: service.error = response || 'Unknown error from server'\r\n                        };\r\n                    });\r\n            },\r\n            /**\r\n             *\r\n             * @returns {Promise}\r\n             */\r\n            logout: function () {\r\n                //var deferred = $q.defer();\r\n                return $http.post(API + 'logout', null).then(function () {\r\n                    $auth.removeToken();\r\n                    $cookies.remove('iw_token');\r\n                    $auth.logout();\r\n                    // localStorage.removeItem('User');\r\n                    // $rootScope.AppData.User = undefined;\r\n                    //deferred.resolve(true);\r\n                });\r\n                //return deferred.promise;\r\n            },\r\n            /**\r\n             *\r\n             * @param email\r\n             * @returns {Promise}\r\n             */\r\n            requestPasswordReset: function (email) {\r\n                return $http.post(API + 'requestPasswordReset', {email: email}).then(function (res) {\r\n                    console.log(res);\r\n                    return res;\r\n                }, function (error) {\r\n                    //console.log(error);\r\n                    return error;\r\n                });\r\n            },\r\n            passwordReset: function (email, password, password_confirmation,token) {\r\n                return $http.post(API + 'resetPassword', {email: email, password: password, password_confirmation: password_confirmation, token: token})\r\n                    .then(function (res) {\r\n                        console.log(res);\r\n                        $state.go('sign_in');\r\n                        return res;\r\n                    }, function (error) {\r\n                        //console.log(error);\r\n                        return error;\r\n                    });\r\n            },\r\n            parseJwt: function(token) {\r\n                var base64Url = token.split('.')[1];\r\n                var base64 = base64Url.replace('-', '+').replace('_', '/');\r\n                return JSON.parse(atob(base64));\r\n            },\r\n            isAuthenticated: function() {\r\n                //var params = $auth.getPayload();\r\n                //console.log(params);\r\n                return $auth.isAuthenticated();\r\n            },\r\n            isVerified: function () {\r\n                // if user is authenticated and currentUser is an object\r\n                if (this.isAuthenticated && angular.isObject(this.currentUser)) {\r\n                    // if currentUser.verified is true\r\n                    if(this.currentUser.verified === 1 || this.currentUser.verified === true) {\r\n                        return true;\r\n                    } else {\r\n                        // restrict continuous checking. If 30 seconds since the last check has passed, try again\r\n                        if (this.lastCheckedVerification === null || moment().isAfter( this.lastCheckedVerification.add(30, 's')) ) {\r\n                            var test = this.throttledVerificationCheck();\r\n                            return this.currentUser.verified = $rootScope.AppData.User.verified = !!test.$$state.status ? test.$$state.value : false;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // not logged in\r\n                    return false;\r\n                }\r\n            },\r\n            throttledVerificationCheck: _.throttle(function () {\r\n                var self = this;\r\n                return $http.get(API + 'check_verification').then(function (response) {\r\n                    self.lastCheckedVerification = moment();\r\n                    return response.data.check;\r\n                });\r\n            }.bind(this), 30000),\r\n            checkedVerification: false,\r\n            lastCheckedVerification: null\r\n        };\r\n\r\n        function _init() {\r\n            service.getCurrentUser();\r\n        }\r\n\r\n        _init();\r\n        return service;\r\n    }\r\n\r\n    DataService.$inject = ['$http', 'API'];\r\n    function DataService($http, API) {\r\n        var vm = this;\r\n\r\n        vm.collection = function (name, params) {\r\n            var data = angular.extend({per_page: 10, page: 1}, params);\r\n            return $http({\r\n                method: 'GET',\r\n                url: API + name,\r\n                params: data\r\n            });\r\n        };\r\n        vm.item = function (name, id, include, search) {\r\n            return $http({\r\n                method: 'GET',\r\n                url: API + name + '/' + id,\r\n                params: {\r\n                    include: include,\r\n                    search: search\r\n                }\r\n            });\r\n        };\r\n        vm.save = function (name, data, params) {\r\n            return $http({\r\n                method: 'POST',\r\n                url: API + name,\r\n                params: params,\r\n                data: data\r\n            });\r\n        };\r\n        vm.update = function (name, id, data, params) {\r\n            return $http({\r\n                method: 'PUT',\r\n                url: API + name + '/' + id,\r\n                params: params,\r\n                data: data\r\n            });\r\n        };\r\n        vm.delete = function (name, id) {\r\n            return $http({\r\n                method: 'DELETE',\r\n                url: API + name + '/' + id\r\n            });\r\n        };\r\n        vm.mail = function (route, params) {\r\n            return $http.post(API + route, params);\r\n        };\r\n\r\n\r\n        // Newsletter Form\r\n        vm.notifyMe = function (params) {\r\n            return $http.post('utils/notify-me.php', params);\r\n        };\r\n\r\n        return vm;\r\n    }\r\n\r\n    SignInModalCtrl.$inject = ['$rootScope', '$timeout', 'AuthService', '$modalInstance'];\r\n    function SignInModalCtrl($rootScope, $timeout, AuthService, $modalInstance) {\r\n        zIndexPlayer();\r\n        $rootScope.metadata.title = 'Sign In';\r\n        var self = this;\r\n        self.user = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        self.doLogin = function (redirect) {\r\n            redirect = redirect || true;\r\n            self.error = false;\r\n            AuthService.login(self.user.email, self.user.password).then(function (res) {\r\n                console.log('Success', res);\r\n                if (redirect) {\r\n                    //$state.go('home');\r\n                    //window.location.reload();\r\n                }\r\n            }, function (res) {\r\n                self.error = res;\r\n                console.log('Failed', res);\r\n            }).then(function () {\r\n                self.ok();\r\n            });\r\n        };\r\n\r\n\r\n        self.authenticate = function (provider) {\r\n            self.error = null;\r\n            AuthService.socialLogin(provider, true).then(function (a) {\r\n                console.log(a);\r\n                self.ok();\r\n            });\r\n        };\r\n\r\n        self.ok = function () {\r\n            $modalInstance.close();\r\n        };\r\n\r\n        self.cancel = function () {\r\n            $modalInstance.dismiss('cancel');\r\n        };\r\n\r\n        $timeout(function () {\r\n            jQuery(document).foundation();\r\n            $timeout(function () {\r\n                jQuery(document).foundation();\r\n            }, 500);\r\n        }, 0);\r\n    }\r\n\r\n    function zIndexPlayer(remove) {\r\n        var vidDiv = jQuery('.flex-video');\r\n        if (vidDiv) {\r\n            !!remove ? vidDiv.css('z-index', '') : vidDiv.css('z-index', 0);\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n","/**\r\n * Utility Functions\r\n * Created by Jerez on 11/8/2015.\r\n */\r\nangular.module('IndieWise.utilities', [])\r\n.factory('UtilsService',  ['$rootScope', '$window', 'DataService', function ($rootScope, $window, DataService) {\r\n        'use strict';\r\n        return {\r\n            compressArray: function (original) {\r\n                var compressed = [];\r\n                // make a copy of the input array\r\n                var copy = original.slice(0);\r\n\r\n                // first loop goes over every element\r\n                for (var i = 0; i < original.length; i++) {\r\n\r\n                    var myCount = 0;\r\n                    // loop over every element in the copy and see if it's the same\r\n                    for (var w = 0; w < copy.length; w++) {\r\n                        if (original[i] == copy[w]) {\r\n                            // increase amount of times duplicate is found\r\n                            myCount++;\r\n                            // sets item to undefined\r\n                            delete copy[w];\r\n                        }\r\n                    }\r\n\r\n                    if (myCount > 0) {\r\n                        var a = new Object();\r\n                        a.value = original[i];\r\n                        a.count = myCount;\r\n                        compressed.push(a);\r\n                    }\r\n                }\r\n\r\n                return compressed;\r\n            },\r\n            parseJwt: function(token) {\r\n                var base64Url = token.split('.')[1];\r\n                var base64 = base64Url.replace('-', '+').replace('_', '/');\r\n                return JSON.parse($window.atob(base64));\r\n            }\r\n        }\r\n    }]);\r\n\r\nif (!String.prototype.endsWith) {\r\n    String.prototype.endsWith = function(searchString, position) {\r\n        var subjectString = this.toString();\r\n        if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\r\n            position = subjectString.length;\r\n        }\r\n        position -= searchString.length;\r\n        var lastIndex = subjectString.indexOf(searchString, position);\r\n        return lastIndex !== -1 && lastIndex === position;\r\n    };\r\n}\r\n\r\n/**\r\n *  @function String.reverse\r\n *  @description Reverse a string\r\n *  @return string\r\n **/\r\nString.prototype.reverse = function(){\r\n    return this.split('').reverse().join('');\r\n};\r\n"]}