(function(){"use strict";function mysql_real_escape_string(str){return str.replace(/[\0\x08\x09\x1a\n\r"'\\\%]/g,function(char){switch(char){case"\x00":return"\\0";case"\b":return"\\b";case"	":return"\\t";case"":return"\\z";case"\n":return"\\n";case"\r":return"\\r";case'"':case"'":case"\\":case"%":return"\\"+char}})}angular.module("IndieWise.controllers",[]).controller("SignInCtrl",SignInCtrl).controller("ForgotPasswordCtrl",ForgotPasswordCtrl).controller("RegisterCtrl",RegisterCtrl).controller("ProfileCtrl",ProfileCtrl).controller("ProfileAboutController",UserAboutController).controller("ProfilePlaylistsController",ProfilePlaylistsController).controller("ProfileVideosController",UserVideosController).controller("ProfileVideoEditCtrl",ProfileVideoEditCtrl).controller("ProfileCritiquesController",UserCritiquesController).controller("ProfileReactionsController",UserReactionsController).controller("ProfileAwardsController",UserAwardsController).controller("ProfileSettingsController",ProfileSettingsController).controller("ProfileUploadController",ProfileUploadController).controller("UserCtrl",UserCtrl).controller("UserAboutController",UserAboutController).controller("UserVideosController",UserVideosController).controller("UserCritiquesController",UserCritiquesController).controller("UserReactionsController",UserReactionsController).controller("UserAwardsController",UserAwardsController).controller("EditProfileCtrl",EditProfileCtrl).controller("MessagesCtrl",MessagesCtrl).controller("NotificationsCtrl",NotificationsCtrl).controller("BodyCtrl",BodyCtrl).controller("HomeCtrl",HomeCtrl).controller("BrowseCtrl",BrowseCtrl).controller("LatestCtrl",LatestCtrl).controller("AdvancedResultsCtrl",AdvancedResultsCtrl).controller("ResultsCtrl",ResultsCtrl).controller("VideoCtrl",VideoCtrl).controller("VideoCritiqueCtrl",VideoCritiqueCtrl).controller("VideoCritiqueEditCtrl",VideoCritiqueEditCtrl);RegisterCtrl.$inject=["$rootScope","$timeout","$q","$state","AuthService","DataService","anchorSmoothScroll","_"];function RegisterCtrl($rootScope,$timeout,$q,$state,AuthService,DataService,anchorSmoothScroll,_){$rootScope.metadata.title="Register";var self=this;self.genresArr=[];self.typesArr=[];self.user={email:"",password:"",passwordCheck:"",firstName:"",lastName:"",gender:false,genres:[],types:[]};self.errors={email:false,gender:false,genres:false,types:false};DataService.getList("Genre",[],[],50).then(function(res){$rootScope.genresList=self.genresList=res.data.data});DataService.getList("Type",[],[],50).then(function(res){$rootScope.typesList=self.typesList=res.data.data});DataService.getList("Country",[],[],300).then(function(res){$rootScope.countryList=self.countryList=res.data.data});self.checkEmailUse=function(){if(angular.isString(self.user.email)&&self.user.email.length){DataService.query("checkEmailUse",{email:mysql_real_escape_string(self.user.email)}).then(function(res){self.errors.email=res.data.length&&res.data[0].verify===1?1:0})}else self.errors.email=false};self.doRegister=function(){self.errors.gender=!self.user.gender;if(angular.isArray(self.genresArr)&&self.genresArr.length){_.each(self.genresArr,function(a){self.user.genres.push(a)});self.user.genres=_.uniq(self.user.genres);self.errors.genres=false}else{self.errors.genres=true}if(angular.isArray(self.typesArr)&&self.typesArr.length){_.each(self.typesArr,function(a){self.user.types.push(a)});self.user.types=_.uniq(self.user.types);self.errors.types=false}else{self.errors.types=true}if(self.errors.gender||self.errors.genres||self.errors.types){anchorSmoothScroll.scrollTo("errors");return false}AuthService.createUser(self.user).then(function(res){},function(res){self.error=res.message}).then(function(){})};self.authenticate=function(provider){self.error=null;AuthService.socialLogin(provider,true).then(function(a){$state.go("profile.about",{reload:true})})};self.syncGenres=function(bool,item){if(bool){self.genresArr.push(item)}else{for(var i=0;i<self.genresArr.length;i++){if(self.genresArr[i].id==item.id){self.genresArr.splice(i,1)}}}};self.isCheckedGenre=function(id){var match=false;for(var i=0;i<self.genresArr.length;i++){if(self.genresArr[i].id==id){match=true}}return match};self.syncTypes=function(bool,item){if(bool){self.typesArr.push(item)}else{for(var i=0;i<self.typesArr.length;i++){if(self.typesArr[i].id==item.id){self.typesArr.splice(i,1)}}}};self.isCheckedType=function(id){var match=false;for(var i=0;i<self.typesArr.length;i++){if(self.typesArr[i].id==id){match=true}}return match};$timeout(function(){jQuery(document).foundation();$timeout(function(){jQuery(document).foundation()},500)},500)}SignInCtrl.$inject=["$rootScope","$timeout","$q","$state","AuthService","$modal","Backand"];function SignInCtrl($rootScope,$timeout,$q,$state,AuthService,$modal,Backand){$rootScope.metadata.title="Sign In";var self=this;self.providers=Backand.getSocialProviders();self.user={email:"",password:""};self.doLogin=function(redirect){redirect=redirect||true;self.error=false;AuthService.login(self.user.email,self.user.password).then(function(res){if(redirect&&angular.isDefined(res)){$state.go("home")}},function(res){self.error=res}).then(function(){})};self.authenticate=function(provider){self.error=null;AuthService.socialLogin(provider,false).then(function(a){})};$timeout(function(){jQuery(document).foundation();$timeout(function(){jQuery(document).foundation()},500)},500)}ForgotPasswordCtrl.$inject=["$rootScope","$state","AuthService"];function ForgotPasswordCtrl($rootScope,$state,AuthService){$rootScope.metadata.title="Password Recovery";var self=this;self.email="";self.doPasswordReset=function(){AuthService.passwordReset(self.email).then(function(res){$rootScope.toastMessage("Check your inbox for our email! Should be there soon.")},function(error){$rootScope.toastMessage("Error: "+error.message)})}}BodyCtrl.$inject=["$rootScope","$localForage","$q","$state","AuthService","$mdToast","UserActions","$sce","DataService","_","$interval"];function BodyCtrl($rootScope,$localForage,$q,$state,AuthService,$mdToast,UserActions,$sce,DataService,_,$interval){var self=this;self.selected=null;$rootScope.AppData.searchText=decodeURIComponent($rootScope.$stateParams.q||"");self.selectedItem="";self.notificationsTemplate=$sce.trustAsResourceUrl("src/directives/notification.html");self.newsletterRegister=newsletterRegister;self.getMatches=function(search){var deferred=$q.defer();var terms=new Parse.Query("Search");terms.contains("term",search.toLowerCase());terms.find().then(function(res){deferred.resolve(res)});return deferred.promise};self.startSearch=function(text){if(text){self.toPage("browse",{q:text})}};$rootScope.generateGenres=function(){var deferred=$q.defer();DataService.getList("Genre",[],[],50).then(function(result){$rootScope.genresList=result.data;$localForage.setItem("genres",result.data);deferred.resolve(result.data)});return deferred.promise};$rootScope.generateTypes=function(){var deferred=$q.defer();DataService.getList("Type",[],[],50).then(function(result){$rootScope.typesList=result.data;$localForage.setItem("types",result.data);deferred.resolve(result)});return deferred.promise};$rootScope.generateCountries=function(){var deferred=$q.defer();DataService.getList("Country",[],[],300).then(function(result){deferred.resolve(result)});return deferred.promise};$rootScope.generateReactions=function(){return[{name:"Happy",emotion:"happy",icon:"happy"},{name:"Sad",emotion:"sad",icon:"sad"},{name:"Offended",emotion:"offended",icon:"annoyed"},{name:"Amused",emotion:"amused",icon:"grinning"},{name:"Mad",emotion:"mad",icon:"mad"},{name:"Furious",emotion:"furious",icon:"angry"},{name:"Awesome",emotion:"awesome",icon:"woah"},{name:"Terrified",emotion:"terrified",icon:"shocked"},{name:"Confused",emotion:"confused",icon:"confused"},{name:"In-Love",emotion:"in-love",icon:"love"},{name:"Amazed",emotion:"amazed",icon:"woah"},{name:"Motivated",emotion:"motivated",icon:"interested"},{name:"Inspired",emotion:"inspired",icon:"interested"},{name:"Bored",emotion:"bored",icon:"bored"},{name:"Sleepy",emotion:"sleepy",icon:"bored"},{name:"Emotional",emotion:"emotional",icon:"emotional"},{name:"Excited",emotion:"excited",icon:"big-smile"},{name:"Nostalgic",emotion:"nostalgic",icon:"nostalgic"},{name:"Annoyed",emotion:"annoyed",icon:"annoyed"},{name:"Sorry",emotion:"sorry",icon:"sad-tear"},{name:"Ashamed",emotion:"ashamed",icon:"sad-tear"},{name:"Meh",emotion:"meh",icon:"meh"},{name:"Special",emotion:"special",icon:"wink"},{name:"Sick",emotion:"sick",icon:"mute"},{name:"Great",emotion:"great",icon:"grinning"},{name:"Better",emotion:"better",icon:"interested"},{name:"Guilty",emotion:"guilty",icon:"sympathetic"},{name:"Hopeful",emotion:"hopeful",icon:"hopeful"},{name:"Hopeless",emotion:"hopeless",icon:"sad"},{name:"Secure",emotion:"secure",icon:"nerdy"},{name:"Blessed",emotion:"blessed",icon:"grinning"},{name:"Interested",emotion:"interested",icon:"interested"},{name:"Comfortable",emotion:"comfortable",icon:"hehe"},{name:"Disturbed",emotion:"disturbed",icon:"confused"},{name:"Stupid",emotion:"stupid",icon:"confused"},{name:"Sexy",emotion:"sexy",icon:"sexy"},{name:"Relaxed",emotion:"relaxed",icon:"happy"},{name:"Empowered",emotion:"Empowered",icon:"happy"},{name:"Cool",emotion:"Cool",icon:"happy"},{name:"Pumped",emotion:"Pumped",icon:"happy"},{name:"Turned On",emotion:"Turned On",icon:"happy"},{name:"Proud",emotion:"Proud",icon:"happy"},{name:"Disgusted",emotion:"Disgusted",icon:"annoyed"},{name:"Sympathetic",emotion:"Sympathetic",icon:"happy"},{name:"Overwhelmed",emotion:"Overwhelmed",icon:"happy"},{name:"Passionate",emotion:"Passionate",icon:"happy"},{name:"Thrilled",emotion:"Thrilled",icon:"happy"},{name:"Loved",emotion:"Loved",icon:"happy"},{name:"Thankful",emotion:"Thankful",icon:"happy"},{name:"Appreciated",emotion:"Appreciated",icon:"happy"},{name:"Romantic",emotion:"Romantic",icon:"love"},{name:"Chill",emotion:"Chill",icon:"happy"},{name:"Pissed Off",emotion:"Pissed Off",icon:"annoyed"},{name:"Accomplished",emotion:"Accomplished",icon:"happy"},{name:"Honored",emotion:"Honored",icon:"happy"},{name:"Relaxed",emotion:"Relaxed",icon:"happy"},{name:"Young",emotion:"Young",icon:"happy"},{name:"Wild",emotion:"Wild",icon:"happy"},{name:"Old",emotion:"Old",icon:"happy"},{name:"Free",emotion:"Free",icon:"happy"},{name:"Epic",emotion:"Epic",icon:"happy"},{name:"Engaged",emotion:"Engaged",icon:"happy"},{name:"Fired Up",emotion:"Fired Up",icon:"happy"},{name:"Detached",emotion:"Detached",icon:"happy"},{name:"Disconnected",emotion:"Disconnected",icon:"confused"},{name:"Connected",emotion:"Connected",icon:"happy"},{name:"Distant",emotion:"Distant",icon:"happy"},{name:"Beautiful",emotion:"Beautiful",icon:"happy"},{name:"Confident",emotion:"confident",icon:"happy"},{name:"Positive",emotion:"positive",icon:"happy"},{name:"Negative",emotion:"negative",icon:"annoyed"},{name:"Heartbroken",emotion:"heartbroken",icon:"emotional"},{name:"Silly",emotion:"Silly",icon:"hehe"},{name:"Disappointed",emotion:"disappointed",icon:"sad"},{name:"Stressed",emotion:"stressed",icon:"annoyed"},{name:"Fantastic",emotion:"fantastic",icon:"big-smile"},{name:"Hungry",emotion:"hungry",icon:"annoyed"},{name:"Shocked",emotion:"shocked",icon:"shocked"},{name:"Frustrated",emotion:"frustrated",icon:"annoyed"},{name:"Engrossed",emotion:"engrossed",icon:"interested"},{name:"Peaceful",emotion:"peaceful",icon:"happy"},{name:"Surprised",emotion:"surprised",icon:"woah"},{name:"Satisfied",emotion:"satisfied",icon:"happy"},{name:"Incomplete",emotion:"incomplete",icon:"sad"},{name:"Complete",emotion:"complete",icon:"happy"},{name:"Entertained",emotion:"entertained",icon:"hehe"},{name:"Enlightened",emotion:"enlightened",icon:"interested"},{name:"Relieved",emotion:"relieved",icon:"happy"},{name:"Concerned",emotion:"concerned",icon:"sympathetic"},{name:"Strong",emotion:"strong",icon:"happy"},{name:"Optimistic",emotion:"optimistic",icon:"happy"},{name:"Discouraged",emotion:"discouraged",icon:"happy"},{name:"Lucky",emotion:"lucky",icon:"happy"},{name:"Scared",emotion:"scared",icon:"happy"},{name:"Brave",emotion:"brave",icon:"happy"},{name:"Naughty",emotion:"naughty",icon:"sexy"},{name:"Alert",emotion:"alert",icon:"happy"},{name:"Alive",emotion:"alive",icon:"happy"},{name:"Perfect",emotion:"perfect",icon:"happy"},{name:"Nervous",emotion:"nervous",icon:"happy"},{name:"Tense",emotion:"tense",icon:"annoyed"},{name:"Eager",emotion:"eager",icon:"happy"},{name:"Impatient",emotion:"impatient",icon:"annoyed"},{name:"Philosophical",emotion:"philosophical",icon:"interested"},{name:"Empty",emotion:"empty",icon:"happy"},{name:"Informed",emotion:"informed",icon:"nerdy"},{name:"Playful",emotion:"playful",icon:"happy"},{name:"Knowledgeable",emotion:"knowledgeable",icon:"nerdy"},{name:"Refreshed",emotion:"refreshed",icon:"happy"},{name:"Fortunate",emotion:"fortunate",icon:"happy"},{name:"Wanted",emotion:"wanted",icon:"annoyed"},{name:"Thirsty",emotion:"thirsty",icon:"happy"},{name:"Desperate",emotion:"desperate",icon:"happy"}]};$rootScope.generateGenres();$rootScope.generateTypes();$rootScope.toastMessage=function(msg){var toast=$mdToast.simple().textContent(msg).position("bottom right").parent(jQuery("#alerts"));$mdToast.show(toast)};$rootScope.toastAction=function(msg,action,cb){var toast=$mdToast.simple().textContent(msg).action(action).highlightAction(false).position("bottom right").parent(jQuery("#alerts"));$mdToast.show(toast).then(function(response){if(response=="ok"){cb()}})};self.toPage=function(state,args){$state.go(state,args)};self.notiURL=function(n){if(!n.is_read){self.markAsRead(n)}self.toPage(n.main_url.state,n.main_url.args);jQuery("#NotificationsArea").foundation("close")};self.markAllAsSeen=function(){var unseenList=_.where($rootScope.AppData.Notifications.list,{seen:false});var i=0;_.each($rootScope.AppData.Notifications.list,function(a){if(!a.seen){a.seen=true}});$interval(function(){DataService.update("Action",unseenList[i++].id,{seen:true})},1e3,unseenList.length).then(function(it){})};self.markAllAsRead=function(){};self.markAsRead=function(obj){DataService.update("Action",obj.id,{seen:true});$rootScope.AppData.Notifications.unseen.false--;obj.seen=true;return obj};self.doSignOut=function(){AuthService.logout().then(function(res){window.location.reload()})};self.openNotificationsMenu=function(){jQuery("#NotificationsArea").foundation("toggle");self.markAllAsSeen()};$rootScope.toFavorites=self.toFavorites=toFavorites;$rootScope.toWatchLater=self.toWatchLater=toWatchLater;$rootScope.checkContains=self.checkContains=checkContains;$rootScope.isSame=self.isSame=isSame;function toFavorites(obj){return UserActions.favorite(obj)}function toWatchLater(obj){return UserActions.watchLater(obj)}function checkContains(obj,search){return _.contains(obj,search)}function isSame(a,b){return moment(a).isSame(b,"hour")}function newsletterRegister(notifyMe){DataService.notifyMe(notifyMe).then(function(res){if(res.data.status=="success"){$rootScope.toastMessage("Thank for joining our newsletter!");return self.notifyMe={}}},function(err){})}}HomeCtrl.$inject=["$rootScope","DataService","$scope","$q","$modal","$interval"];function HomeCtrl($rootScope,DataService,$scope,$q,$modal,$interval){var self=this;$rootScope.metadata.title="Home";self.refresh=function(){DataService.query("getProjectsBy",{order:"reactionCount"}).then(function(result){self.trending=result});DataService.query("getProjectsBy",{order:"iwRating"}).then(function(result){self.highestRated=result});DataService.query("getProjectsBy",{order:"awardCount"}).then(function(result){self.highestAwarded=result});DataService.query("getProjectsBy",{order:"createdAt"}).then(function(result){self.recentFilms=result})};self.refresh();self.refInterval=$interval(self.refresh,3e4);$scope.$on("$destroy",function(){$interval.cancel(self.refInterval)})}BrowseCtrl.$inject=["$scope","$rootScope","$state","DataService","$q","$timeout","$modal","_"];function BrowseCtrl($scope,$rootScope,$state,DataService,$q,$timeout,$modal,_){$rootScope.metadata.title="Browse";var self=this;self.isOpen=false;self.selectedGenres=[];self.selectedTypes=[];self.films=[];self.arrs={genres:[],types:[]};self.filters={sort:$rootScope.$stateParams.sort||"createdAt",genres:[],type:"",search:$rootScope.$stateParams.q||null};$rootScope.generateTypes().then(function(types){var d=$q.defer();self.arrs.types=angular.isArray(self.selectedTypes)&&self.selectedTypes.length?self.selectedTypes:types;return d.promise});$rootScope.generateGenres().then(function(genres){var d=$q.defer();self.arrs.genres=angular.isArray(self.selectedGenres)&&self.selectedGenres.length?self.selectedGenres:genres;return d.promise});self.refresh=function(){$q.all([$rootScope.generateTypes(),$rootScope.generateGenres()]).then(function(values){self.filters.sort=$rootScope.$stateParams.sort||"recent";self.search()})};self.search=function(){var filterField="";switch(self.filters.sort){case"trending":filterField="reactionCount";break;case"rating":filterField="iwRating";break;case"awards":filterField="awardCount";break;case"recent":default:filterField="createdAt";break}DataService.query("getBrowseResults",{sort:filterField,order:"DESC",types:_.pluck(self.selectedTypes,"id").toString(),genres:_.pluck(self.selectedGenres,"id").toString(),search:self.filters.search||""}).then(function(res){return self.films=res.data});$scope.$broadcast("scroll.refreshComplete")};self.selectGenres=function(genre){var exists=_.findWhere(self.selectedGenres,{id:genre.id});!!exists?self.selectedGenres=_.reject(self.selectedGenres,genre):self.selectedGenres.push(genre);self.search()};self.selectTypes=function(type){var exists=_.find(self.selectedTypes,{id:type.id});!!exists?self.selectedTypes=_.reject(self.selectedTypes,type):self.selectedTypes.push(type);self.search()};self.filterBy=function(filter){self.search()};$scope.$watch("",function(newValue,oldValue){});self.refresh()}LatestCtrl.$inject=["$rootScope","$scope","DataService","$timeout","$interval"];function LatestCtrl($rootScope,$scope,DataService,$timeout,$interval){$rootScope.metadata.title="Latest";var self=this;self.init=function(){DataService.query("getLatestReactions").then(function(res){self.reactions=res.data});DataService.query("getLatestNominations").then(function(res){self.nominations=res.data});DataService.query("getLatestCritiques").then(function(res){self.critiques=res.data})};self.init();self.refInterval=$interval(self.init,3e4);$scope.$on("$destroy",function(){$interval.cancel(self.refInterval)});$timeout(jQuery(document).foundation(),0)}ResultsCtrl.$inject=["$scope","$rootScope","$state","DataService","$q","$timeout","$modal","_"];function ResultsCtrl($scope,$rootScope,$state,DataService,$q,$timeout,$modal,_){$rootScope.metadata.title="Search";var self=this;self.isOpen=false;self.selectedGenres=[];self.selectedTypes=[];self.results=[];self.filters={sort:"",genres:[],types:[]};self.arrs={genres:[],types:[]};self.searchParams={obj:"Project",filters:{sort:"recent",genres:[],types:[]}};$rootScope.generateTypes().then(function(types){var d=$q.defer();self.arrs.types=angular.isArray(self.selectedTypes)&&self.selectedTypes.length?self.selectedTypes:types;return d.promise});$rootScope.generateGenres().then(function(genres){var d=$q.defer();self.arrs.genres=angular.isArray(self.selectedGenres)&&self.selectedGenres.length?self.selectedGenres:genres;return d.promise});self.refresh=function(){$q.all([$rootScope.generateTypes(),$rootScope.generateGenres()]).then(function(values){self.search(values[1],values[0])})};self.search=function(genres,types){if(genres&&!genres.length)genres=self.arrs.genres;if(types&&!types.length)types=self.arrs.types;var deferred=$q.defer();var decodedURI=decodeURIComponent($rootScope.$stateParams.q||"");var p1=DataService.getList("Project",[{fieldName:"createdAt",order:"desc"}],[{fieldName:"unlist",operator:"notEquals",value:true}],50,true,true,1,decodedURI).then(function(res){return self.results=res.data})};self.advancedSearch=function(genres,types){};self.selectGenres=function(genre){var exists=_.find(self.selectedGenres,function(a){return a&&a.id==genre.id});!!exists?self.selectedGenres=_.reject(self.selectedGenres,genre):self.selectedGenres.push(genre);self.search(self.selectedGenres,self.selectedTypes)};self.selectTypes=function(type){var exists=_.find(self.selectedTypes,function(a){return a&&a.id==type.objectId});!!exists?self.selectedGenres=_.reject(self.selectedTypes,type):self.selectedTypes.push(type);self.search(self.selectedGenres,self.selectedTypes)};$scope.$on("search",function(text){self.refresh()});self.refresh();jQuery(document).foundation()}AdvancedResultsCtrl.$inject=["$scope","$rootScope","$state","$localForage","$q","$timeout","$modal","_"];function AdvancedResultsCtrl($scope,$rootScope,$state,$localForage,$q,$timeout,$modal,_){$rootScope.metadata.title="Advanced Search";$rootScope.AppData.searchText=decodeURIComponent($rootScope.$stateParams.q||"");var self=this;self.isOpen=false;self.selectedGenres=[];self.selectedTypes=[];self.search={};self.results=[];self.arrs={genres:[],types:[]};$(".collapsible").collapsible({accordion:false});$rootScope.generateTypes().then(function(types){var d=$q.defer();self.arrs.types=angular.isArray(self.selectedTypes)&&self.selectedTypes.length?self.selectedTypes:types;return d.promise});$rootScope.generateGenres().then(function(genres){var d=$q.defer();self.arrs.genres=angular.isArray(self.selectedGenres)&&self.selectedGenres.length?self.selectedGenres:genres;return d.promise});$rootScope.generateCountries().then(function(countries){});self.refresh=function(){$q.all([$rootScope.generateTypes(),$rootScope.generateGenres()]).then(function(values){if($rootScope.$stateParams){self.advancedSearch()}})};self.beginSearch=function(){var deferred=$q.defer();var decodedURI=decodeURIComponent($rootScope.$stateParams.q||"");var filmQuery=new Parse.Query("Project");filmQuery.notEqualTo("unlist",true);filmQuery.contains("name_lowercase",decodedURI);filmQuery.include(["type","owner"]);filmQuery.descending("createdAt");var p1=filmQuery.find().then(function(data){return data});var searchUsersFirstName=new Parse.Query("User");_.each(decodedURI.split(" "),function(a){searchUsersFirstName.matches("first_name",a)});var searchUsersLastName=new Parse.Query("User");_.each(decodedURI.split(" "),function(a){searchUsersLastName.matches("last_name",decodedURI)});var searchUsers=new Parse.Query.or(searchUsersFirstName,searchUsersLastName);var p2=searchUsers.find().then(function(data){return data});$q.all([p1,p2]).then(function(values){self.results=_.flatten(values,true);$scope.$broadcast("scroll.refreshComplete")})};self.advancedSearch=function(){var filmQuery=new Parse.Query("Project");filmQuery.notEqualTo("unlist",true);filmQuery.include(["type","filmingCountry","owner"]);filmQuery.descending("createdAt");if(self.search.director){filmQuery.contains("director",self.search.director)}if(self.search.producers){filmQuery.contains("producers",self.search.producers)}if(self.search.writer){filmQuery.contains("writer",self.search.writer)}if(self.search.type){filmQuery.equalTo("type",self.search.type)}if(self.search.genre){}if(self.search.country){filmQuery.equalTo("filmingCountry",self.search.country)}var p1=filmQuery.find().then(function(data){self.results=data})};self.selectGenres=function(genre){var exists=_.find(self.selectedGenres,function(a){return a&&a.id==genre.id});!!exists?self.selectedGenres=_.reject(self.selectedGenres,genre):self.selectedGenres.push(genre);self.search(self.selectedGenres,self.selectedTypes)};self.selectTypes=function(type){var exists=_.find(self.selectedTypes,function(a){return a&&a.id==type.objectId});!!exists?self.selectedGenres=_.reject(self.selectedTypes,type):self.selectedTypes.push(type);self.search(self.selectedGenres,self.selectedTypes)};self.openMenu=function($mdOpenMenu,ev){var originatorEv=ev;$mdOpenMenu(ev)}}VideoCtrl.$inject=["$rootScope","$scope","Project","$modal","UserActions","UtilsService","DataService","$state","Analytics","$window","$timeout","Backand","_"];function VideoCtrl($rootScope,$scope,Project,$modal,UserActions,UtilsService,DataService,$state,Analytics,$window,$timeout,Backand,_){var self=this;self.loaded=false;self.displayShare=false;self.toggleReactionsList=false;self.emotions=$rootScope.generateReactions();self.critiqueAverage=0;self.activeTab="critiques";self.isFaved=false;self.isSaved=false;self.playerResponsiveMode=$window.localStorage.playerResponsiveMode?JSON.parse($window.localStorage.playerResponsiveMode):_.contains(["small","medium","large"],Foundation.MediaQuery.current);self.tagsArray=[];self.lightsOff=false;self.film=Project.data[0];function init(result){$rootScope.currentTitle=result.name;DataService.getItem("users",result.owner,false).then(function(res){self.film.owner=res.data});if(self.film.video_url.indexOf("youtu")!=-1){self.type="youtube"}else if(self.film.video_url.indexOf("vimeo")!=-1){self.type="vimeo"}else{self.type="other"}self.loaded=true;$rootScope.metadata={title:result.name,description:angular.isString(result.description)?result.description.substr(0,150):"",image:result.thumbnail_url,url:window.location.href};self.qReactions();self.qCritiques();self.qNominations();self.qWins();self.checkUserActions();$rootScope.initWatch=function(){Analytics.trackEvent("video","play",self.film.name);UserActions.markAsWatched(self.film)};$scope.$on("$destroy",function(){$rootScope.initWatch=undefined});self.test=function(){};if(angular.isString(self.film.tags)&&self.film.tags.length){if(self.film.tags.indexOf(",")>-1){self.tagsArray=self.film.tags.split(",")}}DataService.query("getProjectGenres",{id:self.film.id}).then(function(res){self.film.genres=res.data});DataService.query("getRelatedVideo",{id:self.film.id,userId:$rootScope.AppData.User?$rootScope.AppData.User.userId:null}).then(function(res){if(res){self.relatedvideo=res.data[0]}});Backand.on("video_updated_"+self.film.url_id,function(data){self.updateVideoObj()})}self.checkUserActions=function(){UserActions.canReact(self.film.id).then(function(res){self.canReact=res},function(error){self.canReact=error});UserActions.canCritique(self.film.id).then(function(res){self.canCritique=res},function(error){self.canCritique=error});UserActions.canRate(self.film.id).then(function(res){self.canRate=res},function(error){self.canRate=error})};self.qComments=function(){DataService.getList("Comment",[{fieldName:"createdAt",order:"desc"}],[{fieldName:"project",operator:"in",value:self.film.id},{fieldName:"parentComment",operator:"in",value:""}],20,false,false,1).then(function(result){self.comments=result.data})};self.qReactions=function(){DataService.getList("Reaction",[{fieldName:"createdAt",order:"desc"}],[{fieldName:"project",operator:"in",value:self.film.id}],20,false,false,1).then(function(result){self.reactions=result.data;self.chartedReactions=_.countBy(self.reactions.data,function(r){return _.contains(self.reactions.data,r)?r.emotion:undefined});self.reactionCountMax=_.max(self.chartedReactions,function(i){return i});var sortable=[];for(var r in self.chartedReactions)sortable.push([r,self.chartedReactions[r]]);sortable.sort(function(a,b){return b[1]-a[1]});self.chartedReactions=_.object(sortable)})};self.qCritiques=function(){DataService.query("getProjectCritiques",{id:self.film.id}).then(function(result){self.critiques=result.data;self.calcIwAverage(self.critiques)})};self.qNominations=function(){DataService.getList("Nomination",[{fieldName:"createdAt",order:"desc"}],[{fieldName:"project",operator:"in",value:self.film.id}],20,true,true,1).then(function(result){self.nominations=result.data})};self.qWins=function(){DataService.getList("AwardWin",[{fieldName:"createdAt",order:"desc"}],[{fieldName:"project",operator:"in",value:self.film.id}],20,true,true,1).then(function(result){self.wins=result.data})};self.calcIwAverage=function(critiques){var total=0;_.each(critiques,function(a){total+=a.overall});self.critiqueAverage=total/critiques.length};self.getEmoticonByEmotion=function(emotion){var reactions=$rootScope.generateReactions();return _.findWhere(reactions,{emotion:emotion})};self.openMenu=function($mdOpenMenu,ev){var originatorEv=ev;$mdOpenMenu(ev)};self.showMessageDialog=function(){UserActions.checkAuth().then(function(res){if(res){var params={templateUrl:"./src/common/contactUserDialog.html",resolve:{recipient:function(){return self.film.owner}},controller:ContactUserDialogController};var msgModal=$modal.open(params)}},function(err){UserActions.loginModal()})};self.rate=function(direction){UserActions.checkAuth().then(function(res){if(res){var actionVerb="like";if(self.canRate===true){DataService.save("Rating",{author:$rootScope.AppData.User.userId,project:self.film.id,up:direction==="up",down:direction==="down"},false,true).then(function(res){switch(direction){case"up":self.film.rateUpCount++;break;case"down":self.film.rateDownCount++;actionVerb="unlike";break}self.updateVideoObj();UtilsService.recordActivity(res.data,actionVerb);self.checkUserActions()})}else if(angular.isObject(self.canRate)){if(!self.canRate.up&&!self.canRate.down){DataService.update("Rating",self.canRate.id,{up:direction==="up"?true:undefined,down:direction==="down"?true:undefined,direction:direction},false,true,direction).then(function(res){switch(direction){case"up":self.film.rateUpCount++;break;case"down":self.film.rateDownCount++;actionVerb="unlike";break}angular.extend(self.canRate,{up:direction==="up",down:direction==="down"});UtilsService.recordActivity(res.data,actionVerb)})}else if(!!self.canRate.up&&direction==="up"){angular.extend(self.canRate,{up:false});DataService.update("Rating",self.canRate.id,{up:false,direction:direction},false,true,direction).then(function(res){self.film.rateUpCount--;UtilsService.recordActivity(res.data,"like")})}else if(!!self.canRate.down&&direction==="down"){angular.extend(self.canRate,{down:false});DataService.update("Rating",self.canRate.id,{down:false,direction:direction},false,true,direction).then(function(res){self.film.rateDownCount--;UtilsService.recordActivity(res.data,"unlike")})}else if(!!self.canRate.down&&direction==="up"||!!self.canRate.up&&direction==="down"){var up=false,down=false;switch(direction){case"up":up=true;self.film.rateUpCount++;self.film.rateDownCount--;angular.extend(self.canRate,{up:up,down:down});break;case"down":down=true;self.film.rateUpCount--;self.film.rateDownCount++;angular.extend(self.canRate,{up:up,down:down});actionVerb="unlike";break}DataService.update("Rating",self.canRate.id,{up:up,down:down,direction:direction},false,true,direction).then(function(res){UtilsService.recordActivity(res.data,actionVerb)})}}}},function(err){UserActions.loginModal()})};self.react=function(emotion){if(angular.isDefined(emotion)){UserActions.checkAuth().then(function(res){if(res){var actionVerb="react";if(self.canReact===true){DataService.save("Reaction",{user:$rootScope.AppData.User.userId,project:self.film.id,emotion:emotion.emotion},true,true).then(function(resA){self.film.reactionCount++;self.updateVideoObj();UtilsService.recordActivity(resA.data,actionVerb);self.checkUserActions();self.qReactions()})}else if(angular.isObject(self.canReact)){if(self.canReact.emotion!==emotion.emotion){DataService.update("Reaction",self.canReact.id,{emotion:emotion.emotion},false,true).then(function(resA){self.canReact=resA.data;self.updateVideoObj();self.checkUserActions();self.qReactions()})}}}},function(err){UserActions.loginModal()})}};self.canReactIcon=function(){return angular.isObject(self.canReact)?_.findWhere(self.emotions,{emotion:self.canReact.emotion}).icon:false};self.throttledRate=function(direction){return _.throttle(self.rate(direction),2e3)};self.postMessage=function(){UserActions.checkAuth().then(function(res){if(res){DataService.save("Conversation",{participants:[{__metadata:{id:$rootScope.AppData.User.userId},id:$rootScope.AppData.User.userId},{__metadata:{id:self.film.owner.id},id:self.film.owner.id}],messages:[{body:self.myMessage,
from:{__metadata:{id:$rootScope.AppData.User.userId},id:$rootScope.AppData.User.userId}}]},true,true).then(function(result){self.toggleMessageInput();self.myMessage=null;$rootScope.toastMessage("Message sent!");result.participants=self.film.owner;UtilsService.recordActivity(result.data,"message")})}},function(err){UserActions.loginModal()})};self.deleteCritique=function(c,ev){UserActions.checkAuth().then(function(res){if(res){var modalInstance=$modal.open({templateUrl:"./src/common/confirmDialog.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close(true)};$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:Foundation.MediaQuery.atLeast("large")?"tiny":"small",keyboard:true});modalInstance.result.then(function(){DataService.getList("Nomination",[],[{critique:c.id}]).then(function(noms){var nom=noms.data.data[0];DataService.delete("Nomination",nom.id).then(function(){self.film.nominationCount--});DataService.delete("Critique",c.id).then(function(){$rootScope.toastMessage("Your critique was deleted.");self.film.critiqueCount--;self.updateVideoObj();self.checkUserActions();self.critiques=_.reject(self.critiques,function(a){return a.id===c.id})})})},function(){})}})};self.openCritiqueDialog=function($event){if(self.canCritique!==true){return $state.go("video_critique-edit",{video_id:self.film.id,id:self.canCritique.id})}CritiqueDialogController.$inject=["$scope","$modalInstance","critique","$q","Analytics"];function CritiqueDialogController($scope,$modalInstance,critique,$q,Analytics){zIndexPlayer();$scope.critique=critique;$scope.ratingMax=10;$scope.makePrivateHelp=false;DataService.getList("Award",[],[],50).then(function(result){$scope.awardsList=result.data});$scope.dialogModel={awardId:null};$scope.nominated={awardPntr:$scope.dialogModel.awardId,nominator:$rootScope.AppData.User.userId,project:$scope.critique.project,critique:undefined};$scope.starArray=angular.copy([{num:0},{num:1},{num:2},{num:3},{num:4},{num:5},{num:6},{num:7},{num:8},{num:9},{num:10}].reverse());$scope.calcOverall=function(){$scope.critique.overall=($scope.critique.originality+$scope.critique.direction+$scope.critique.writing+$scope.critique.cinematography+$scope.critique.performances+$scope.critique.production+$scope.critique.pacing+$scope.critique.structure+$scope.critique.audio+$scope.critique.music)/10};$scope.$watchCollection("critique",function(){$scope.calcOverall()});$scope.closeDialog=function(){zIndexPlayer(true);$modalInstance.close(true)};$scope.cancel=function(){zIndexPlayer(true);$modalInstance.dismiss("cancel")};$scope.hoveringOver=function(value){$scope.overStar=value;$scope.percent=100*(value/$scope.max)};$scope.postCritique=function(){$scope.critique.url_id=moment().valueOf();DataService.save("Critique",$scope.critique,true,true).then(function(res){var obj=res.data;angular.extend(obj,{userFullName:obj.author.firstName+" "+obj.author.lastName,userUrlId:obj.author.url_id,userAvatar:obj.author.avatar,projectName:self.film.name,projectUrlId:self.film.url_id,projectThumbnail:self.film.thumbnail_url});self.critiques.push(obj);self.calcIwAverage(self.critiques);self.film.critiqueCount++;if(!!$scope.dialogModel.awardId&&angular.isString($scope.dialogModel.awardId)){$scope.nominated.critique=obj.id;$scope.nominated.awardPntr=$scope.dialogModel.awardId;DataService.save("Nomination",$scope.nominated,true).then(function(nom){self.film.nominationCount++;self.updateVideoObj();self.qNominations();UtilsService.recordActivity(obj.data,"judge");UtilsService.recordActivity(obj.data,"nominate");Analytics.trackEvent("video","nominate",self.film.name)},function(error){alert("Failed to create new nomination, with error code: "+error.message)})}else{UtilsService.recordActivity(obj.data,"judge")}Analytics.trackEvent("video","critique",self.film.name)},function(error){alert("Failed to create new critique, with error code: "+error.message)}).then(function(){self.qCritiques();self.checkUserActions();$scope.closeDialog()})}}UserActions.canCritique(self.film.id).then(function(res){if(res){$modal.open({templateUrl:"./src/common/critiqueDialog.html",resolve:{critique:function(){return{originality:0,direction:0,writing:0,cinematography:0,performances:0,production:0,pacing:0,structure:0,audio:0,music:0,overall:0,"private":false,author:$rootScope.AppData.User.userId,body:"",project:self.film.id}}},controller:CritiqueDialogController,keyboard:true})}},function(err){if(angular.isObject(err)){return false}else UserActions.loginModal()})};self.openShareDialog=function(){$modal.open({templateUrl:"./src/common/shareDialog.html",resolve:{Video:function(){return self.film}},size:Foundation.MediaQuery.atLeast("large")?"tiny":"small",controller:["$scope","$modalInstance","Video",function($scope,$modalInstance,Video){zIndexPlayer();$scope.video=Video;$scope.shareLink=window.location.origin+"/alpha/"+Video.url_id;$scope.cancel=function(){zIndexPlayer(true);$modalInstance.close()}}]})};self.openReactionDialog=function(){UserActions.checkAuth(self.film.id).then(function(res){if(res){var modalInstance=$modal.open({templateUrl:"./src/common/reactionDialog.html",resolve:{Video:function(){return self.film},Reaction:function(){return self.canReact||null},Emotions:function(){return self.emotions}},size:Foundation.MediaQuery.atLeast("medium")?"tiny":"full",controller:["$scope","$modalInstance","Video","Reaction","Emotions",function($scope,$modalInstance,Video,Reaction,Emotions){zIndexPlayer();$scope.video=Video;$scope.emotions=Emotions;$scope.getEmoticonByEmotion=function(emotion){return _.findWhere($scope.emotions,{emotion:emotion})};$scope.selectedEmotion=function(e){zIndexPlayer(true);$modalInstance.close(e.originalObject)};$scope.cancel=function(){zIndexPlayer(true);$modalInstance.dismiss("cancel")};$scope.closeDialog=function(){zIndexPlayer(true);$modalInstance.dismiss("cancel")}}]});modalInstance.result.then(function(reaction){self.react(reaction)},function(){}).then(function(){$timeout(function(){jQuery("body").removeClass("is-reveal-open")},500)})}},function(err){if(angular.isObject(err)){return false}else UserActions.loginModal()})};self.openAddToDialog=function(){$modal.open({templateUrl:"./src/common/shareDialog.html",resolve:{Video:function(){return self.film}},size:Foundation.MediaQuery.atLeast("large")?"tiny":"small",controller:["$scope","$modalInstance","Video",function($scope,$modalInstance,Video){zIndexPlayer();$scope.video=Video;$scope.shareLink=window.location.origin+"/alpha/"+Video.url_id;$scope.cancel=function(){zIndexPlayer(true);$modalInstance.close()}}]})};self.toFavorites=function(){return $rootScope.toFavorites(self.film)};self.toWatchLater=function(){return $rootScope.toWatchLater(self.film)};self.toggleWidthMode=function(){$window.localStorage.playerResponsiveMode=self.playerResponsiveMode=!self.playerResponsiveMode;$timeout(function(){$window.videoPlayer.resize();$timeout(function(){$window.videoPlayer.resize()},500)},100)};$scope.$on("$destroy",function(event){});self.updateVideoObj=function(){return DataService.query("getProjectById",{id:self.film.id}).then(function(a){self.film=a.data[0]})};self.toggleLights=function(){self.lightsOff=!self.lightsOff;var overlay=jQuery("#overlay");overlay.fadeToggle(1e3);if(!self.lightsOff){$timeout(function(){overlay.removeClass("highlight")},1e3)}else{overlay.addClass("highlight")}};function zIndexPlayer(remove){var vidDiv=jQuery(".flex-video");!!remove?vidDiv.css("z-index",""):vidDiv.css("z-index",0)}init(self.film)}VideoCritiqueCtrl.$inject=["$rootScope","$scope","Critique","UserActions","DataService"];function VideoCritiqueCtrl($rootScope,$scope,Critique,UserActions,DataService){var self=this;var init=function(critique){self.critique=critique;DataService.query("getProjectById",{id:critique.project},false).then(function(res){self.project=res.data[0]});$scope.commentsParent=self.critique;DataService.query("getCritiqueComments",{id:self.critique.id}).then(function(result){self.comments=result})};init(Critique.data[0])}VideoCritiqueEditCtrl.$inject=["$rootScope","$scope","DataService","$state","Critique"];function VideoCritiqueEditCtrl($rootScope,$scope,DataService,$state,Critique){$scope.critique=Critique.data[0];$scope.ratingMax=10;$scope.makePrivateHelp=false;$scope.editedCritique=angular.copy($scope.critique);$scope.editedCritique.private=!!$scope.editedCritique;DataService.getList("Award","","",50).then(function(result){$scope.awardsList=result.data});$scope.update=function(){$scope.editedCritique.editedAt=moment().toDate();$scope.editedCritique.private=!!$scope.editedCritique.private;DataService.update("Critique",$scope.critique.id,$scope.editedCritique).then(function(res){$rootScope.toastMessage("Critique Updated");if($state.is("video_critique-edit"))$state.go("video_critique",{video_url_id:$rootScope.$stateParams.video_url_id,url_id:$scope.critique.url_id})},function(err){$rootScope.toastMessage("Something went wrong...")})};$scope.starArray=angular.copy([{num:0},{num:1},{num:2},{num:3},{num:4},{num:5},{num:6},{num:7},{num:8},{num:9},{num:10}].reverse());$scope.hoveringOver=function(value){$scope.overStar=value;$scope.percent=100*(value/$scope.max)};$scope.calcOverall=function(){$scope.editedCritique.overall=($scope.editedCritique.originality+$scope.editedCritique.direction+$scope.editedCritique.writing+$scope.editedCritique.cinematography+$scope.editedCritique.performances+$scope.editedCritique.production+$scope.editedCritique.pacing+$scope.editedCritique.structure+$scope.editedCritique.audio+$scope.editedCritique.music)/10};$scope.$watchCollection("editedCritique",function(){$scope.calcOverall()});$scope.cancelled=function(){if($state.is("profile_critique-edit"))$state.go("profile_critique",{id:self.critique.id});if($state.is("video_critique-edit"))$state.go("video_critique",{video_id:$rootScope.$stateParams.video_id,id:$scope.critique.id})}}ProfileCtrl.$inject=["$rootScope","DataService","User","UserStats","AuthService","$modal","_"];function ProfileCtrl($rootScope,DataService,User,UserStats,AuthService,$modal,_){$rootScope.metadata.title="Profile";var self=this;self.user=User.data;self.userStats=UserStats.data[0];self.updateAvatar=_.throttle(updateAvatar,1e3);self.updateCoverPhoto=_.throttle(updateCoverPhoto,1e3);self.getEmoticonByEmotion=function(emotion){var reactions=$rootScope.generateReactions();return _.findWhere(reactions,{emotion:emotion})};self.generatePublicId=function(type){return self.user.url_id+"_"+type+"_"+moment().valueOf()};function updateAvatar(file,message,flow){self.user.avatar=JSON.parse(message).secure_url;AuthService.updateUser(self.user).then(function(res){$rootScope.toastMessage("Avatar Updated!")})}function updateCoverPhoto(file,message,flow){self.user.coverPhoto=JSON.parse(message).secure_url;AuthService.updateUser(self.user).then(function(res){$rootScope.toastMessage("Cover Photo Updated!")})}}ProfileUploadController.$inject=["$rootScope","$state","User","$http","DataService","UtilsService","_"];function ProfileUploadController($rootScope,$state,User,$http,DataService,UtilsService,_){var self=this;self.user=User.data;self.uploadType=2;self.newVideo={name:"",description:"",director:"",writer:"",producers:"",keyCast:"",language:"00000000-0000-6b6e-4371-305344643451",completionDate:"",filmingCountry:undefined,originCountry:undefined,owner:$rootScope.AppData.User.userId,genres:[],type:undefined,runTime:0,thumbnailUrl:"",video_file:undefined,video_url:"",tags:"",unlist:false,disableComments:false,disableCritique:false,nsfw:false,copyrightOwner:false};self.genresArr=[];self.runtime={hours:0,mins:0,secs:0};self.maxDate=moment().toDate();self.selectedGenre=null;DataService.getList("Genre",[],[],50).then(function(res){$rootScope.genresList=self.genresList=res.data.data});DataService.getList("Type",[],[],50).then(function(res){$rootScope.typesList=self.typesList=res.data.data});DataService.getList("Country",[],[],300).then(function(res){$rootScope.countryList=self.countryList=res.data.data});DataService.getList("Language",[],[],300).then(function(res){$rootScope.languageList=self.languageList=res.data.data});self.runtimeToSeconds=function(){self.newVideo.runTime=self.runtime.hours*3600+self.runtime.mins*60+self.runtime.secs};self.isURL=function(str){var urlRegex="[-a-zA-Z0-9@:%._+~#=]{2,256}.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&//=]*)";var url=new RegExp(urlRegex,"i");return str.length<2083&&url.test(str)};self.getThumbnailUrl=function(url){if(url!=null&&url!=""){if(url.indexOf("youtu")!=-1){var video_id=url.indexOf("v=")!=-1?url.split("v=")[1].split("&")[0]:url.split("be/")[1];self.newVideo.hosting_type="youtube";self.newVideo.hosting_id=video_id;return self.newVideo.thumbnailUrl="http://img.youtube.com/vi/"+video_id+"/hqdefault.jpg"}else if(url.indexOf("vimeo")!=-1){var video_id=url.split(".com/")[1];self.newVideo.hosting_type="vimeo";self.newVideo.hosting_id=video_id;$http.jsonp("https://api.vimeo.com/videos/"+video_id+"/pictures.json?callback=JSON_CALLBACK").then(function(res){return self.newVideo.thumbnailUrl=angular.isDefined(res.data[0].sizes[6])?res.data[0].sizes[6]:angular.isDefined(res.data[0].sizes[5])?res.data[0].sizes[5]:angular.isDefined(res.data[0].sizes[4])?res.data[0].sizes[4]:res.data[0].sizes[3]})}else if(url.indexOf("dailymotion")!=-1){var video_id=url.split("video/")[1].split("_")[0];self.newVideo.hosting_type="dailymotion";self.newVideo.hosting_id=video_id;$http.get("https://api.dailymotion.com/video/"+video_id+"?fields=thumbnail_large_url").then(function(res){return self.newVideo.thumbnailUrl=res.data.thumbnail_large_url})}else if(url.indexOf("youku")!=-1){self.newVideo.hosting_type="youku";self.newVideo.hosting_id=undefined}else if(url.indexOf("vine")!=-1){self.newVideo.hosting_type="vine";self.newVideo.hosting_id=undefined;$http.get("/alpha/utils/get-vine-data.php?url="+url).then(function(res){return self.newVideo.thumbnailUrl=res.data})}}};self.validateNewVideoForm=function(){var test=true;var msg="Your project is missing:";if(!self.newVideo.name.length){msg+="Project Title, ";$rootScope.toastMessage();test=false}if(self.uploadType==2&&!self.newVideo.video_url.length){msg+="Video URL, ";test=false}if(angular.isUndefined(self.genresArr)||angular.isArray(self.genresArr)&&!self.genresArr.length){msg+="Genres, ";test=false}if(angular.isUndefined(self.newVideo.type)){msg+="Type, ";test=false}if(angular.isUndefined(self.newVideo.language)){msg+="Language, ";test=false}if(self.newVideo.runTime==0){msg+="Duration";test=false}if(!test){$rootScope.toastMessage(msg);alert(msg)}return test};self.syncGenres=function(bool,item){if(bool){self.genresArr.push(item)}else{for(var i=0;i<self.genresArr.length;i++){if(self.genresArr[i].id==item.id){self.genresArr.splice(i,1)}}}};self.isCheckedGenre=function(id){var match=false;for(var i=0;i<self.genresArr.length;i++){if(self.genresArr[i].id==id){match=true}}return match};self.submitNewVideo=function(){if(!!self.validateNewVideoForm()){if(angular.isArray(self.genresArr)&&self.genresArr.length){_.each(self.genresArr,function(a){self.newVideo.genres.push({genre:a.id})})}var filmParams={urlId:moment().valueOf(),name:self.newVideo.name,description:self.newVideo.description,director:self.newVideo.director,writer:self.newVideo.writer,producers:self.newVideo.producers,keyCast:self.newVideo.keyCast,completionDate:moment(self.newVideo.completionDate).toDate(),owner:self.newVideo.owner,runTime:self.newVideo.runTime,video_url:self.newVideo.video_url,thumbnail_url:self.newVideo.thumbnailUrl,hosting_type:self.newVideo.hosting_type,hosting_id:self.newVideo.hosting_id,tags:self.newVideo.tags,disableComments:self.newVideo.disableComments||false,disableCritique:self.newVideo.disableCritique||false,language:self.newVideo.language,filmingCountry:self.newVideo.filmingCountry,originCountry:self.newVideo.originCountry,type:self.newVideo.type,unlist:false};DataService.save("Project",filmParams,true,true).then(function(film){DataService.update("Project",film.data.id,{genres:self.newVideo.genres},true);$rootScope.toastMessage("Video Uploaded Successfully");UtilsService.recordActivity(film,"upload");$state.go("video",{url_id:film.data.url_id});return film},function(err){alert("Failed to create new video, with error: "+err.message)})}else{$rootScope.toastMessage("Please check the form!")}};self.uploadArtwork=function(message){self.newVideo.thumbnailUrl=JSON.parse(message).secure_url}}ProfileVideoEditCtrl.$inject=["$rootScope","$state","$modal","UserActions","Project","DataService","anchorSmoothScroll","_"];function ProfileVideoEditCtrl($rootScope,$state,$modal,UserActions,Project,DataService,anchorSmoothScroll,_){var self=this;self.project=Project.data;self.uploadType=2;self.genresArr=self.project.genres;self.saveComplete=false;self.editedProject=angular.copy(self.project);angular.extend(self.editedProject,{type:self.project.type.id,language:self.project.language.id,filmingCountry:self.project.filmingCountry.id,completionDate:moment(self.project.completionDate).year()});if(self.project.runTime){var totalSeconds=self.project.runTime;self.runtime={};self.runtime.hours=Math.floor(totalSeconds/3600);totalSeconds%=3600;self.runtime.mins=Math.floor(totalSeconds/60);self.runtime.secs=totalSeconds%60}if(angular.isString(self.project.video_url)){self.uploadType=2}DataService.getList("Genre",[],[],50).then(function(res){$rootScope.genresList=self.genresList=res.data.data});DataService.getList("Type",[],[],50).then(function(res){$rootScope.typesList=self.typesList=res.data.data});DataService.getList("Country",[],[],300).then(function(res){$rootScope.countryList=self.countryList=res.data.data});DataService.getList("Language",[],[],300).then(function(res){$rootScope.languageList=self.languageList=res.data.data});self.syncGenres=function(bool,item){if(bool){DataService.save("Genres",{project:self.editedProject.id,genre:item.id},true,true).then(function(res){self.genresArr.push(res.data)})}else{for(var i=0;i<self.genresArr.length;i++){if(self.genresArr[i].genre.id==item.id){DataService.delete("Genres",self.genresArr[i].id);self.genresArr.splice(i,1)}}}};self.isCheckedGenre=function(id){var match=false;for(var i=0;i<self.genresArr.length;i++){if(self.genresArr[i].genre.id==id){match=true}}return match};self.runtimeToSeconds=function(){self.editedProject.runTime=self.project.runTime=self.runtime.hours*3600+self.runtime.mins*60+self.runtime.secs};self.isURL=function(str){var urlRegex="[-a-zA-Z0-9@:%._+~#=]{2,256}.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&//=]*)";var url=new RegExp(urlRegex,"i");return str.length<2083&&url.test(str)};self.getThumbnailUrl=function(url){if(url!=null&&url!=""){if(url.indexOf("youtu")!=-1){var video_id=url.split("v=")[1].split("&")[0];return self.editedProject.thumbnail_url=self.project.thumbnail_url="http://img.youtube.com/vi/"+video_id+"/mqdefault.jpg"}else if(url.indexOf("vimeo")!=-1){var video_id=url.split(".com/")[1];$http.jsonp("http://www.vimeo.com/api/v2/video/"+video_id+".json?callback=JSON_CALLBACK").then(function(res){return self.editedProject.thumbnail_url=self.project.thumbnail_url=res.data[0].thumbnail_large})}else if(url.indexOf("dailymotion")!=-1){var video_id=url.split("video/")[1].split("_")[0];$http.get("https://api.dailymotion.com/video/"+video_id+"?fields=thumbnail_large_url").then(function(res){return self.editedProject.thumbnail_url=self.project.thumbnail_url=res.data.thumbnail_large_url})}else if(url.indexOf("youku")!=-1){}else if(url.indexOf("vine")!=-1){$http.get("/alpha/utils/get-vine-data.php?url="+url).then(function(res){return self.editedProject.thumbnail_url=self.project.thumbnail_url=res.data})}}};self.uploadArtwork=function(message){self.editedProject.thumbnailUrl=JSON.parse(message).secure_url};self.updateProject=function(){DataService.update("Project",self.editedProject.id,self.editedProject,false,true).then(function(res){self.saveComplete=true;anchorSmoothScroll.scrollTo("success");$rootScope.toastMessage("Profile Updated")})}}ProfilePlaylistsController.$inject=["$rootScope","DataService","User","Playlists","UserActions","_","$interval","$http"];function ProfilePlaylistsController($rootScope,DataService,User,Playlists,UserActions,_,$interval,$http){var self=this;self.user=User.data;self.playlists=Playlists.data;self.playlistItems=[];var hasFave=_.findWhere(self.playlists,{name:"Favorites","private":true});self.selectedPlaylist=!!hasFave?hasFave.id:self.playlists.data.length?self.playlists.data[0].id:null;self.loadPlaylistItems=function(){DataService.query("getUserPlaylistItems",{id:self.selectedPlaylist,userId:self.user.id}).then(function(res){self.playlistItems=res.data})};self.removeItem=function(id){UserActions.checkAuth().then(function(res){if(res){DataService.delete("PlaylistItem",id).then(function(){return self.playlists=_.reject(self.playlists.data,function(a){return a.id===id})})}})};if(angular.isString(self.selectedPlaylist)){self.loadPlaylistItems()}if(self.user.id="00000000-0000-6463-7952-633635765552"){}}ProfileSettingsController.$inject=["$rootScope","AuthService","User","Genres","UserTypes","DataService","anchorSmoothScroll","_","$window"];function ProfileSettingsController($rootScope,AuthService,User,Genres,UserTypes,DataService,anchorSmoothScroll,_,$window){var self=this;self.countries=[];self.genresArr=[];self.typesArr=[];self.saveComplete=false;User.data.dob=moment(User.data.dob).startOf("day").toDate();self.user=User.data;self.genresArr=Genres.data.data;self.typesArr=UserTypes.data.data;self.updateUser=_.throttle(updateUser,1e3);var pwSetting=$window.localStorage.getItem("pwAllowPushNotifications");self.notificationsActive=pwSetting!=="undefined"&&!!JSON.parse(pwSetting);self.toggleNotifications=toggleNotifications;function toggleNotifications(){$window.localStorage.setItem("pwAllowPushNotifications",self.notificationsActive);if(!!self.notificationsActive){if($window.pwCanUseServiceWorkers()||angular.isDefined(window.safari)){if($window.chrome&&$window.pushwoosh.isBrowserChrome()){$window.pushwoosh.subscribeAtStart()}else{$window.pushwooshSubscribe();$window.pushwooshSetTags({userId:self.user.id,urlId:self.user.url_id,username:self.user.email,firstName:self.user.firstName,lastName:self.user.lastName})}}}}function updateUser(){AuthService.updateUser(self.user).then(function(res){self.saveComplete=true;anchorSmoothScroll.scrollTo("success");$rootScope.toastMessage("Profile Updated")})}DataService.getList("Country",[],[],250).then(function(response){self.countries=response.data});DataService.getList("Genre",[],[],50).then(function(res){self.genresList=res.data.data});DataService.getList("Type",[],[],50).then(function(res){self.typesList=res.data.data});self.syncGenres=function(bool,item){if(bool){self.genresArr.push(item);DataService.save("Genres",{user:self.user.id,genre:item.id})}else{for(var i=0;i<self.genresArr.length;i++){if(self.genresArr[i].genre==item.id){DataService.delete("Genres",self.genresArr[i].id);self.genresArr.splice(i,1)}}}};self.isCheckedGenre=function(id){var match=false;for(var i=0;i<self.genresArr.length;i++){if(self.genresArr[i].genre==id){match=true}}return match};self.syncTypes=function(bool,item){if(bool){self.typesArr.push(item);DataService.save("UserTypes",{user:self.user.id,type_id:item.id,type_name:item.name})}else{for(var i=0;i<self.typesArr.length;i++){if(self.typesArr[i].type_id==item.id){DataService.delete("UserTypes",self.typesArr[i].id);self.typesArr.splice(i,1)}}}};self.isCheckedType=function(id){var match=false;for(var i=0;i<self.typesArr.length;i++){if(self.typesArr[i].type_id==id){match=true}}return match}}UserCtrl.$inject=["$rootScope","DataService","User","UserStats","$state","UserActions","$modal","_"];function UserCtrl($rootScope,DataService,User,UserStats,$state,UserActions,$modal,_){var self=this;self.user=User.data[0];self.userStats=UserStats.data[0];$rootScope.metadata.title="Profile: "+self.user.firstName+" "+self.user.lastName;self.showMessageDialog=function(){ContactUserDialogController.$inject=["$rootScope","$scope","$modalInstance","UserActions","DataService","UtilsService","recipient"];function ContactUserDialogController($rootScope,$scope,$modalInstance,UserActions,DataService,UtilsService,recipient){$scope.recipient=recipient;$scope.model={myMessage:null};$scope.postMessage=function(){UserActions.checkAuth().then(function(res){if(res){DataService.save("Conversation",{url_id:moment().valueOf(),subject:$rootScope.AppData.User.fullName+", "+$scope.recipient.firstName+" "+$scope.recipient.lastName},true,true).then(function(convo){DataService.update("Conversation",convo.data.id,{participants:[{user:$rootScope.AppData.User.userId},{user:$scope.recipient.id}],messages:[{body:$scope.model.myMessage,from:$rootScope.AppData.User.userId}]},true,true).then(function(convo){$scope.model.myMessage=null;$rootScope.toastMessage("Message sent!");UtilsService.recordActivity(convo,"message");$scope.closeDialog()})})}},function(err){$rootScope.toastMessage("Message failed. Please log in!")})};$scope.closeDialog=function(){$modalInstance.close(true)};$scope.cancel=function(){$modalInstance.dismiss("cancel")}}UserActions.checkAuth().then(function(res){if(res){$modal.open({templateUrl:"./src/common/contactUserDialog.html",resolve:{recipient:function(){return self.user}},controller:ContactUserDialogController})}},function(err){UserActions.loginModal()})}}UserAboutController.$inject=["$rootScope","DataService","User","$state","UserActions"];function UserAboutController($rootScope,DataService,User,$state,UserActions){var self=this;self.user=$state.is("profile.about")?User.data:User.data[0]}UserVideosController.$inject=["$rootScope","DataService","User","Videos","$modal","UserActions","_"];function UserVideosController($rootScope,DataService,User,Videos,$modal,UserActions,_){var self=this;self.user=User.data;self.projects=Videos.data;self.deleteProject=function(videoId){UserActions.checkAuth().then(function(res){if(res){var modalInstance=$modal.open({templateUrl:"./src/common/confirmDialog.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close(true)};$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:Foundation.MediaQuery.atLeast("large")?"tiny":"small",keyboard:true});modalInstance.result.then(function(){DataService.delete("Project",videoId).then(function(){self.projects=_.reject(self.projects.data,function(a){return a.id===videoId})})},function(){})}})}}UserCritiquesController.$inject=["$rootScope","User","Critiques","Critiqued"];function UserCritiquesController($rootScope,User,Critiques,Critiqued){var self=this;self.user=User.data;self.critiques=Critiques.data;self.critiqued=Critiqued.data}UserReactionsController.$inject=["$rootScope","User","Reactions","Reacted","_"];function UserReactionsController($rootScope,User,Reactions,Reacted,_){var self=this;self.user=User.data;self.reactions=Reactions.data;self.reacted=Reacted.data;self.getEmoticonByEmotion=function(emotion){var reactions=$rootScope.generateReactions();return _.findWhere(reactions,{emotion:emotion})}}UserAwardsController.$inject=["$rootScope","DataService","User","Awards","Nominations"];function UserAwardsController($rootScope,DataService,User,Awards,Nominations){var self=this;self.user=User.data;self.awards=Awards.data;self.nominations=Nominations.data}EditProfileCtrl.$inject=["$rootScope","$scope","AuthService","DataService"];function EditProfileCtrl($rootScope,$scope,AuthService,DataService){$rootScope.metadata.title="Edit Profile";var self=this;self.user={email:$rootScope.AppData.UserData.email,usertag:$rootScope.AppData.UserData.usertag,first_name:$rootScope.AppData.UserData.first_name,last_name:$rootScope.AppData.UserData.last_name,bio:$rootScope.AppData.UserData.bio,avatar:$rootScope.AppData.UserData.avatar};self.socials={facebook:false,twitter:false,google:false,instagram:false};self.getGenres=function(){$rootScope.generateGenres()};self.updateUser=function(){AuthService.updateUser(self.user).then(function(res){$rootScope.toastMessage("Profile Updated")})};self.updateAvatar=function(flow){self.user.avatar="http://getindiewise.com/alpha/utils/files/"+flow.files[0].file.name;self.updateUser()}}MessagesCtrl.$inject=["$rootScope","Conversations","DataService","$modal","UserActions","UtilsService","$q","_"];function MessagesCtrl($rootScope,Conversations,DataService,$modal,UserActions,UtilsService,$q,_){$rootScope.metadata.title="Messages";var self=this;self.conversations=Conversations.data;self.newMode=false;self.newConversation=newConversation;self.fetchConvos=fetchConvos;self.querySearch=querySearch;self.deleteConvo=deleteConvo;self.postReply=postReply;self.selectConvo=selectConvo;self.myReply=null;function selectConvo(convo){self.newMode=false;self.selectedConvo=convo;self.currentParticipants=convo.participants;DataService.getList("Message",[{fieldName:"createdAt",order:"desc"}],[{fieldName:"conversation",operator:"in",value:convo.id}],30,false,true).then(function(msgs){self.messages=msgs.data})}function postReply(){UserActions.checkAuth().then(function(res){if(res){DataService.save("Message",{body:self.myReply,conversation:self.selectedConvo.id,from:$rootScope.AppData.User.userId},true,true).then(function(result){self.myReply=null;self.messages.relatedObjects.users[result.data.from.id]=result.data.from;result.data.from=result.data.from.id;self.messages.data.push(result.data);UtilsService.recordActivity(result.data)})}},function(err){UserActions.loginModal()})}function newConversation(){self.newMode=true;self.newConvo={participants:[],body:""};self.postNewMsg=postNewMsg;function postNewMsg(){var newConvoObj=new Parse.Object("Conversation");newConvoObj.save().then(function(convo){self.newConvo.participants.push($rootScope.AppData.User.userId);var relParticipants=convo.relation("participants");relParticipants.add(self.newConvo.participants);newConvoObj.save();var message=new Parse.Object("Message");message.set("body",self.newConvo.body);message.set("parent",convo);message.set("from",$rootScope.AppData.User.userId);message.save().then(function(result){self.myReply=null;self.newConvo.body=null;self.selectedConvo=convo;self.currentParticipants=self.newConvo.participants;self.messages=[result];UtilsService.recordActivity(result)}).then(function(){var convoDup=angular.copy(convo);convoDup.participants=self.newConvo.participants;convoDup.latest=self.messages;self.convos.push(convoDup);self.newMode=false})})}}function querySearch(query){var deferred=$q.defer();var searchUsersFirstName=new Parse.Query("User");searchUsersFirstName.notEqualTo("objectId",$rootScope.AppData.User.userId);_.each(query.split(" "),function(a){searchUsersFirstName.startsWith("first_name",a)});var searchUsersLastName=new Parse.Query("User");searchUsersLastName.notEqualTo("objectId",$rootScope.AppData.User.userId);_.each(query.split(" "),function(a){searchUsersLastName.startsWith("last_name",a)});var searchUsers=new Parse.Query.or(searchUsersFirstName,searchUsersLastName);searchUsers.find().then(function(data){_.each(data,function(a){a.name=a.first_name+" "+a.last_name;a.image=a.avatar||"./assets/img/avatar-1.png";a.email="     "});deferred.resolve(data)});return deferred.promise}function fetchConvos(){DataService.query("getConversations",{userId:$rootScope.AppData.User.userId}).then(function(result){self.conversations=result.data})}function deleteConvo(){var confirm=$modal.confirm().title("Delete Conversation?").ok("Yes").cancel("No");$modal.show(confirm).then(function(){var me=$rootScope.AppData.User.userId;var message=new Parse.Object("Message");message.set("body",me.first_name+" "+me.last_name+" left the conversation...");message.set("parent",{__type:"Pointer",className:"Conversation",objectId:self.selectedConvo.id});message.set("from",$rootScope.AppData.User.userId);message.save().then(function(result){var relParticipants=self.selectedConvo.relation("participants");relParticipants.remove(me);self.selectedConvo.set("updatedAt",moment().toDate());self.selectedConvo.save().then(function(){
self.myReply=null;self.messages=[];self.newMode=false;self.selectedConvo=null;self.currentParticipants=null;fetchConvos()})})},function(){})}}NotificationsCtrl.$inject=["$rootScope","UserActions","UtilsService","_"];function NotificationsCtrl($rootScope,UserActions,UtilsService,_){var self=this;self.refresh=function(){};self.markAllAsRead=function(){};self.markAsRead=function(n){};self.refresh()}})();